{"version":3,"sources":["i18n/index.ts","i18n/en.ts","i18n/vn.ts","i18n/rs.ts","_theme.tsx","components/CatchFishTypeInput.tsx","core/utils.ts","components/CatchQuantityInput.tsx","components/CatchDurationInput.tsx","api/freepcis.ts","api/index.ts","api/catch.ts","hooks/use-ipfs.ts","components/CatchReview.tsx","data/catchPrompt.tsx","components/FishDataConfirm.tsx","components/LandingDataCard.tsx","data/landingPrompt.tsx","components/SaleFishSelectInput.tsx","data/salePrompt.tsx","components/VesselCaptainNameInput.tsx","components/VesselIDInput.tsx","data/gear.tsx","components/FishingGearInput.tsx","components/CaptainProfileReview.tsx","components/VesselCertificationInput.tsx","data/setupCaptainProfilePrompt.tsx","api/csvToXml/csvHeader.tsx","api/csvToXml/index.ts","api/csvToXml/catchAndProcessXml.ts","api/csvToXml/aggregationDisaggregationXml.ts","components/CsvFileInput.tsx","data/testPrompt.tsx","components/DappProducerReceiveInput.tsx","data/receivePrompt.tsx","api/csvToXml/trawlerCsvToXml.ts","components/TrawlerEpcisToolsInput.tsx","data/csvPrompt.tsx","_data.tsx","components/CaptainProfile.tsx","components/Header.tsx","App.tsx","serviceWorker.ts","index.tsx","api/dapp.ts"],"names":["strings","LocalizedStrings","en","input_placeholder","atlanticCod","blueCrab","dolphinFish","grouper","kingCrab","pacificCod","redSnapper","seaCucumber","shark","swordfish","albacoreTuna","bigeyeTuna","skipjackTuna","yellowfinTuna","bluefinTuna","prompt_welcomeNew","prompt_introduceNemo","prompt_vesselCaptainName","captain","prompt_vesselName","prompt_vesselID","imo","mmsi","prompt_fishingGearTypeCode","selectGearBase","selectGearSubtype","selectGearOptionalType","prompt_productionMethod","aquaculture","inlandFishery","marineFishery","prompt_ownership","prompt_vesselOwnerName","prompt_organization","prompt_organizationName","prompt_certificationHolder","certification","form_certificationAgencyLabel","form_certificationValueLabel","form_certificationIdentificationLabel","form_certificationAgencyPlaceholder","form_certificationValuePlaceholder","form_certificationIdentificationPlaceholder","form_firstNamePlaceholder","form_lastNamePlaceholder","form_middleNamePlaceholder","prompt_certificationStandard","prompt_unitOfMeasurement","prompt_setupProfileCompleted","prompt_profileDone","kilogram","pound","prompt_welcome","prompt_end","prompt_anotherOne","prompt_unavailable","prompt_initial","yes","no","days","weeks","months","addNew","csv","receive","catch","transport","landing","sale","test","nothing","prompt_csv","csv_catchProcess","csv_aggregationDisaggregation","csv_shipReceive","csv_transshipment","csv_trawlerEpcisTools","prompt_nothing","prompt_test","prompt_receive","prompt_catch","prompt_catchFishType","prompt_catchDuration","prompt_catchHarvestStartDate","prompt_catchHarvestEndDate","prompt_catchArea","prompt_catchQuantity","prompt_catchQuantityListDone","prompt_catchReview","prompt_catchCongrat","prompt_preservation","add_quantityPlaceholder","chilled","salted","fresh","prompt_sale","prompt_size","prompt_weight","prompt_value","prompt_saleConfirmation","prompt_landing","prompt_landingConfirm","inprogress","finished","prompt_confirmData","dataIsAccurate","dataIsInaccurate","prompt_errorReported","date","time","timeZone","container","geoLocation","surroundingNet","withPurseLines","oneBoatOperated","twoBoatsOperated","withoutPurseLines","seineNets","beachSeines","vesselSeines","danishSeines","scottishSeines","pairSeines","seineNetsNotSpecified","trawls","bottomTrawls","beamTrawls","otterTrawls","pairTrawls","nephropsTrawls","shrimpTrawls","bottomTrawlsNotSpecified","midwaterTrawls","midwaterTrawlsNotSpecified","otterTwinTrawls","otterTrawlsNotSpecified","pairTrawlsNotSpecified","otherTrawlsNotSpecified","dredges","boatDredges","handDredges","liftNets","portableLiftNets","boatOperatedLiftNets","shoreOperatedStationaryLiftNets","liftNetsNotSpecified","fallingGear","castNets","fallingGearNotSpecified","gillnetsAndEntanglingNets","setGillnetsAnchored","driftnets","encirclingGillnets","fixedGillnetsOnStakes","trammelNets","combinedGillnetsTrammelNets","gillnetsAndEntanglingNetsNotSpecified","gillnetsNotSpecified","traps","stationaryUncoveredPoundNets","pots","fykeNets","stowNets","barriersFencesWeirsEtc","aerialTraps","trapsNotSpecified","hooksAndLines","handlinesAndPoleLinesHandOperated","handlinesAndPoleLinesMechanized","setLonglines","driftingLonglines","longlinesNotSpecified","trollingLines","hooksAndLinesNotSpecified","grapplingAndWounding","harpoons","harvestingMachines","pumps","mechanizedDredges","harvestingMachinesNotSpecified","miscellaneousGear","recreationalFishingGear","gearNotKnowOrNotSpecified","vn","rs","prompt_quantity","languages","key","value","flag","label","theme","background","headerBgColor","headerFontColor","botBubbleColor","botFontColor","userBubbleColor","userFontColor","dangerColor","CircleButton","styled","button","prop","StyledColumn","div","RefreshButton","onClick","window","location","reload","StyledInput","input","LabeledInput","className","rest","Divider","hr","ReviewInput","StyledButton","p","FillButton","StyledSubmitButton","props","StyledColumnForm","form","StyledRowForm","RowDiv","StyledSelect","Select","StyledLabel","StyledForm","createSelectOptionList","list","map","numberValidator","isNaN","appendTrigger","i","order","trigger","options","o","j","triggers","hideInput","waitAction","message","id","createOptionLabel","createPromptArray","structure","reduce","acc","src","length","push","AmountInput","QRScanButton","QRCodeDiv","QRCodeContainer","DurationTypeSelect","DurationValueInput","freepcisVault","capture","uri","auth","username","password","sendCatchEvent","body","a","async","headers","Headers","set","btoa","fetch","method","response","console","log","dapp","freepcis","generateQuantityElementList","fishCode","quantityList","epcClass","quantity","uom","join","generateNonEmptyElement","element","createCatchPayload","catchArea","harvestEndDate","harvestStartDate","firstName","lastName","fishingGearType","organizationName","productionMethod","language","vesselIdType","vesselIdString","vesselName","vesselOwnerName","vesselCertificationAgency","vesselCertificationIdentification","vesselCertificationStandard","vesselCertificationValue","dt","DateTime","local","creationDate","toISO","eventTimeZoneOffset","toFormat","Promise","resolve","fallback","latitude","longitude","navigator","geolocation","getCurrentPosition","position","coords","quantityElementList","vesselCaptainName","upper","productionMethodCode","productionMethodCodeMap","vesselID","vesselFlagState","debug","require","ipfs","Ipfs","create","repo","api","dappVault","ipfsRepo","silent","useIpfs","opts","useState","isIpfsReady","setIpfsReady","ipfsInitError","setIpfsInitError","useEffect","error","stop","Container","animated","QuantityItem","promptOrder","promptStructure","add_catchFishType","component","triggerNextStep","fishOptionList","disabled","setDisabled","setValue","useCatchCacheState","setCatchCache","onSubmit","e","preventDefault","fishKey","onChange","classes","selectControl","selectInput","replace","add_catchDuration","durationList","useFormState","durationType","formState","number","raw","catchCache","endDate","startDate","minus","values","durationValue","toISODate","required","add_catchQuantity","steps","useProfileState","unitOfMeasurement","profile","qrCode","setQRCode","amount","uomMap","code","uuid","size","add_catchArea","add_catchQuantityDone","add_catchReview","apiUrl","useLanguageState","sendMethod","setSendMethod","success","setSuccess","setOriginId","ipfsHash","setIpfsHash","catchCacheRest","text","price","dappFormState","dappInput","fao3AMap","epcisDoc","sendToEOS","catchResult","originId","sendPromise","all","sent","Object","keys","k","readOnly","placeholder","style","color","href","target","rel","add_preservation","done","setDone","ref","rewardMe","type","config","emoji","LandingDataTable","role","aria-label","landingPromptOrder","SaleFishSelectInput","fishStore","JSON","parse","localStorage","getItem","catches","fish","setFish","setTimeout","removeItem","localStorageKey","chatCache","salePromptOrder","StyledMiddleNameInput","StyledCaptainLabel","span","IDTypeSelect","IDInput","isGearValid","partOne","partTwo","partThree","gearAbbreviationMap","partOneTwo","partOneTwoThree","gearTree","gearBaseList","surroundingNet_withPurseLines","surroundingNet_withPurseLines_oneBoatOperated","surroundingNet_withPurseLines_twoBoatsOperated","surroundingNet_withoutPurseLines","seineNets_beachSeines","seineNets_vesselSeines","seineNets_vesselSeines_danishSeines","seineNets_vesselSeines_scottishSeines","seineNets_vesselSeines_pairSeines","seineNets_seineNetsNotSpecified","trawls_bottomTrawls_beamTrawls","trawls_bottomTrawls_otterTrawls","trawls_bottomTrawls_pairTrawls","trawls_bottomTrawls_nephropsTrawls","trawls_bottomTrawls_shrimpTrawls","trawls_bottomTrawls_bottomTrawlsNotSpecified","trawls_midwaterTrawls_otterTrawls","trawls_midwaterTrawls_pairTrawls","trawls_midwaterTrawls_shrimpTrawls","trawls_midwaterTrawls_midwaterTrawlsNotSpecified","trawls_otterTwinTrawls","trawls_otterTrawlsNotSpecified","trawls_pairTrawlsNotSpecified","trawls_otherTrawlsNotSpecified","dredges_boatDredges","dredges_handDredges","liftNets_portableLiftNets","liftNets_boatOperatedLiftNets","liftNets_shoreOperatedStationaryLiftNets","liftNets_liftNetsNotSpecified","fallingGear_castNets","fallingGear_fallingGearNotSpecified","gillnetsAndEntanglingNets_setGillnetsAnchored","gillnetsAndEntanglingNets_driftnets","gillnetsAndEntanglingNets_encirclingGillnets","gillnetsAndEntanglingNets_fixedGillnetsOnStakes","gillnetsAndEntanglingNets_trammelNets","gillnetsAndEntanglingNets_combinedGillnetsTrammelNets","gillnetsAndEntanglingNets_gillnetsAndEntanglingNetsNotSpecified","gillnetsAndEntanglingNets_gillnetsNotSpecified","traps_stationaryUncoveredPoundNets","traps_pots","traps_fykeNets","traps_stowNets","traps_barriersFencesWeirsEtc","traps_aerialTraps","traps_trapsNotSpecified","hooksAndLines_handlinesAndPoleLinesHandOperated","hooksAndLines_handlinesAndPoleLinesMechanized","hooksAndLines_setLonglines","hooksAndLines_driftingLonglines","hooksAndLines_longlinesNotSpecified","hooksAndLines_trollingLines","hooksAndLines_hooksAndLinesNotSpecified","grapplingAndWounding_harpoons","harvestingMachines_pumps","harvestingMachines_mechanizedDredges","harvestingMachines_harvestingMachinesNotSpecified","getGearKeyList","gearTreeNode","StyledHeaderLabel","CertificationInput","add_vesselCaptainName","useCaptainProfileState","setProfile","middleName","formName","maxLength","add_vesselName","user","add_vesselID","shipIDTypeOptionList","idType","select","vessel","name","add_fishingGearTypeCode","setPartOne","setPartTwo","setPartThree","partOneOptions","partTwoOptions","setPartTwoOptions","partThreeOptions","setPartThreeOptions","gearId","getGearId","fishingGearTypeCode","clearable","onInputClear","add_productionMethod","add_ownership","add_vesselOwnerName","add_organization","add_organizationName","add_unitOfMeasurement","add_certificationHolder","add_certificationStandard","vesselCertification","standard","prompt_profileReview","captainProfile","idString","agency","identification","completed","csvAggregationEventHeader","csvTransformationEventHeader","csvObjectEventHeader","csvLocationHeader","csvEpcClassHeader","csvBusinessDocumentHeader","csvMasterDataHeader","csvLocationDataHeaderV0","csvEventLevelDataHeader","csvAggregationDisaggregationHeader","csvAggregatedCatchProcessHeader","createCsvFileReaderStream","file","Error","split","pop","fileReaderStream","parseUom","s","toLowerCase","createSender","informationProviderID","informationProviderContactName","informationProviderEmail","createReceiver","destinationID","destinationContactName","destinationEmail","createFishVocab","seafoodID","speciesCode","speciesScientificName","tradeItemDescription","tradeItemConditionCode","createVocabEl","createOutputProductVocab","data","outputProductID","informationProvider","descriptionShort","outputProductName","createLocationVocab","processorID","processorOwnerName","streetAddressOne","processorAddress1","streetAddressTwo","processorAddress2","city","processorCity","state","processorState","postalCode","processorPostalCode","countryCode","processorCountryCode","contact","processorContactName","email","processorContactEmail","createFishCatchEvent","eventDateV1","eventTimeZoneOffsetV1","readPointV1","bizLocationV1","seafoodQuantity","seafoodUOM","vesselOperator","vesselRegistration","catchAreaFAO","mscCertification","landingAuthority","landingAuthorization","unloadingPort","landingDateStart","landingDateEnd","harvestCertification","harvestCertificationCoC","FIP","ISSF","ratingsScore","ratingsScheme","vesselTransponder","vesselRegistryLink","visibilityEvent","productOwnerV1","createProcessEvent","eventDateV2","eventTimeZoneOffsetV2","inputSeafoodID","inputSeafoodQuantity","inputSeafoodUOM","outputQuantity","outputUOM","readPointV2","bizLocationV2","lotNumber","productionDate","bestBeforeDate","storageStateCode","firstFreezeDate","countryOfOrigin","transformationVisibilityEvent","productOwnerV3","createSingleCatchAndProcessXml","createAggregatedCatchAndProcessXml","dataList","fishIdSet","Set","fishVocabList","filter","has","add","outputProductIdSet","outputProductVocabList","locationIdSet","locationVocabList","createSingleAggregationDisaggregationEvent","d","eventTime","parentEPC","action","readPoint","bizLocation","childEPC","unitOfMeasure","productOwner","createAggregatedAggregationDisaggregationXml","dList","informationProviderContact","informationReceiverID","informationReceiverContact","informationReceiverEmail","informationProviderChild","speciesCodeChild","speciesNameChild","descriptionShortChild","itemConditionCodeChild","itemConditionCodeParent","additionalTradeItemIdentificationParent","partyIDTypeCode","additionalPartyID","telephone","StyledGrommet","Grommet","DataContainer","FileDropContainer","HiddenFileDropContainer","HiddenFileInput","FileDropText","AccordionContent","Box","CodeContainer","XmlDownloadButton","fileLabel","xml","downloadText","blob","Blob","saveAs","AggregatedXmlDownload","eventCount","aggregatedXml","Accordion","margin","AccordionPanel","EpcisEventList","epcisXmlList","setSent","Heading","level","multiple","CsvFileDrop","processFile","dropText","fileInputRef","useRef","current","click","FileDrop","onDrop","accept","evt","files","CsvFileInput","singleParser","aggregatedParser","setEpcisXmlList","setAggregatedXml","setEventCount","readerStream","neatCsv","csvRowList","grommet","comp_test","EpcisDataContainer","EpcisDataViewer","previousStep","setError","epcisData","setEpcisData","receiptId","setReceiptId","event","claimCatchEvent","RpcError","stringify","json","copy","withIgnoreError","fx","parseCsvColumnList","csvData","index","indexKey","itemKeyList","currentData","nextItem","newItem","forEach","createAggregationEventXml","mapHeaders","skipLines","parsedData","bizStep","parentID","disposition","readPoint_id","bizLocation_id","epcItemsXml","childEPCs_epc","childEPCsXml","childQuantityListItem","extension_childQuantityList_quantityElement_epcClass","extension_childQuantityList_quantityElement_quantity","extension_childQuantityList_quantityElement_uom","extensionItemsXml","extensionXml","Date","t","createTransformationEventXml","inputQuantityItemXml","inputQuantityList_quantityElement_epcClass","inputQuantityList_quantityElement_quantity","inputQuantityList_quantityElement_uom","inputQuantityListXml","outputQuantityItemXml","outputQuantityList_quantityElement_epcClass","outputQuantityList_quantityElement_quantity","outputQuantityList_quantityElement_uom","outputQuantityListXml","ilmdCbvmdaItemsXml","ilmdCertificationItemsXml","ilmd_certificationList_certification_certificationStandard","ilmd_certificationList_certification_certificationAgency","ilmd_certificationList_certification_certificationValue","ilmd_certificationList_certification_certificationIdentification","trim","ilmdItemsXml","ilmdXml","createObjectEventXml","epcList_epc","epcListXml","bizTransactionItem","bizTransactionList_bizTransaction_type","bizTransactionList_bizTransaction_value","bizTransactionListXml","sourceListItem","extension_sourceList_source_type","extension_sourceList_source_value","sourceListXml","destinationListItem","extension_destinationList_destination_type","extension_destinationList_destination_value","destinationListXml","quantityListItem","extension_quantityList_quantityElement_epcClass","extension_quantityList_quantityElement_quantity","extension_quantityList_quantityElement_uom","quantityListXml","ilmdGdstItemsXml","extension_ilmd_certificationList_certification_certificationStandard","extension_ilmd_certificationList_certification_certificationAgency","extension_ilmd_certificationList_certification_certificationValue","extension_ilmd_certificationList_certification_certificationIdentification","createLocationXml","vocabArrayKeyList","vocabElementListItems","optionalAttributeMap","optionalAttributeItems","entries","includes","v","polygonItemsXml","geofencePolygonPolygonPointSeq","geofencePolygonPolygonPointValue","geofanceXml","createEpcClassXml","speciesForFisheryStatisticsPurposesCode","grossWeightItemsXml","grossWeightMeasurementUnitCode","grossWeightMeasurementValue","grossWeightXml","createBusinessDocumentHeaderXml","senderId","senderName","senderEmail","receiverId","receiverName","receiverEmail","createTrawlerXml","bdhXml","epcClassXml","locationXml","xmlList","sort","b","StyledCsvFileDrop","fileValid","DropContainer","add_csvType","comp_catchProcess","comp_aggregationDisaggregation","comp_trawlerEpcisTools","setBdhXml","bdhFileName","setBdhFileName","setEpcClassXml","epcClassFileName","setEpcClassFileName","setLocationXml","locationFileName","setLocationFileName","objectEventXmlList","setObjectEventXmlList","objectEventFileName","setObjectEventFileName","transformationEventXmlList","setTransformationEventXmlList","transformationEventFileName","setTransformationEventFileName","aggregationEventXmlList","setAggregationEventXmlList","aggregationEventFileName","setAggregationEventFileName","createBDHXml","newXml","isDebug","savedLanguage","createPersistedState","createSteps","isProfileSetup","end","validator","previousValue","ProfileIcon","CloseProfileModalButton","ItemContainer","CaptainProfile","open","setOpen","profileFormRest","springRef","useSpring","from","opacity","to","transRef","closeButtonRef","closeButtonPopin","stiff","transform","useChain","width","height","HeaderContainer","Header","onLanguageChanged","valueRenderer","svg","lang","StyledChatBot","ChatBot","VersionContainer","Boolean","hostname","match","ReactDOM","render","hasEnded","setHasEnded","setLanguage","repository","version","headerComponent","newLanguage","enableMobileAutoFocus","botAvatar","hideUserAvatar","cache","cacheName","userAvatar","userDelay","handleEnd","document","getElementById","serviceWorker","ready","then","registration","unregister","table","account","eosiotoken","contract","producer","encodeNemoTXValue","blockNum","decodeNemoTXValue","tx","txId","signatureProvider","JsSignatureProvider","rpc","JsonRpc","Api","get_table_rows","scope","lower_bound","limit","show_payer","tableData","rows","buyer","seller","tax","transact","actions","authorization","actor","permission","memo","blocksBehind","expireSeconds","result","receipt","transaction_id","processed","block_num","claimResult","cat","epcisDataBuffer","toString","content","Buffer","results","hash"],"mappings":"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D,KACE,kBAAC,GAAD,CACEjD,SAAU,SAAAC,GACRA,EAAEC,iBAEFN,GAAY,GAEZmL,EAAW,eACNlK,EAAUO,OADL,CAERoM,WAAW,KAGbjI,aAAaM,WAAWC,GAAgBC,WAExCtG,MAGDoE,OAAOC,KAAKjD,EAAUO,QAAQ3J,KAAI,SAAAsM,GAAC,OAClC,kBAACtN,EAAD,eACE/B,IAAKqP,EACLpE,SAAUA,EACV9K,MAAOkP,GACHd,EAAKc,QAIb,kBAAClN,EAAD,CAAoB8I,SAAUA,QEkCvB,MACXvH,WAAW,EACXoI,SAAS,EACTnI,YAAY,I,qEC5IHoV,GAA4B,CACvC,SACA,UACA,sBACA,eACA,WACA,YACA,sBACA,kBACA,cAEA,gBAEA,eACA,iBAEA,uDACA,uDACA,mDAGWC,GAA+B,CAC1C,UACA,sBACA,eACA,YACA,sBACA,kBACA,cAEA,eACA,iBAEA,6CACA,6CACA,wCAEA,8CACA,8CACA,yCAEA,iBACA,sBACA,sBACA,iCAEA,2DACA,mEACA,6DACA,2DAGWC,GAAuB,CAClC,SACA,UACA,sBACA,eACA,YACA,sBACA,kBACA,cAEA,cAEA,eACA,iBAEA,yCACA,0CAEA,mCACA,oCAEA,6CACA,8CAEA,qBACA,sCACA,yCACA,gCACA,kCACA,sBACA,gCACA,kCACA,sCACA,+BACA,8BACA,+BACA,oCACA,mCAEA,qEACA,6EACA,uEACA,oEAEA,6EACA,uFACA,mFACA,4EACA,8EACA,kFACA,sFAEA,kDACA,kDACA,8CAGWC,GAAoB,CAC/B,sBACA,KACA,OACA,gBACA,mBACA,mBACA,OACA,QACA,aACA,cACA,WACA,YACA,UACA,YACA,QACA,WACA,aACA,kBACA,yBACA,sBACA,iCACA,oCAGWC,GAAoB,CAC/B,sBACA,KACA,mBACA,0CACA,0CACA,yBACA,oCACA,4BACA,8BACA,kCAGWC,GAA4B,CACvC,WACA,aACA,cACA,aACA,eACA,iBAGWC,GAAsB,CACjC,wBACA,6BACA,2BACA,wBACA,6BACA,2BACA,WACA,2BACA,mBACA,mBACA,wBACA,yBACA,YACA,4BACA,wBACA,oBACA,oBACA,4BACA,gBACA,cACA,0BACA,2CAGWC,GAA0B,CACrC,WACA,OACA,kBACA,oBACA,mBACA,mBACA,OACA,QACA,aACA,cACA,WACA,YACA,UACA,YACA,SAGWC,GAA0B,CACrC,SACA,YACA,sBACA,YACA,cACA,sBACA,WACA,eACA,uBAGWC,GAAkC,UAC1CH,GACAC,GACAC,IASQE,IANoB,UAC5BJ,GACAC,GACAC,IAG0C,CAC7C,wBACA,iCACA,2BACA,gBACA,yBACA,mBACA,cACA,wBACA,cACA,gBACA,YACA,cACA,wBACA,uBACA,yBACA,kBACA,aACA,iBACA,WACA,qBACA,aACA,kBACA,eACA,sBACA,uBACA,mBACA,iBACA,gBACA,mBACA,mBACA,uBACA,mBACA,iBACA,uBACA,0BACA,MACA,OACA,eACA,gBACA,oBACA,qBACA,kBACA,iBACA,cACA,wBACA,cACA,gBACA,iBACA,uBACA,kBACA,kBACA,oBACA,iBACA,YACA,YACA,iBACA,iBACA,mBACA,kBACA,kBACA,qBACA,cACA,oBACA,oBACA,gBACA,iBACA,sBACA,uBACA,uBACA,wBACA,gCACA,mBCpSWG,GAA2B,SAACC,GACvC,IAAKA,EAAM,MAAM,IAAIC,MAAM,WAE3B,GAAmC,QAA/BD,EAAK3C,KAAK6C,MAAM,KAAKC,MACvB,MAAM,IAAIF,MAAM,WAGlB,OAAOG,KAAiBJ,IAGbK,GAAW,SAACC,GAAD,OACtBA,GAA4B,MAAvBA,EAAE,GAAGC,cAAwB,MAAQ,OAE/BC,GAAe,SAAC,GAAD,IAC1BC,EAD0B,EAC1BA,sBACAC,EAF0B,EAE1BA,+BACAC,EAH0B,EAG1BA,yBAH0B,sDAMLF,EANK,oFAQJC,EARI,uDASCC,EATD,2EAcfC,GAAiB,SAAC,GAAD,IAC5BC,EAD4B,EAC5BA,cACAC,EAF4B,EAE5BA,uBACAC,EAH4B,EAG5BA,iBAH4B,wDAMPF,EANO,oFAQNC,EARM,uDASDC,EATC,6EAcjBC,GAAkB,SAAC,GAAD,IAC7BC,EAD6B,EAC7BA,UACAC,EAF6B,EAE7BA,YA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","file":"static/js/main.7868a2f7.chunk.js","sourcesContent":["import LocalizedStrings from \"react-localization\";\r\n\r\nimport { en } from \"./en\";\r\nimport { vn } from \"./vn\";\r\nimport { rs } from \"./rs\";\r\n\r\nexport const strings: any = new LocalizedStrings({\r\n  en,\r\n  vn,\r\n  rs\r\n});\r\n\r\nexport const languages = [\r\n    { key: \"us\", value: \"us\", flag: \"us\", label: \"United States\" },\r\n    { key: \"vn\", value: \"vn\", flag: \"vn\", label: \"Vietnam\" },\r\n    { key: \"rs\", value: \"rs\", flag: \"rs\", label: \"Serbia\" }\r\n  ];","export const en = {\r\n  input_placeholder: \"Type your answer . . .\",\r\n\r\n  atlanticCod: \"Atlantic Cod\",\r\n  blueCrab: \"Blue Crab (Atlantic)\",\r\n  dolphinFish: \"Dolphinfish (Mahi Mahi)\",\r\n  grouper: \"Potato Grouper\",\r\n  kingCrab: \"King Crab (red)\",\r\n  pacificCod: \"Pacific Cod\",\r\n  redSnapper: \"Red Snapper\",\r\n  seaCucumber: \"Black Spotted Sea Cucumber\",\r\n  shark: \"Frilled Shark\",\r\n  swordfish: \"Swordfish\",\r\n  albacoreTuna: \"Albacore Tuna\",\r\n  bigeyeTuna: \"Bigeye Tuna\",\r\n  skipjackTuna: \"Skipjack Tuna\",\r\n  yellowfinTuna: \"Yellowfin Tuna\",\r\n  bluefinTuna: \"Bluefin Tuna\",\r\n\r\n  prompt_welcomeNew: \"Welcome aboard Captain 🎉🎉🎉\",\r\n  prompt_introduceNemo:\r\n    \"My name is Nemo and I am here to replace your paper and pencil logbook (as long as your phone is charged 🔋 . . . )\",\r\n  prompt_vesselCaptainName: \"How may I address you?\",\r\n  // Answer with Custom Component: Call me Captain FIRSTNAME LASTNAME\r\n\r\n  captain: \"Captain\",\r\n  prompt_vesselName:\r\n    \"Very well Captain {previousValue}. What is the name of your ship?\",\r\n  prompt_vesselID: \"And what is {previousValue}'s IMO or MMSI?\",\r\n  imo: \"IMO\",\r\n  mmsi: \"MMSI\",\r\n  // Answer with custom component: a selector with Name, IMO, or MMSI next to a text input\r\n  prompt_fishingGearTypeCode: \"What fishing gear is on the ship?\",\r\n  // Answer with 3 subsequence styled select\r\n  // prompt_\r\n\r\n  selectGearBase: \"Select Base Gear . . .\",\r\n  selectGearSubtype: \"Select Sub-type . . .\",\r\n  selectGearOptionalType: \"Optional type . . .\",\r\n\r\n  prompt_productionMethod: \"How will you be fishing?\",\r\n  // Answer with 3 choices: Aquaculture, Inland Fishery, Marine Fishery\r\n\r\n  aquaculture: \"Aquaculture\",\r\n  inlandFishery: \"Inland Fishery\",\r\n  marineFishery: \"Marine Fishery\",\r\n\r\n  prompt_ownership: \"Are you the ship's owner?\",\r\n  prompt_vesselOwnerName: \"Who is the owner of this ship?\",\r\n\r\n  // <input-name> NO.disabled\r\n  //              YES\r\n\r\n  prompt_organization: \"Do you belong to a larger organization?\",\r\n  // <input-name> YES.disabled\r\n  //              NO\r\n\r\n  prompt_organizationName: \"What is the name of this organization/company?\",\r\n\r\n  prompt_certificationHolder: \"Is your vessel covered by the MSC?\",\r\n  // <input-name> YES.disabled\r\n  //              NO\r\n  certification: \"Certification\",\r\n\r\n  form_certificationAgencyLabel: \"Agency\",\r\n  form_certificationValueLabel: \"Cert. #\",\r\n  form_certificationIdentificationLabel: \"Cert. ID\",\r\n\r\n  form_certificationAgencyPlaceholder: \"Agency 101\",\r\n  form_certificationValuePlaceholder: \"999\",\r\n  form_certificationIdentificationPlaceholder: \"M12554-12486-FC-GFF-1Y\",\r\n  \r\n  form_firstNamePlaceholder: \"First\",\r\n  form_lastNamePlaceholder: \"Last\",\r\n  form_middleNamePlaceholder: \"M\",\r\n  \r\n  prompt_certificationStandard: \"Please provide your certification information:\",\r\n\r\n  prompt_unitOfMeasurement: \"Lastly, what's your prefered unit of measurement?\",\r\n  // 2 choices\r\n\r\n  prompt_setupProfileCompleted: \"Please review your information below:\",\r\n  prompt_profileDone: \"You are all set Captain! NOTE: You can change your information anytime! Simply open your profile via the button in the top right corner.\",\r\n\r\n  kilogram: \"Kilogram (kg)\",\r\n  pound: \"Pound (lb)\",\r\n\r\n  prompt_welcome: \"Welcome back Captain!\",\r\n  prompt_end: \"See you soon Captain!\",\r\n  prompt_anotherOne: \"What else can I add for you Captain?\",\r\n  prompt_unavailable: \"I'm sorry Captain, I'm afraid I can't do that . . .\",\r\n\r\n  prompt_initial: \"What would you like to add?\",\r\n\r\n  yes: \"✅ YES\",\r\n  no: \"❎ NO\",\r\n\r\n  days: \"Day\",\r\n  weeks: \"Week\",\r\n  months: \"Month\",\r\n\r\n  addNew: \"Add new\",\r\n\r\n  csv: \"Upload csv 📁\",\r\n  receive: \"Buy ⭐\",\r\n  catch: \"Catch 🐟\",\r\n  transport: \"Transport 🚢\",\r\n  landing: \"Landing ⚓\",\r\n  sale: \"Sell 💰\",\r\n\r\n  test: \"TEST 🙉\",\r\n  \r\n  nothing: \"I'm good 😁\",\r\n\r\n  prompt_csv: \"Which event is this?\",\r\n  csv_catchProcess: \"🐟 Catching and Processing\",\r\n  csv_aggregationDisaggregation: \"🔼 Aggregation and Disaggregation\",\r\n  csv_shipReceive: \"📨 Ship and Receive\",\r\n  csv_transshipment: \"🔄 Transshipment\",\r\n\r\n  csv_trawlerEpcisTools: \"🅱 Trawler EPCIS Tools\",\r\n\r\n  prompt_nothing: \"Smooth sailing 💨\",\r\n\r\n  prompt_test: \"WELCOME TO THE TESTING FLOW . . .\",\r\n\r\n  prompt_receive: \"Let's buy that data record 🌐\",\r\n\r\n  prompt_catch: \"Let's get this done ⚡\",\r\n\r\n  prompt_catchFishType: \"What have you caught?\",\r\n  prompt_catchDuration: \"How long was the journey?\",\r\n\r\n  prompt_catchHarvestStartDate: \"When did you start this catch?\",\r\n  // Show option to pick a time range?\r\n  prompt_catchHarvestEndDate: \"When did you finish this catch?\",\r\n  // Show option to manually input date, or simply say now.\r\n  \r\n  prompt_catchArea: \"Which FAO catch area did you fish?\",\r\n\r\n  prompt_catchQuantity: \"Please scan the container QR code and provide the quantity:\",\r\n  prompt_catchQuantityListDone: \"Is that the last container?\",\r\n  \r\n  prompt_catchReview: \"Please review the catch data:\",\r\n\r\n  prompt_catchCongrat: \"🐟 Congratulations on the catch! 🐟\",\r\n  \r\n  prompt_preservation: \"How are you preserving them?\",\r\n\r\n  add_quantityPlaceholder: \"Enter quantity in \",\r\n\r\n  chilled: \"Frozen ❄\",\r\n  salted: \"Dried ♨\",\r\n  fresh: \"Fresh ✨\",\r\n\r\n  prompt_sale: \"What would you like to sell?\",\r\n  prompt_size: \"Dimension of this sell? (in cubic meter)\",\r\n  prompt_weight: \"Total weight? (in Kilo TONS)\",\r\n  prompt_value: \"How much does it cost? (in USD $)\",\r\n  prompt_saleConfirmation: \"Your order has been sent.\",\r\n\r\n  prompt_landing: \"Have you finished unpacking?\",\r\n  // prompt_cargoLoad: \"How heavy \"\r\n  prompt_landingConfirm:\r\n    \"⚓ Your time, container, and geolocation has been automatically recorded! Please review the data for accuracy:\",\r\n  inprogress: \"In-progress ⏳\",\r\n  finished: \"Finished 🏁\",\r\n\r\n  prompt_confirmData: \"Does the data seem accurate?\",\r\n\r\n  dataIsAccurate: \"Yes\",\r\n  dataIsInaccurate: \"No\",\r\n\r\n  prompt_errorReported:\r\n    \"I have reported this error to our engineers. TODO: Continue this flow to add self-input data\",\r\n\r\n  date: \"Date\",\r\n  time: \"Time\",\r\n  timeZone: \"Time Zone\",\r\n  container: \"Container\",\r\n  geoLocation: \"Location\",\r\n\r\n  // Gears:\r\n\r\n  surroundingNet: \"Surrounding net\",\r\n  withPurseLines: \"With purse lines\",\r\n  oneBoatOperated: \"One boat operated\",\r\n  twoBoatsOperated: \"Two boats operated\",\r\n  withoutPurseLines: \"Without purse lines (lampara)\",\r\n  seineNets: \"Seine nets\",\r\n  beachSeines: \"Beach seines\",\r\n  vesselSeines: \"Vessel seines\",\r\n  danishSeines: \"Danish seines\",\r\n  scottishSeines: \"Scottish seines\",\r\n  pairSeines: \"Pair seines\",\r\n  seineNetsNotSpecified: \"Seine nets (not specified)\",\r\n  trawls: \"Trawls\",\r\n  bottomTrawls: \"Bottom trawls\",\r\n  beamTrawls: \"Beam trawls\",\r\n  otterTrawls: \"Otter trawls\",\r\n  pairTrawls: \"Pair trawls\",\r\n  nephropsTrawls: \"Nephrops trawls\",\r\n  shrimpTrawls: \"Shrimp trawls\",\r\n  bottomTrawlsNotSpecified: \"Bottom trawls (not specified)\",\r\n  midwaterTrawls: \"Midwater trawls\",\r\n  midwaterTrawlsNotSpecified: \"Midwater trawls (not specified)\",\r\n  otterTwinTrawls: \"Otter twin trawls\",\r\n  otterTrawlsNotSpecified: \"Otter trawls (not specified)\",\r\n  pairTrawlsNotSpecified: \"Pair trawls (not specified)\",\r\n  otherTrawlsNotSpecified: \"Other trawls (not specified)\",\r\n  dredges: \"Dredges\",\r\n  boatDredges: \"Boat dredges\",\r\n  handDredges: \"Hand dredges\",\r\n  liftNets: \"Lift nets\",\r\n  portableLiftNets: \"Portable lift nets\",\r\n  boatOperatedLiftNets: \"Boat operated lift nets\",\r\n  shoreOperatedStationaryLiftNets: \"Shore operated stationary lift nets\",\r\n  liftNetsNotSpecified: \"Lift nets (not specified)\",\r\n  fallingGear: \"Falling gear\",\r\n  castNets: \"Cast nets\",\r\n  fallingGearNotSpecified: \"Falling gear (not specified)\",\r\n  gillnetsAndEntanglingNets: \"Gillnets and entangling nets\",\r\n  setGillnetsAnchored: \"Set gillnets (anchored)\",\r\n  driftnets: \"Driftnets\",\r\n  encirclingGillnets: \"Encircling gillnets\",\r\n  fixedGillnetsOnStakes: \"Fixed gillnets (on stakes)\",\r\n  trammelNets: \"Trammel nets\",\r\n  combinedGillnetsTrammelNets: \"Combined gillnets trammel nets\",\r\n  gillnetsAndEntanglingNetsNotSpecified:\r\n    \"Gillnets and entangling nets (not specified)\",\r\n  gillnetsNotSpecified: \"Gillnets (not specified)\",\r\n  traps: \"Traps\",\r\n  stationaryUncoveredPoundNets: \"Stationary uncovered pound nets\",\r\n  pots: \"Pots\",\r\n  fykeNets: \"Fyke nets\",\r\n  stowNets: \"Stow nets\",\r\n  barriersFencesWeirsEtc: \"Barriers, fences, weirs, etc\",\r\n  aerialTraps: \"Aerial traps\",\r\n  trapsNotSpecified: \"Traps (not specified)\",\r\n  hooksAndLines: \"Hooks and lines\",\r\n  handlinesAndPoleLinesHandOperated: \"Handlines and pole lines (hand-operated)\",\r\n  handlinesAndPoleLinesMechanized: \"Handlines and pole lines (mechanized)\",\r\n  setLonglines: \"Set longlines\",\r\n  driftingLonglines: \"Drifting longlines\",\r\n  longlinesNotSpecified: \"Longlines (not specified)\",\r\n  trollingLines: \"Trolling lines\",\r\n  hooksAndLinesNotSpecified: \"Hooks and lines (not specified)\",\r\n  grapplingAndWounding: \"Grappling and wounding\",\r\n  harpoons: \"Harpoons\",\r\n  harvestingMachines: \"Harvesting machines\",\r\n  pumps: \"Pumps\",\r\n  mechanizedDredges: \"Mechanized dredges\",\r\n  harvestingMachinesNotSpecified: \"Harvesting machines (not specified)\",\r\n  miscellaneousGear: \"Miscellaneous gear\",\r\n  recreationalFishingGear: \"Recreational fishing gear\",\r\n  gearNotKnowOrNotSpecified: \"Gear not know or (not specified)\"\r\n};\r\n","export const vn = {\r\n  input_placeholder: \"Xin giao nhập thông tin\",\r\n\r\n  atlanticCod: \"Cá tuyết Đại Tây Dương\",\r\n  blueCrab: \"Cua xanh (Đại Tây Dương)\",\r\n  dolphinFish: \"Cá heo (Mahi Mahi)\",\r\n  grouper: \"Cá mú\",\r\n  kingCrab: \"Cua Vua\",\r\n  pacificCod: \"Cod Thái Bình Dương\",\r\n  redSnapper: \"Cá hồng\",\r\n  seaCucumber: \"Dưa chuột biển\",\r\n  shark: \"Cá mập\",\r\n  swordfish: \"Cá kiếm\",\r\n  albacoreTuna: \"Cá ngừ\",\r\n  bigeyeTuna: \"Cá ngừ mắt to\",\r\n  skipjackTuna: \"Cá ngừ vằn\",\r\n  yellowfinTuna: \"Cá ngừ vây vàng\",\r\n  bluefinTuna: \"Cá ngừ vây xanh\",\r\n\r\n  prompt_welcome: \"Chào mừng trở lại thuyền trưởng!\",\r\n  prompt_end: \"Hẹn gặp lại thuyền trưởng!\",\r\n  prompt_unavailable:\r\n    \"Xin lỗi Thuyền trưởng, phần mềm chưa được cài đặt  . . .\",\r\n\r\n  prompt_initial: \"Thuyền trưởng muốn làm gì??\",\r\n\r\n  addNew: \"Thêm mới\",\r\n  catch: \"Bắt 🐟\",\r\n  transport: \"Di chuyển 🚢\",\r\n  landing: \"Hạ cánh ⚓\",\r\n  sale: \"Giao bán 💰\",\r\n  nothing: \"Gọi đùa thôi 😁\",\r\n\r\n  prompt_catch: \"Loại bắt nào?\"\r\n}","export const rs = {\r\n  input_placeholder: \"Реците капетане! Ахои!\",\r\n  prompt_welcome: \"Добродошли назад капетане!\",\r\n  prompt_end: \"Видимо се ускоро капетане!\",\r\n  prompt_unavailable:\r\n    \"Жао ми је капетане, Нажалост то не могу да урадим . . .\",\r\n  prompt_quantity: \"Колико {previousValue} сте уловили?\",\r\n  prompt_preservation: \"Како их чувате?\",\r\n  prompt_catchCongrat: \"🐟 Браво мајсторе! 🐟\",\r\n\r\n  chilled: \"Замрзнуто ❄\",\r\n  salted: \"Сушено ♨\",\r\n  fresh: \"Свеже ✨\",\r\n\r\n  atlanticCod: \"Атлански бакалар\",\r\n  blueCrab: \"Плави рак (Атлантик)\",\r\n  dolphinFish: \"Долпхинфисх (Махи Махи)\",\r\n  grouper: \"Групер\",\r\n  kingCrab: \"Краљевска краба\",\r\n  pacificCod: \"Пацифички koбакалар\",\r\n  redSnapper: \"Црвени снапер\",\r\n  seaCucumber: \"Морски краставац\",\r\n  shark: \"Ајкула\",\r\n  swordfish: \"Сабљарка\",\r\n  albacoreTuna: \"Дугоперајна туна\",\r\n  bigeyeTuna: \"Велика ока туна\",\r\n  skipjackTuna: \"Пругаста туна\",\r\n  yellowfinTuna: \"Жутоперајна туна\",\r\n  bluefinTuna: \"Плавоперајна туна\",\r\n\r\n  prompt_initial: \"Шта желите да радите?\",\r\n\r\n  addNew: \"Додај ново\",\r\n  catch: \"Улова 🐟\",\r\n  prompt_catch: \"Каква врста уловe?\",\r\n  transport: \"Транспорт 🚢\",\r\n  landing: \"Пристајање ⚓\",\r\n  sale: \"Продаја  💰\",\r\n  nothing: \"Нисшта за сад 😁\",\r\n\r\n  prompt_landing: \"Јесте ли завршили распакирање?\",\r\n  prompt_landingConfirm:\r\n    \"⚓ Ваше време, контејнер и геолокација су аутоматски прејављени! Молимо вас да прегледате податке за тачност\",\r\n  inprogress: \"У току. ⏳\",\r\n  finished: \"Завршено 🏁\",\r\n\r\n  prompt_confirmData: \"Да ли подаци изгледају тачни?\",\r\n\r\n  dataIsAccurate: \"Како да не\",\r\n  dataIsInaccurate: \"Ма какви\",\r\n\r\n  prompt_errorReported:\r\n    \"I have reported this error to our engineers. TODO: Continue this flow to add self-input data\",\r\n\r\n  date: \"Датум\",\r\n  time: \"Време\",\r\n  timeZone: \"Временска Зона\",\r\n  container: \"Контејнер\",\r\n  geoLocation: \"Локација\"\r\n}","import React from \"react\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nimport Select from \"react-styled-select\";\r\nimport { Refresh } from \"styled-icons/material/Refresh\";\r\nimport { Check } from \"styled-icons/material/Check\";\r\n\r\nexport const theme = {\r\n  background: \"#f5f8fb\",\r\n  // fontFamily: \"Helvetica Neue\",\r\n  headerBgColor: \"#00b0ff\",\r\n  headerFontColor: \"#fff\",\r\n  botBubbleColor: \"#00b0ff\",\r\n  botFontColor: \"#fff\",\r\n  userBubbleColor: \"#fff\",\r\n  userFontColor: \"#4a4a4a\",\r\n  dangerColor: \"red\"\r\n};\r\n\r\nconst CircleButton = styled.button`\r\n  width: 4em;\r\n  height: 4em;\r\n  border-radius: 50%;\r\n  position: absolute;\r\n  border: none;\r\n  bottom: 5em;\r\n  z-index: 1000;\r\n  background: ${prop => prop.theme.headerBgColor};\r\n  color: ${prop => prop.theme.headerFontColor};\r\n  button:focus {\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nexport const StyledColumn = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n`\r\n\r\nexport const RefreshButton = () => (\r\n  <CircleButton>\r\n    <Refresh onClick={() => window.location.reload()} />\r\n  </CircleButton>\r\n);\r\n\r\nexport const StyledInput = styled.input`\r\n  width: 80px;\r\n  display: inline-flex;\r\n  font-weight: bold;\r\n  border: none;\r\n  font-size: 1em;\r\n  border-bottom: 1px black solid;\r\n  outline: none;\r\n`;\r\n\r\nexport const LabeledInput = styled(({ className, label, ...rest }: any) => (\r\n  <div className={className}>\r\n    <label>{label}</label>\r\n    <StyledInput {...rest} />\r\n  </div>\r\n))`\r\n  display: inline-flex;\r\n  width: 100%;\r\n  label {\r\n    width: 25%;\r\n  }\r\n  input {\r\n    width: 75%;\r\n    :disabled {\r\n      cursor: not-allowed;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Divider = styled.hr`\r\n  width: 80%;\r\n`\r\n\r\nexport const ReviewInput = styled(LabeledInput)`\r\n  width: 100%;\r\n  margin-bottom: 0.5em;\r\n\r\n  label {\r\n    color: black;\r\n    width: 50%;\r\n    text-overflow: ellipsis;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n  }\r\n  input {\r\n    width: 50%;\r\n  }\r\n`;\r\n\r\ninterface BackgroundButtonProps {\r\n  readonly background?: string;\r\n};\r\n\r\nexport const StyledButton = styled.button<BackgroundButtonProps>`\r\n  cursor: pointer;\r\n  border: none;\r\n  background: ${p => p.background || p.theme.botBubbleColor};\r\n  color: ${p => p.theme.botFontColor};\r\n  height: 30px;\r\n\r\n  :hover {\r\n    opacity: 0.7;\r\n  }\r\n\r\n  :disabled {\r\n    background: ${p => p.theme.userFontColor};\r\n  }\r\n\r\n  :disabled:hover {\r\n    cursor: not-allowed;\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nexport const FillButton = styled(StyledButton)`\r\n  margin-top: 1em;\r\n  width: 100%;\r\n`\r\n\r\nexport const StyledSubmitButton = styled((props: any) => (\r\n  <StyledButton {...props}>\r\n    <Check />\r\n  </StyledButton>\r\n))`\r\n  width: 30px;\r\n  height: 30px;\r\n\r\n  svg {\r\n    fill: ${p => p.theme.botFontColor};\r\n  }\r\n`;\r\n\r\nexport const StyledColumnForm = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n`;\r\n\r\nexport const StyledRowForm = styled(StyledColumnForm)`\r\n  flex-direction: row;\r\n`;\r\n\r\nexport const RowDiv = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 100%;\r\n`;\r\n\r\nexport const StyledSelect = styled(Select)`\r\n  .select-control {\r\n    border-radius: 2em;\r\n    background: #eee;\r\n  }\r\n\r\n  .select-input {\r\n    margin-left: 0.5em;\r\n  }\r\n`;\r\n\r\nexport const StyledLabel = styled.label`\r\n  font-weight: 700;\r\n`\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Select from \"react-styled-select\";\r\nimport { fishOptionList, useCatchCacheState } from \"../_data\";\r\nimport { StyledSubmitButton } from \"../_theme\";\r\n\r\nconst StyledSelect = styled(Select)`\r\n  width: 85%;\r\n\r\n  .select-control {\r\n    border-radius: 2em;\r\n    background: #eee;\r\n  }\r\n\r\n  .select-input {\r\n    margin-left: 0.5em;\r\n  }\r\n`;\r\n\r\nconst StyledForm = styled.form`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n  align-items: center;\r\n`;\r\n\r\n\r\nexport const CatchFishTypeInput = ({ triggerNextStep } : any) => {\r\n  const options = fishOptionList;\r\n  const [disabled, setDisabled] = useState(false);\r\n  const [value, setValue] = useState(options[0].value);\r\n  const [, setCatchCache] = useCatchCacheState({})\r\n  \r\n  return (\r\n    <StyledForm\r\n      onSubmit={e => {\r\n        e.preventDefault();\r\n        // console.log(steps);\r\n        // console.log(formState.values);\r\n\r\n        setDisabled(true);\r\n\r\n        setCatchCache({\r\n          fishKey: value\r\n        })\r\n\r\n        triggerNextStep();\r\n      }}\r\n    >\r\n    <StyledSelect\r\n      value={value}\r\n      disabled={disabled}\r\n      options={options}\r\n      onChange={setValue}\r\n      classes={{\r\n        selectControl: \"select-control\",\r\n        selectInput: \"select-input\"\r\n      }}\r\n    />\r\n\r\n    <StyledSubmitButton disabled={disabled} />\r\n  </StyledForm>\r\n  );\r\n};\r\n","import { strings } from \"../i18n\";\r\n\r\nexport const createSelectOptionList = (list: Array<string>) =>\r\n  list.map(value => ({\r\n    value,\r\n    label: `${strings[value]}`\r\n  }));\r\n\r\nexport const numberValidator = (value: number) => {\r\n  if (isNaN(value) || value <= 0) {\r\n    return \"It should be a number greater than 0!\";\r\n  }\r\n  return true;\r\n};\r\n\r\nexport const appendTrigger = (p: any, i: number, order: Array<string>) => {\r\n  const trigger = p.trigger || order[i + 1];\r\n\r\n  if (!p.options) {\r\n    p.trigger = trigger;\r\n    if (p.hideInput && !p.waitAction && !p.message) {\r\n      p.message = strings[p.id];\r\n    }\r\n  } else {\r\n    p.options = p.options.map((o: any, j: number) => {\r\n      if (p.triggers) {\r\n        o.trigger = p.triggers[j]\r\n      } else {\r\n        o.trigger = trigger;\r\n      }\r\n      return o;\r\n    });\r\n  }\r\n  delete p.triggers;\r\n  return p;\r\n};\r\n\r\nexport const createOptionLabel = (value: string) => ({\r\n  value,\r\n  label: strings[value] || value\r\n});\r\n\r\nexport const createPromptArray = (order: Array<string>, structure: any) =>\r\n  order.reduce((acc, id: string, i, src) => {\r\n    if (i < src.length - 1) {\r\n      acc.push(appendTrigger(\r\n        {\r\n          id,\r\n          ...(structure[id] || { hideInput: true })\r\n        },\r\n        i,\r\n        order\r\n      ) as never);\r\n    }\r\n    return acc;\r\n  }, []);\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { StyledInput, StyledSubmitButton, StyledColumnForm, RowDiv, StyledButton } from \"../_theme\";\r\nimport { useFormState } from \"react-use-form-state\";\r\nimport { useProfileState, useCatchCacheState, uomMap } from \"../_data\";\r\nimport { strings } from \"../i18n\";\r\n\r\nimport {Qrcode} from 'styled-icons/icomoon/Qrcode'\r\n\r\nimport uuid from 'uuid/v4'\r\n\r\ninterface CatchQuantityFormFields {\r\n  amount: number;\r\n}\r\n\r\nconst AmountInput = styled(StyledInput)`\r\n  width: 50%;\r\n  text-align: right;\r\n`;\r\n\r\nconst QRScanButton = styled(StyledButton)`\r\n  width: 30%;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n`\r\nconst QRCodeDiv = styled.div`\r\n  width: 60%;\r\n`\r\n\r\nconst QRCodeContainer = styled(RowDiv)`\r\n  height: 3em;\r\n`\r\n\r\nexport const CatchQuantityInput = ({ triggerNextStep, steps }: any) => {\r\n  const [profile] = useProfileState({\r\n    unitOfMeasurement: \"kilogram\"\r\n  });\r\n\r\n  const [catchCache, setCatchCache] = useCatchCacheState({\r\n    quantityList: []\r\n  });\r\n\r\n  const [disabled, setDisabled] = useState(false);\r\n\r\n  const [formState, { number }] = useFormState<CatchQuantityFormFields>();\r\n\r\n  const [qrCode, setQRCode] = useState(\"\")\r\n\r\n  return (\r\n    <StyledColumnForm\r\n      onSubmit={e => {\r\n        e.preventDefault();\r\n        // console.log(steps);\r\n        // console.log(formState.values);\r\n\r\n        setDisabled(true);\r\n\r\n        const quantityList = catchCache.quantityList || []\r\n\r\n        quantityList.push({\r\n          epcClass: qrCode,\r\n          quantity: formState.values.amount,\r\n          uom: uomMap[profile.unitOfMeasurement]\r\n        })\r\n\r\n        setCatchCache({\r\n            ...catchCache,\r\n            quantityList\r\n        });\r\n\r\n        triggerNextStep();\r\n      }}\r\n    >\r\n      <QRCodeContainer>\r\n        <QRCodeDiv>\r\n          {qrCode}\r\n        </QRCodeDiv>\r\n        <QRScanButton onClick={(e)=>{\r\n          e.preventDefault()\r\n\r\n          const code = uuid()\r\n\r\n          setQRCode(code)\r\n        }}>\r\n          Scan QR {\" \"}\r\n          <Qrcode size=\"15\"/>\r\n        </QRScanButton>\r\n      </QRCodeContainer>\r\n      \r\n      <RowDiv>\r\n        <AmountInput required disabled={disabled} {...number('amount')}/>\r\n        <div>\r\n          {strings[profile.unitOfMeasurement]}\r\n        </div>\r\n        <StyledSubmitButton disabled={disabled || !qrCode} />\r\n      </RowDiv>\r\n    </StyledColumnForm>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { durationList, useCatchCacheState } from \"../_data\";\r\nimport {\r\n  StyledInput,\r\n  StyledSubmitButton,\r\n  StyledSelect,\r\n  StyledRowForm\r\n} from \"../_theme\";\r\nimport { useFormState } from \"react-use-form-state\";\r\nimport { createSelectOptionList } from \"../core/utils\";\r\nimport { DateTime } from \"luxon\";\r\n\r\ninterface CatchDurationFormFields {\r\n  durationValue: number;\r\n  durationType: string;\r\n}\r\n\r\nconst DurationTypeSelect = styled(StyledSelect)`\r\n  width: 30%;\r\n`;\r\n\r\nconst DurationValueInput = styled(StyledInput)`\r\n  width: 50%;\r\n  text-align: right;\r\n`;\r\n\r\nexport const CatchDurationInput = ({ triggerNextStep }: any) => {\r\n  const options = createSelectOptionList(durationList);\r\n\r\n  const [disabled, setDisabled] = useState(false);\r\n\r\n  const [formState, { number, raw }] = useFormState<\r\n    CatchDurationFormFields\r\n  >({\r\n    durationType: durationList[0]\r\n  });\r\n\r\n  const [catchCache, setCatchCache] = useCatchCacheState({});\r\n\r\n  return (\r\n    <StyledRowForm\r\n      onSubmit={e => {\r\n        e.preventDefault();\r\n\r\n        setDisabled(true);\r\n\r\n        const endDate = DateTime.local();\r\n        const startDate = endDate.minus({\r\n          [formState.values.durationType]: formState.values.durationValue\r\n        });\r\n\r\n        const harvestEndDate = endDate.toISODate();\r\n        const harvestStartDate = startDate.toISODate();\r\n\r\n        setCatchCache({\r\n          ...catchCache,\r\n          harvestStartDate,\r\n          harvestEndDate\r\n        });\r\n\r\n        triggerNextStep();\r\n      }}\r\n    >\r\n      <DurationValueInput required disabled={disabled} {...number(\"durationValue\")} />\r\n\r\n      <DurationTypeSelect\r\n        {...raw(\"durationType\")}     \r\n        disabled={disabled}\r\n        options={options}\r\n        classes={{\r\n          selectControl: \"select-control\",\r\n          selectInput: \"select-input\"\r\n        }}\r\n      />\r\n\r\n      <StyledSubmitButton disabled={disabled} />\r\n    </StyledRowForm>\r\n  );\r\n};\r\n","const freeEpcisUrl = 'http://www.freepcis.com/server/nemo/capture'\r\n\r\nexport const freepcisVault = {\r\n  capture: {\r\n    uri: 'https://cors-anywhere.herokuapp.com/'+ freeEpcisUrl,\r\n    auth: {\r\n      username: 'nemo',\r\n      password: 'test001'\r\n    }\r\n  }\r\n}\r\n\r\nexport const sendCatchEvent = async (body : any) => {\r\n\r\n  const headers = new Headers()\r\n\r\n  const {uri, auth} = freepcisVault.capture;\r\n  \r\n  headers.set('Authorization', 'Basic ' + btoa(auth.username + \":\" + auth.password));\r\n  headers.set('Content-Type', 'text/xml');\r\n  \r\n  const response = await fetch(uri,{\r\n    method: 'POST',\r\n    headers,\r\n    body\r\n  })\r\n\r\n  console.log(response)\r\n};\r\n","import * as dapp from './dapp'\r\nimport * as freepcis from './freepcis'\r\n\r\nexport default {\r\n  dapp,\r\n  freepcis\r\n}","import { DateTime } from \"luxon\";\r\nimport { upper } from \"case\";\r\nimport { productionMethodCodeMap } from \"../_data\";\r\n\r\nconst getCoordinate = () =>\r\n  new Promise(resolve => {\r\n    const fallback = {\r\n      latitude: 0.886256,\r\n      longitude: 148.445297\r\n    };\r\n\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(\r\n        position => {\r\n          resolve(position.coords);\r\n        },\r\n        () => resolve(fallback)\r\n      );\r\n    } else {\r\n      resolve(fallback);\r\n    }\r\n  });\r\n\r\nconst generateQuantityElementList = (fishCode = \"\", quantityList = []) =>\r\n  quantityList\r\n    .map(\r\n      ({ epcClass, quantity, uom }: any) => `\r\n    <quantityElement>\r\n      <epcClass>http://epcis.nemo.com/user/vocab/obj/${fishCode}.${epcClass}</epcClass>\r\n      <quantity>${quantity}</quantity>\r\n      <uom>${uom}</uom>\r\n    </quantityElement>`\r\n    )\r\n    .join(\"\\n\");\r\n\r\nconst generateNonEmptyElement = (element: string, value: string) =>\r\n  value ? `<${element}>${value}</${element}>` : \"\";\r\n\r\nexport const createCatchPayload = async ({\r\n  catchArea,\r\n  fishCode,\r\n  harvestEndDate,\r\n  harvestStartDate,\r\n  quantityList,\r\n\r\n  firstName,\r\n  lastName,\r\n\r\n  fishingGearType,\r\n  organizationName,\r\n  productionMethod,\r\n\r\n  language,\r\n\r\n  vesselIdType,\r\n  vesselIdString,\r\n  vesselName,\r\n  vesselOwnerName,\r\n\r\n  vesselCertificationAgency,\r\n  vesselCertificationIdentification,\r\n  vesselCertificationStandard,\r\n  vesselCertificationValue\r\n}: any) => {\r\n  const dt = DateTime.local();\r\n\r\n  const creationDate = dt.toISO();\r\n  const eventTimeZoneOffset = dt.toFormat(\"ZZ\");\r\n\r\n  const { latitude, longitude } = (await getCoordinate()) as any;\r\n\r\n  const quantityElementList = generateQuantityElementList(\r\n    fishCode,\r\n    quantityList\r\n  );\r\n\r\n  const vesselCaptainName = upper(`${lastName}_${firstName}`, \",\");\r\n\r\n  const productionMethodCode = productionMethodCodeMap[productionMethod];\r\n\r\n  const vesselID = upper(vesselIdType) + \".\" + vesselIdString;\r\n\r\n  const vesselFlagState = upper(language);\r\n\r\n  return `\r\n  <epcis:EPCISDocument xmlns:epcis=\"urn:epcglobal:epcis:xsd:1\" \r\n    schemaVersion=\"1.1\" \r\n    creationDate=\"2001-12-17T09:30:47Z\" \r\n    xmlns:eecc=\"http://ns.eecc.info/epcis\"\r\n    xmlns:sbdh=\"http://www.unece.org/cefact/namespaces/StandardBusinessDocumentHeader\"\r\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" \r\n    xsi:schemaLocation=\"urn:epcglobal:epcis:xsd:1 http://www.gs1si.org/BMS/epcis/1_2/EPCglobal-epcis-1_2.xsd\" \r\n    xmlns:cbvmda=\"urn:epcglobal:cbv:mda\">\r\n      <EPCISBody>\r\n        <EventList>\r\n            <ObjectEvent> <!-- V1 CREATE THE CATCH EVENT ID WITH GDST KDEs-->\r\n                <eventTime>${creationDate}</eventTime>\r\n                <eventTimeZoneOffset>${eventTimeZoneOffset}</eventTimeZoneOffset>\r\n                <epcList>\r\n                </epcList>\r\n                <action>ADD</action>\r\n                <bizStep>urn:epcglobal:cbv:bizstep:commissioning</bizStep>\r\n                <disposition>urn:epcglobal:cbv:disp:active</disposition>\r\n                <readPoint>\r\n                    <id>geo:${latitude},${longitude}</id> <!-- Point where catch was recorded -->\r\n                </readPoint>\r\n                <extension>\r\n                    <quantityList>\r\n                      ${quantityElementList}\r\n                    </quantityList>\r\n                    <ilmd>\r\n                        <cbvmda:vesselCatchInformationList> <!--  Attach GDST KDEs to unique Catch Event -->\r\n                            <vesselCatchInformation>\r\n                                <vesselID>${vesselID}</vesselID> <!-- #2 & 3 GDST KDE Vessel ID -->\r\n                                <vesselName>${vesselName}</vesselName> <!-- #1 GDST KDE Vessel Name  -->\r\n\r\n                                <!-- A1 GDST KDE Vessel Ownership -->\r\n                                ${generateNonEmptyElement('vesselOwnerName',vesselOwnerName)}\r\n                                ${generateNonEmptyElement('organizationName',organizationName)}\r\n\r\n                                <vesselCaptainName>${vesselCaptainName}</vesselCaptainName>\r\n                                <vesselFlagState>${vesselFlagState}</vesselFlagState> <!-- #4 Vessel Flag State -->\r\n                                <catchArea>FAO.${catchArea}</catchArea> <!-- #7 GDST KDE Catch Area -->\r\n                                <fishingGearTypeCode>${fishingGearType}</fishingGearTypeCode> <!-- #5 Gear Type -->\r\n                            </vesselCatchInformation>\r\n                        </cbvmda:vesselCatchInformationList>\r\n                        <cbvmda:productionMethodCode>${productionMethodCode}</cbvmda:productionMethodCode> <!-- #19 GDST KDE Production Method -->\r\n                        <cbvmda:harvestStartDate>${harvestStartDate}</cbvmda:harvestStartDate> <!-- #8 & 9 GDST KDE Date of Capture -->\r\n                        <cbvmda:harvestEndDate>${harvestEndDate}</cbvmda:harvestEndDate> <!-- #8 & 9 GDST KDE Date of Capture -->\r\n                        ${\r\n                          vesselCertificationStandard ? \r\n                          `\r\n                            <cbvmda:certificationList> <!-- #6 GDST KDE Fishing Authorization / Organization License, Certs (Aqua) -->\r\n                              <certification>\r\n                                  <certificationStandard>${vesselCertificationStandard}</certificationStandard>\r\n                                  <certificationAgency>${vesselCertificationAgency}</certificationAgency>\r\n                                  <certificationValue>${vesselCertificationValue}</certificationValue>\r\n                                  <certificationIdentification>${vesselCertificationIdentification}</certificationIdentification>\r\n                              </certification>\r\n                          </cbvmda:certificationList>\r\n                          `: ''\r\n                        }\r\n                    </ilmd>\r\n                </extension>\r\n            </ObjectEvent>    \r\n        </EventList>\r\n    </EPCISBody>\r\n  </epcis:EPCISDocument>\r\n`;\r\n};\r\n","import { useState, useEffect } from 'react'\r\nimport api from \"../api\";\r\n\r\nconst debug = require(\"debug\")(\"use-ipfs\");\r\n\r\nconst { Ipfs } = window as any\r\n\r\nconst ipfs = Ipfs.create({\r\n  repo: api.dapp.dappVault.ipfsRepo,\r\n  silent: true\r\n})\r\n\r\nexport function useIpfs(opts?: any) {\r\n\r\n  const [isIpfsReady, setIpfsReady] = useState(false)\r\n  const [ipfsInitError, setIpfsInitError] = useState(null as any)\r\n\r\n  useEffect(() => {\r\n    startIpfs()\r\n    return function cleanup() {\r\n      if (ipfs && ipfs.stop) {\r\n        debug('Stopping IPFS')\r\n        ipfs.stop()\r\n        setIpfsReady(false)\r\n      }\r\n    }\r\n  }, [])\r\n\r\n  async function startIpfs() {\r\n    try {\r\n      setIpfsReady(true)\r\n    } catch (error) {\r\n      console.error('IPFS init error:', error)\r\n      setIpfsInitError(error)\r\n      setIpfsReady(false)\r\n    }\r\n  }\r\n\r\n  debug(ipfs)\r\n\r\n  return { ipfs, isIpfsReady, ipfsInitError }\r\n}\r\n\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useFormState } from \"react-use-form-state\";\r\nimport { animated } from \"react-spring\";\r\n\r\nimport {\r\n  useCatchCacheState,\r\n  fao3AMap,\r\n  useProfileState,\r\n  useLanguageState\r\n} from \"../_data\";\r\n\r\nimport {\r\n  LabeledInput,\r\n  StyledColumnForm,\r\n  ReviewInput,\r\n  Divider,\r\n  FillButton,\r\n  StyledLabel\r\n} from \"../_theme\";\r\nimport api from \"../api\";\r\nimport { createCatchPayload } from \"../api/catch\";\r\nimport { useIpfs } from \"../hooks/use-ipfs\";\r\n\r\n// const debug = require(\"debug\")(\"DappSendInput\");\r\n\r\nconst Container = styled(animated.div)`\r\n  width: 100%;\r\n  word-break: break-word;\r\n`;\r\n\r\nconst QuantityItem = styled(ReviewInput)`\r\n  label {\r\n  }\r\n`;\r\n\r\nexport const CatchReview = ({ triggerNextStep, steps }: any) => {\r\n  const { add_catchArea } = steps;\r\n\r\n  const { apiUrl } = api.dapp.dappVault;\r\n\r\n  const { ipfs, isIpfsReady, ipfsInitError } = useIpfs();\r\n\r\n  const [catchCache, setCatchCache] = useCatchCacheState();\r\n\r\n  const [profile] = useProfileState();\r\n\r\n  const [language] = useLanguageState();\r\n\r\n  const [disabled, setDisabled] = useState(false);\r\n\r\n  const [sendMethod, setSendMethod] = useState(\"\");\r\n\r\n  const [error] = useState(\"\");\r\n  const [success, setSuccess] = useState(\"\");\r\n  const [, setOriginId] = useState(\"\");\r\n  const [ipfsHash, setIpfsHash] = useState(\"\");\r\n\r\n  const { quantityList, ...catchCacheRest } = catchCache;\r\n\r\n  const [formState, { text }] = useFormState({\r\n    ...catchCacheRest,\r\n    catchArea: add_catchArea.value\r\n  });\r\n\r\n  const [dappFormState, dappInput] = useFormState({\r\n    apiUrl,\r\n    price: \"0.0200 EOS\"\r\n  });\r\n  // console.log(formState.values)\r\n\r\n  // console.log(Object.keys(formState.values))\r\n\r\n  if (!quantityList) {\r\n    return <div>Cache Cleaned . . .</div>;\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <StyledColumnForm\r\n        onSubmit={async e => {\r\n          e.preventDefault();\r\n          setDisabled(true);\r\n\r\n          const fishCode = fao3AMap[catchCache.fishKey];\r\n\r\n          const epcisDoc = await createCatchPayload({\r\n            ...profile,\r\n            ...catchCache,\r\n            catchArea: add_catchArea.value,\r\n            language,\r\n            fishCode\r\n          });\r\n\r\n          const sendToEOS = async () => {\r\n            // Take the epcisDoc and send it to IPFS, grab the resulting hash\r\n\r\n            // Take the hash and send it to the EOS table\r\n\r\n            // Get the blockhash and blockid, combine and Output the hash to the user\r\n            const catchResult = await api.dapp.sendCatchEvent(\r\n              dappFormState.values,\r\n              ipfs,\r\n              epcisDoc\r\n            );\r\n\r\n            setIpfsHash(catchResult.ipfsHash);\r\n            setOriginId(catchResult.originId);\r\n\r\n            setSuccess(\"sent\");\r\n          };\r\n\r\n          const sendPromise = []\r\n\r\n          switch (sendMethod) {\r\n            case \"both\":\r\n              sendPromise.push(sendToEOS())\r\n              sendPromise.push(api.freepcis.sendCatchEvent(epcisDoc))\r\n              break;\r\n            case \"ipfs-eos\":\r\n              sendPromise.push(sendToEOS())\r\n              break;\r\n            default:\r\n            case \"freepcis\":\r\n              sendPromise.push(api.freepcis.sendCatchEvent(epcisDoc))\r\n              break;\r\n          }\r\n\r\n          await Promise.all(sendPromise)\r\n\r\n          setCatchCache({\r\n            ...catchCache,\r\n            sent: true\r\n          });\r\n\r\n          triggerNextStep();\r\n        }}\r\n      >\r\n        {Object.keys(formState.values).map(k => (\r\n          <ReviewInput\r\n            key={k}\r\n            disabled={disabled}\r\n            label={k}\r\n            {...text(k as any)}\r\n          />\r\n        ))}\r\n\r\n        <Divider />\r\n\r\n        {quantityList.map(({ epcClass, quantity, uom }: any, i: number) => (\r\n          <QuantityItem\r\n            readOnly\r\n            key={epcClass}\r\n            disabled={disabled}\r\n            label={epcClass}\r\n            value={`${quantity} ${uom}`}\r\n          />\r\n        ))}\r\n\r\n        <Divider />\r\n\r\n        <FillButton\r\n          disabled={disabled || catchCache.sent}\r\n          onClick={() => setSendMethod(\"freepcis\")}\r\n        >\r\n          Send to FreEPCIS\r\n        </FillButton>\r\n\r\n        <br />\r\n\r\n        <LabeledInput\r\n          label={\"API\"}\r\n          disabled={disabled}\r\n          required\r\n          {...dappInput.text(\"apiUrl\")}\r\n          placeholder={\"find an eos api . . .\"}\r\n        />\r\n\r\n        <LabeledInput\r\n          label={\"PRICE\"}\r\n          disabled={disabled}\r\n          required\r\n          {...dappInput.text(\"price\")}\r\n          placeholder={\"selling price . . .\"}\r\n        />\r\n\r\n        {isIpfsReady && (\r\n          <>\r\n            <FillButton\r\n              background={'sandybrown'}\r\n              disabled={disabled || catchCache.sent}\r\n              onClick={() => setSendMethod(\"ipfs-eos\")}\r\n            >\r\n              Send to EOS\r\n            </FillButton>\r\n            <FillButton\r\n              background={'darkorchid'}\r\n              disabled={disabled || catchCache.sent}\r\n              onClick={() => setSendMethod(\"both\")}\r\n            >\r\n              Send to FreEPCIS and EOS\r\n            </FillButton>\r\n          </>\r\n        )}\r\n      </StyledColumnForm>\r\n\r\n      <div style={{ color: \"red\" }}>\r\n        {error.length > 0 && <span>ERROR: {error}</span>}\r\n        {ipfsInitError && (\r\n          <span>ERROR: {ipfsInitError.message || ipfsInitError}</span>\r\n        )}\r\n      </div>\r\n      {success.length > 0 && (\r\n        <div>\r\n          Catch event posted. Will take ~3 minutes for it to register -\r\n          <a\r\n            href=\"https://jungle.eosx.io/account/nemoeosmark1?mode=contract&sub=tables\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            https://jungle.eosx.io/account/nemoeosmark1?mode=contract&sub=tables\r\n          </a>\r\n          <Divider />\r\n          <StyledLabel>\r\n            {\" \"}\r\n            You can check the epcis data on IPFS here -{\" \"}\r\n          </StyledLabel>\r\n          <a href={`https://ipfs.io/ipfs/${ipfsHash}`} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            {`https://ipfs.io/ipfs/${ipfsHash}`}\r\n          </a>\r\n          {/* \r\n            <StyledLabel> Give this Claim Code to the producer: </StyledLabel>\r\n            <br />\r\n            {originId}\r\n            <FillButton onClick={() => copy(originId)}>\r\n              Click to Copy Claim Code\r\n            </FillButton> \r\n          */}\r\n        </div>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { CatchFishTypeInput } from \"../components/CatchFishTypeInput\";\r\nimport { createOptionLabel, createPromptArray } from \"../core/utils\";\r\nimport { FishDataConfirm } from \"../components/FishDataConfirm\";\r\n\r\nimport { CatchQuantityInput } from \"../components/CatchQuantityInput\";\r\nimport { CatchDurationInput } from \"../components/CatchDurationInput\";\r\nimport { CatchReview } from \"../components/CatchReview\";\r\n\r\nconst promptOrder = [\r\n  \"prompt_catch\",\r\n\r\n  \"prompt_catchFishType\",\r\n  \"add_catchFishType\",\r\n\r\n  \"prompt_catchArea\",\r\n  \"add_catchArea\",\r\n\r\n  \"prompt_catchDuration\",\r\n  \"add_catchDuration\",\r\n\r\n  \"prompt_catchQuantity\",\r\n  \"add_catchQuantity\",\r\n\r\n  \"prompt_catchQuantityListDone\",\r\n  \"add_catchQuantityDone\",\r\n\r\n  // \"prompt_preservation\",\r\n  // \"add_preservation\",\r\n  \"prompt_catchReview\",\r\n  \"add_catchReview\",\r\n\r\n  \"prompt_catchCongrat\",\r\n\r\n  \"prompt_anotherOne\"\r\n];\r\n\r\nconst promptStructure = {\r\n  add_catchFishType: {\r\n    component: <CatchFishTypeInput />,\r\n    hideInput: true,\r\n    replace: false,\r\n    waitAction: true\r\n  },\r\n\r\n  add_catchDuration: {\r\n    component: <CatchDurationInput />,\r\n    hideInput: true,\r\n    replace: false,\r\n    waitAction: true\r\n  },\r\n\r\n  add_catchQuantity: {\r\n    component: <CatchQuantityInput />,\r\n    hideInput: true,\r\n    replace: false,\r\n    waitAction: true\r\n  },\r\n\r\n  add_catchArea: {\r\n    hideInput: true,\r\n    options: [\"61\", \"71\", \"67\", \"77\"].map(createOptionLabel)\r\n  },\r\n\r\n  add_catchQuantityDone: {\r\n    hideInput: true,\r\n    options: [\"yes\", \"no\"].map(createOptionLabel),\r\n    triggers: [\"prompt_catchReview\", \"add_catchQuantity\"]\r\n  },\r\n\r\n  add_catchReview: {\r\n    component: <CatchReview />,\r\n    hideInput: true,\r\n    replace: false,\r\n    waitAction: true\r\n  },\r\n\r\n  add_preservation: {\r\n    hideInput: true,\r\n    options: [\"chilled\", \"salted\", \"fresh\"].map(createOptionLabel)\r\n  },\r\n\r\n  prompt_catchCongrat: {\r\n    component: <FishDataConfirm />,\r\n    hideInput: true,\r\n    replace: false,\r\n    waitAction: true\r\n  }\r\n} as any;\r\n\r\nexport const createCatchPrompt = () =>\r\n  createPromptArray(promptOrder, promptStructure);\r\n","import React, { useState } from \"react\";\r\nimport Reward from \"react-rewards\";\r\n\r\nimport { strings } from \"../i18n\";\r\n\r\nexport const FishDataConfirm = ({ triggerNextStep }: any) => {\r\n  const [done, setDone] = useState(false);\r\n\r\n  return (\r\n    <Reward\r\n      ref={(ref: any) => {\r\n        if (ref && !done) {\r\n          ref.rewardMe();\r\n          setDone(true);\r\n\r\n          triggerNextStep();\r\n        }\r\n      }}\r\n      type=\"emoji\"\r\n      config={{\r\n        emoji: [\"🐟\", \"🦐\", \"🐙\", \"🦀\", \"🐳\", \"🐋\", \"🐬\", \"🦑\", \"🐡\", \"🦈\"]\r\n      }}\r\n    >\r\n      <div>{strings.prompt_catchCongrat}</div>\r\n    </Reward>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { strings } from \"../i18n\";\r\n\r\nexport const LandingDataTable = () => (\r\n  <div>\r\n    {strings.prompt_landingConfirm}\r\n    <hr />\r\n    <table>\r\n      <tbody>\r\n        <tr>\r\n          <td><span role=\"img\" aria-label=\"date\">📅</span></td>\r\n          <td>{strings.date}</td>\r\n          <td>2016-12-14</td>\r\n        </tr>\r\n        <tr>\r\n          <td><span role=\"img\" aria-label=\"time\">⌚</span></td>\r\n          <td>{strings.time}</td>\r\n          <td>11:33:00.125+08:00</td>\r\n        </tr>\r\n        <tr>\r\n          <td><span role=\"img\" aria-label=\"container\">🚢</span></td>\r\n          <td> {strings.container}</td>\r\n          <td>f5c5ab8f-8bcf-446a-8dea-4cb625316ffd</td>\r\n        </tr>\r\n        <tr>\r\n          <td><span role=\"img\" aria-label=\"location\">📍</span></td>\r\n          <td>{strings.geoLocation}</td>\r\n          <td>geo:22.58425,120.31815</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n);\r\n","import React from 'react'\r\nimport { createOptionLabel, appendTrigger } from \"../core/utils\";\r\nimport { LandingDataTable } from \"../components/LandingDataCard\";\r\nimport { strings } from \"../i18n\";\r\n\r\nexport const landingPromptOrder = [\r\n  \"prompt_landing\",\r\n  \"add_landingDisposition\",\r\n  \"prompt_landingConfirm\",\r\n  \"prompt_confirmData\",\r\n  \"add_confirmData\",\r\n  \"prompt_checkConfirm\",\r\n  \"prompt_anotherOne\"\r\n];\r\n\r\nexport const createLandingPrompt = () =>\r\n  [\r\n    {\r\n      id: `prompt_landing`,\r\n      hideInput: true\r\n    },\r\n    {\r\n      id: `add_landingDisposition`,\r\n      options: [\"inprogress\", \"finished\"].map(createOptionLabel)\r\n    },\r\n    // { // TODO: Stretch, ask cargo load\r\n    //   id: `prompt_cargoLoad`,\r\n    //   hideInput: true,\r\n    //   message: ({ previousValue }: any) =>\r\n    //     previousValue === \"finished\"\r\n    //       ? strings.prompt_cargoLoad\r\n    //       : \"✔\"\r\n    // },\r\n    {\r\n      id: `prompt_landingConfirm`,\r\n      component: <LandingDataTable />\r\n    },\r\n    {\r\n      id: `prompt_confirmData`,\r\n      hideInput: true\r\n    },\r\n    {\r\n      id: `add_confirmData`,\r\n      hideInput: true,\r\n      options: [\"dataIsAccurate\", \"dataIsInaccurate\"].map(createOptionLabel)\r\n    },\r\n    {\r\n      id: `prompt_checkConfirm`,\r\n      hideInput: true,\r\n      message: ({ previousValue }: any) =>\r\n        previousValue === \"dataIsInaccurate\"\r\n          ? strings.prompt_errorReported\r\n          : \"✔\"\r\n    }\r\n  ].map((p: any, i) => appendTrigger(p, i, landingPromptOrder));\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Select from \"react-styled-select\";\r\nimport { localStorageKey } from \"../_data\";\r\n\r\nconst StyledSelect = styled(Select)`\r\n  width: 100%;\r\n\r\n  .select-control {\r\n    border-radius: 2em;\r\n    background: #eee;\r\n  }\r\n\r\n  .select-input {\r\n    margin-left: 0.5em;\r\n  }\r\n`;\r\n\r\nexport const SaleFishSelectInput = ({ triggerNextStep } : any) => {\r\n\r\n  const fishStore = JSON.parse(localStorage.getItem(\"FISH_STORE\") as any) || { catches: [] };\r\n\r\n  const [disabled, setDisabled] = useState(false);\r\n  const [fish, setFish] = useState(fishStore.catches[0] ? fishStore.catches[0].value : null);\r\n\r\n  if(!fishStore.catches[0]) {\r\n    setTimeout(()=>{\r\n      localStorage.removeItem(localStorageKey.chatCache);\r\n      window.location.reload();\r\n    }, 3000)\r\n    return (\r\n      <div>\r\n        <b>\r\n          ⚠ No Fish Available ⚠ \r\n        </b>\r\n        <br/>\r\n        <i>You need to report your catch first</i>\r\n        <br/>\r\n        Auto Refresh in 3... 2... 1...\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <StyledSelect\r\n      value={fish}\r\n      disabled={disabled}\r\n      options={fishStore.catches}\r\n      classes={{\r\n        selectControl: \"select-control\",\r\n        selectInput: \"select-input\"\r\n      }}\r\n      onChange={(fish: string) => {\r\n        setFish(fish);\r\n        setDisabled(true);\r\n        triggerNextStep({\r\n          value: fish\r\n        });\r\n      }}\r\n    />\r\n  );\r\n};\r\n","import React from 'react'\r\nimport { SaleFishSelectInput } from \"../components/SaleFishSelectInput\";\r\nimport { numberValidator, appendTrigger } from \"../core/utils\";\r\n\r\nconst salePromptOrder = [\r\n  \"prompt_sale\",\r\n  \"add_species\",\r\n  \"prompt_size\",\r\n\r\n  \"add_size\",\r\n  \"prompt_weight\",\r\n  \r\n  \"add_weight\",\r\n  \"prompt_value\",\r\n\r\n  \"add_value\",\r\n  \"prompt_saleConfirmation\",\r\n  \"prompt_anotherOne\"\r\n];\r\n\r\nexport const createSalePrompt = () =>\r\n  [\r\n    {\r\n      id: `prompt_sale`,\r\n      hideInput: true\r\n    },\r\n    {\r\n      id: `add_species`,\r\n      hideInput: true,\r\n      waitAction: true,\r\n      component: <SaleFishSelectInput />\r\n    },\r\n    {\r\n      id: `prompt_size`,\r\n      hideInput: true\r\n    },\r\n    {\r\n      id: `add_size`,\r\n      user: true,\r\n      validator: numberValidator\r\n    },\r\n    {\r\n      id: `prompt_weight`,\r\n      hideInput: true\r\n    },\r\n    {\r\n      id: `add_weight`,\r\n      user: true\r\n    },\r\n    {\r\n      id: `prompt_value`,\r\n      hideInput: true\r\n    },\r\n    {\r\n      id: `add_value`,\r\n      user: true\r\n    },\r\n    {\r\n      id: `prompt_saleConfirmation`,\r\n      hideInput: true,\r\n      // component: <SaleDetail />\r\n    }\r\n  ].map((p: any, i) => appendTrigger(p, i, salePromptOrder));\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useFormState } from \"react-use-form-state\";\r\nimport { animated } from \"react-spring\";\r\n\r\nimport { upper } from 'case'\r\n\r\nimport { useCaptainProfileState } from \"../_data\";\r\nimport { strings } from \"../i18n\";\r\n\r\nimport { StyledInput, StyledSubmitButton } from \"../_theme\";\r\n\r\ninterface CaptainNameFormFields {\r\n  firstName: string;\r\n  middleName: string;\r\n  lastName: string;\r\n}\r\n\r\nconst Container = styled(animated.div)`\r\n  width: 100%;\r\n\r\n  .select-control {\r\n    border-radius: 2em;\r\n    background: #eee;\r\n  }\r\n\r\n  .select-input {\r\n    margin-left: 0.5em;\r\n  }\r\n`;\r\n\r\nconst StyledMiddleNameInput = styled(StyledInput)`\r\n  width: 20px;\r\n`;\r\n\r\nconst StyledForm = styled.form`\r\n  margin-top: 0.5em;\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst StyledCaptainLabel = styled.span`\r\n  color: ${p => p.theme.botBubbleColor};\r\n  font-weight: bold;\r\n`;\r\n\r\nexport const VesselCaptainNameInput = ({ triggerNextStep, steps }: any) => {\r\n  const [profile, setProfile] = useCaptainProfileState({})\r\n\r\n  const [disabled, setDisabled] = useState(false);\r\n  \r\n  const [formState, { text }] = useFormState<CaptainNameFormFields>();\r\n\r\n  return (\r\n    <Container>\r\n      <StyledCaptainLabel>{strings.captain}</StyledCaptainLabel>\r\n\r\n      <StyledForm\r\n        onSubmit={e => {\r\n          e.preventDefault();\r\n          const { lastName, firstName, middleName } = formState.values;\r\n\r\n          setDisabled(true);\r\n\r\n          setProfile({\r\n            ...profile,\r\n            captain: {\r\n              firstName,\r\n              middleName,\r\n              lastName,\r\n              formName: upper(`${lastName}_${firstName}`,',')\r\n            },\r\n          })\r\n\r\n          triggerNextStep({\r\n            value: lastName,\r\n          })\r\n        }}\r\n      >\r\n        <StyledInput\r\n          disabled={disabled}\r\n          required\r\n          placeholder={strings.form_lastNamePlaceholder}\r\n          {...text(\"lastName\")}\r\n        />\r\n        {\", \"}\r\n        <StyledInput\r\n          disabled={disabled}\r\n          required\r\n          placeholder={strings.form_firstNamePlaceholder}\r\n          {...text(\"firstName\")}\r\n        />\r\n        <StyledMiddleNameInput\r\n          disabled={disabled}\r\n          placeholder={strings.form_middleNamePlaceholder}\r\n          {...text(\"middleName\")}\r\n          maxLength={1}\r\n        />\r\n        {\".\"}\r\n\r\n        <StyledSubmitButton disabled={disabled} />\r\n      </StyledForm>\r\n    </Container>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { shipIDTypeOptionList, useCaptainProfileState } from \"../_data\";\r\nimport { StyledInput, StyledSubmitButton, StyledSelect, StyledRowForm } from \"../_theme\";\r\nimport { useFormState } from \"react-use-form-state\";\r\n\r\ninterface VesselIDFormFields {\r\n  idType: \"imo\" | \"mmsi\";\r\n  idString: string;\r\n}\r\n\r\nconst IDTypeSelect = styled(StyledSelect)`\r\n  width: 4em;\r\n`\r\n\r\nconst IDInput = styled(StyledInput)`\r\n  width: 10em;\r\n`;\r\n\r\nexport const VesselIDInput = ({ triggerNextStep, steps }: any) => {\r\n  const [profile, setProfile] = useCaptainProfileState({});\r\n\r\n  const options = shipIDTypeOptionList;\r\n\r\n  const [disabled, setDisabled] = useState(false);\r\n\r\n  const [formState, { text, select }] = useFormState<VesselIDFormFields>({\r\n    idType: \"imo\"\r\n  });\r\n\r\n  return (\r\n    <StyledRowForm\r\n      onSubmit={e => {\r\n        e.preventDefault();\r\n        // console.log(steps);\r\n        // console.log(formState.values);\r\n\r\n        setDisabled(true);\r\n\r\n        setProfile({\r\n            ...profile,\r\n            vessel: {\r\n              name: steps.add_vesselName.value,\r\n              ...formState.values\r\n            }\r\n        });\r\n\r\n        triggerNextStep();\r\n      }}\r\n    >\r\n      <IDTypeSelect\r\n        onChange={(value:string) => select(\"idType\").onChange({target:{value}})}\r\n        value={select(\"idType\").value}\r\n        disabled={disabled}\r\n        options={options}\r\n        classes={{\r\n          selectControl: \"select-control\",\r\n          selectInput: \"select-input\"\r\n        }}\r\n      />\r\n\r\n      <IDInput disabled={disabled} {...text('idString')}/>\r\n      <StyledSubmitButton disabled={disabled} />\r\n    </StyledRowForm>\r\n  );\r\n};\r\n","export const getGearId =(partOne: string, partTwo?: string, partThree?: string) => {\r\n  if(!!partThree) {\r\n    return `${partOne}_${partTwo}_${partThree}`;\r\n  }\r\n\r\n  if (!!partTwo) {\r\n    return `${partOne}_${partTwo}`;\r\n  }\r\n\r\n  if(!!partOne) {\r\n    return partOne\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nexport const isGearValid = (partOne: string, partTwo?: string, partThree?: string) => {\r\n  if (!!gearAbbreviationMap[partOne]) {\r\n    return true;\r\n  }\r\n\r\n  if(!partTwo) {\r\n    return false;\r\n  }\r\n\r\n  const partOneTwo = `${partOne}_${partTwo}`\r\n\r\n  if(!!gearAbbreviationMap[partOneTwo]) {\r\n    return true;\r\n  }\r\n\r\n  if(!partThree) {\r\n    return false;\r\n  }\r\n\r\n  const partOneTwoThree = `${partOneTwo}_${partThree}`\r\n\r\n  if(!!gearAbbreviationMap[partOneTwoThree]) {\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nexport const gearTree = {\r\n  surroundingNet: {\r\n    // 01.0.0\r\n    withPurseLines: {\r\n      // 01.1.0\r\n      oneBoatOperated: null, // 01.1.1\r\n      twoBoatsOperated: null // 01.1.2\r\n    },\r\n    withoutPurseLines: null // 01.2.0\r\n  },\r\n  seineNets: {\r\n    // 02.0.0\r\n    beachSeines: null, // 02.1.0\r\n    vesselSeines: {\r\n      // 02.2.0\r\n      danishSeines: null, // 02.2.1\r\n      scottishSeines: null,\r\n      pairSeines: null\r\n    },\r\n    seineNetsNotSpecified: null // 02.9.90\r\n  },\r\n  trawls: {\r\n    bottomTrawls: {\r\n      beamTrawls: null,\r\n      otterTrawls: null,\r\n      pairTrawls: null,\r\n      nephropsTrawls: null,\r\n      shrimpTrawls: null,\r\n      bottomTrawlsNotSpecified: null\r\n    },\r\n    midwaterTrawls: {\r\n      otterTrawls: null,\r\n      pairTrawls: null,\r\n      shrimpTrawls: null,\r\n      midwaterTrawlsNotSpecified: null\r\n    },\r\n    otterTwinTrawls: null,\r\n    otterTrawlsNotSpecified: null,\r\n    pairTrawlsNotSpecified: null,\r\n    otherTrawlsNotSpecified: null\r\n  },\r\n  dredges: {\r\n    boatDredges: null,\r\n    handDredges: null\r\n  },\r\n  liftNets: {\r\n    portableLiftNets: null,\r\n    boatOperatedLiftNets: null,\r\n    shoreOperatedStationaryLiftNets: null,\r\n    liftNetsNotSpecified: null\r\n  },\r\n  fallingGear: {\r\n    castNets: null,\r\n    fallingGearNotSpecified: null\r\n  },\r\n  gillnetsAndEntanglingNets: {\r\n    setGillnetsAnchored: null,\r\n    driftnets: null,\r\n    encirclingGillnets: null,\r\n    fixedGillnetsOnStakes: null,\r\n    trammelNets: null,\r\n    combinedGillnetsTrammelNets: null,\r\n    gillnetsAndEntanglingNetsNotSpecified: null,\r\n    gillnetsNotSpecified: null\r\n  },\r\n  traps: {\r\n    stationaryUncoveredPoundNets: null,\r\n    pots: null,\r\n    fykeNets: null,\r\n    stowNets: null,\r\n    barriersFencesWeirsEtc: null,\r\n    aerialTraps: null,\r\n    trapsNotSpecified: null\r\n  },\r\n  hooksAndLines: {\r\n    handlinesAndPoleLinesHandOperated: null,\r\n    handlinesAndPoleLinesMechanized: null,\r\n    setLonglines: null,\r\n    driftingLonglines: null,\r\n    longlinesNotSpecified: null,\r\n    trollingLines: null,\r\n    hooksAndLinesNotSpecified: null\r\n  },\r\n  grapplingAndWounding: {\r\n    harpoons: null\r\n  },\r\n  harvestingMachines: {\r\n    pumps: null,\r\n    mechanizedDredges: null,\r\n    harvestingMachinesNotSpecified: null\r\n  },\r\n  miscellaneousGear: null,\r\n  recreationalFishingGear: null,\r\n  gearNotKnowOrNotSpecified: null\r\n} as any;\r\n\r\nexport const gearBaseList = Object.keys(gearTree)\r\n\r\nexport const gearISSCFGMap = {\r\n  surroundingNet: \"01.0.0\",\r\n  surroundingNet_withPurseLines: \"01.1.0\",\r\n  surroundingNet_withPurseLines_oneBoatOperated: \"01.1.1\",\r\n  surroundingNet_withPurseLines_twoBoatsOperated: \"01.1.2\",\r\n  surroundingNet_withoutPurseLines: \"01.2.0\",\r\n  seineNets: \"02.0.0\",\r\n  seineNets_beachSeines: \"02.1.0\",\r\n  seineNets_vesselSeines: \"02.2.0\",\r\n  seineNets_vesselSeines_danishSeines: \"02.2.1\",\r\n  seineNets_vesselSeines_scottishSeines: \"02.2.2\",\r\n  seineNets_vesselSeines_pairSeines: \"02.2.3\",\r\n  seineNets_seineNetsNotSpecified: \"02.9.0\",\r\n  trawls: \"03.0.0\",\r\n  trawls_bottomTrawls: \"03.1.0\",\r\n  trawls_bottomTrawls_beamTrawls: \"03.1.1\",\r\n  trawls_bottomTrawls_otterTrawls: \"03.1.2\",\r\n  trawls_bottomTrawls_pairTrawls: \"03.1.3\",\r\n  trawls_bottomTrawls_nephropsTrawls: \"03.1.4\",\r\n  trawls_bottomTrawls_shrimpTrawls: \"03.1.5\",\r\n  trawls_bottomTrawls_bottomTrawlsNotSpecified: \"03.1.9\",\r\n  trawls_midwaterTrawls: \"03.2.0\",\r\n  trawls_midwaterTrawls_otterTrawls: \"03.2.1\",\r\n  trawls_midwaterTrawls_pairTrawls: \"03.2.2\",\r\n  trawls_midwaterTrawls_shrimpTrawls: \"03.2.3\",\r\n  trawls_midwaterTrawls_midwaterTrawlsNotSpecified: \"03.2.9\",\r\n  trawls_otterTwinTrawls: \"03.3.0\",\r\n  trawls_otterTrawlsNotSpecified: \"03.4.9\",\r\n  trawls_pairTrawlsNotSpecified: \"03.5.9\",\r\n  trawls_otherTrawlsNotSpecified: \"03.9.0\",\r\n  dredges: \"04.0.0\",\r\n  dredges_boatDredges: \"04.1.0\",\r\n  dredges_handDredges: \"04.2.0\",\r\n  liftNets: \"05.0.0\",\r\n  liftNets_portableLiftNets: \"05.1.0\",\r\n  liftNets_boatOperatedLiftNets: \"05.2.0\",\r\n  liftNets_shoreOperatedStationaryLiftNets: \"05.3.0\",\r\n  liftNets_liftNetsNotSpecified: \"05.9.0\",\r\n  fallingGear: \"06.0.0\",\r\n  fallingGear_castNets: \"06.1.0\",\r\n  fallingGear_fallingGearNotSpecified: \"06.9.0\",\r\n  gillnetsAndEntanglingNets: \"07.0.0\",\r\n  gillnetsAndEntanglingNets_setGillnetsAnchored: \"07.1.0\",\r\n  gillnetsAndEntanglingNets_driftnets: \"07.2.0\",\r\n  gillnetsAndEntanglingNets_encirclingGillnets: \"07.3.0\",\r\n  gillnetsAndEntanglingNets_fixedGillnetsOnStakes: \"07.4.0\",\r\n  gillnetsAndEntanglingNets_trammelNets: \"07.5.0\",\r\n  gillnetsAndEntanglingNets_combinedGillnetsTrammelNets: \"07.6.0\",\r\n  gillnetsAndEntanglingNets_gillnetsAndEntanglingNetsNotSpecified: \"07.9.0\",\r\n  gillnetsAndEntanglingNets_gillnetsNotSpecified: \"07.9.1\",\r\n  traps: \"08.0.0\",\r\n  traps_stationaryUncoveredPoundNets: \"08.1.0\",\r\n  traps_pots: \"08.2.0\",\r\n  traps_fykeNets: \"08.3.0\",\r\n  traps_stowNets: \"08.4.0\",\r\n  traps_barriersFencesWeirsEtc: \"08.5.0\",\r\n  traps_aerialTraps: \"08.6.0\",\r\n  traps_trapsNotSpecified: \"08.9.0\",\r\n  hooksAndLines: \"09.0.0\",\r\n  hooksAndLines_handlinesAndPoleLinesHandOperated: \"09.1.0\",\r\n  hooksAndLines_handlinesAndPoleLinesMechanized: \"09.2.0\",\r\n  hooksAndLines_setLonglines: \"09.3.0\",\r\n  hooksAndLines_driftingLonglines: \"09.4.0\",\r\n  hooksAndLines_longlinesNotSpecified: \"09.5.0\",\r\n  hooksAndLines_trollingLines: \"09.6.0\",\r\n  hooksAndLines_hooksAndLinesNotSpecified: \"09.9.0\",\r\n  grapplingAndWounding: \"10.0.0\",\r\n  grapplingAndWounding_harpoons: \"10.1.0\",\r\n  harvestingMachines: \"11.0.0\",\r\n  harvestingMachines_pumps: \"11.1.0\",\r\n  harvestingMachines_mechanizedDredges: \"11.2.0\",\r\n  harvestingMachines_harvestingMachinesNotSpecified: \"11.9.0\",\r\n  miscellaneousGear: \"20.0.0\",\r\n  recreationalFishingGear: \"25.0.0\",\r\n  gearNotKnowOrNotSpecified: \"99.0.0\"\r\n} as any;\r\n\r\nexport const gearAbbreviationMap = {\r\n  surroundingNet_withPurseLines: \"PS\",\r\n  surroundingNet_withPurseLines_oneBoatOperated: \"PS1\",\r\n  surroundingNet_withPurseLines_twoBoatsOperated: \"PS2\",\r\n  surroundingNet_withoutPurseLines: \"LA\",\r\n\r\n  seineNets_beachSeines: \"SB\",\r\n  seineNets_vesselSeines: \"SV\",\r\n  seineNets_vesselSeines_danishSeines: \"SDN\",\r\n  seineNets_vesselSeines_scottishSeines: \"SSC\",\r\n  seineNets_vesselSeines_pairSeines: \"SPR\",\r\n  seineNets_seineNetsNotSpecified: \"SX\",\r\n\r\n  trawls_bottomTrawls_beamTrawls: \"TTB\",\r\n  trawls_bottomTrawls_otterTrawls: \"OTB\",\r\n  trawls_bottomTrawls_pairTrawls: \"PTB\",\r\n  trawls_bottomTrawls_nephropsTrawls: \"TBN\",\r\n  trawls_bottomTrawls_shrimpTrawls: \"TBS\",\r\n  trawls_bottomTrawls_bottomTrawlsNotSpecified: \"TB\",\r\n\r\n  trawls_midwaterTrawls_otterTrawls: \"OTM\",\r\n  trawls_midwaterTrawls_pairTrawls: \"PTM\",\r\n  trawls_midwaterTrawls_shrimpTrawls: \"TMS\",\r\n  trawls_midwaterTrawls_midwaterTrawlsNotSpecified: \"TM\",\r\n  trawls_otterTwinTrawls: \"OTT\",\r\n  trawls_otterTrawlsNotSpecified: \"OT\",\r\n  trawls_pairTrawlsNotSpecified: \"PT\",\r\n  trawls_otherTrawlsNotSpecified: \"TX\",\r\n\r\n  dredges_boatDredges: \"DRB\",\r\n  dredges_handDredges: \"DRH\",\r\n\r\n  liftNets_portableLiftNets: \"LNP\",\r\n  liftNets_boatOperatedLiftNets: \"LNB\",\r\n  liftNets_shoreOperatedStationaryLiftNets: \"LNS\",\r\n  liftNets_liftNetsNotSpecified: \"LN\",\r\n\r\n  fallingGear_castNets: \"FCN\",\r\n  fallingGear_fallingGearNotSpecified: \"FG\",\r\n\r\n  gillnetsAndEntanglingNets_setGillnetsAnchored: \"GNS\",\r\n  gillnetsAndEntanglingNets_driftnets: \"GND\",\r\n  gillnetsAndEntanglingNets_encirclingGillnets: \"GNC\",\r\n  gillnetsAndEntanglingNets_fixedGillnetsOnStakes: \"GNF\",\r\n  gillnetsAndEntanglingNets_trammelNets: \"GTR\",\r\n  gillnetsAndEntanglingNets_combinedGillnetsTrammelNets: \"GTN\",\r\n  gillnetsAndEntanglingNets_gillnetsAndEntanglingNetsNotSpecified: \"GEN\",\r\n  gillnetsAndEntanglingNets_gillnetsNotSpecified: \"GN\",\r\n\r\n  traps_stationaryUncoveredPoundNets: \"FPN\",\r\n  traps_pots: \"FPO\",\r\n  traps_fykeNets: \"FYK\",\r\n  traps_stowNets: \"FSN\",\r\n  traps_barriersFencesWeirsEtc: \"FWR\",\r\n  traps_aerialTraps: \"FAR\",\r\n  traps_trapsNotSpecified: \"FIX\",\r\n\r\n  hooksAndLines_handlinesAndPoleLinesHandOperated: \"LHP\",\r\n  hooksAndLines_handlinesAndPoleLinesMechanized: \"LHM\",\r\n  hooksAndLines_setLonglines: \"LLS\",\r\n  hooksAndLines_driftingLonglines: \"LLD\",\r\n  hooksAndLines_longlinesNotSpecified: \"LL\",\r\n  hooksAndLines_trollingLines: \"LTL\",\r\n  hooksAndLines_hooksAndLinesNotSpecified: \"LX\",\r\n\r\n  grapplingAndWounding_harpoons: \"HAR\",\r\n\r\n  harvestingMachines_pumps: \"HMP\",\r\n  harvestingMachines_mechanizedDredges: \"HMD\",\r\n  harvestingMachines_harvestingMachinesNotSpecified: \"HMX\",\r\n\r\n  miscellaneousGear: \"MIS\",\r\n  recreationalFishingGear: \"RG\",\r\n  gearNotKnowOrNotSpecified: \"NK\"\r\n} as any;\r\n\r\n/**\r\n * data extraction code:\r\n\r\nimport {camel} from \"case\"\r\n\r\nconst data = `\r\n\r\n`.split('\\n')\r\n\r\nconst output = {}\r\n\r\ndata.map(d=>camel(d.trim())).forEach(d=>output[d] = null)\r\n\r\nconsole.log(JSON.stringify(output, \"\\t\", 2))\r\n\r\n */\r\n\r\n/**\r\n  * \r\n  * convert to ISSCFG Code, not accomodating special case.\r\n  * \r\nimport {camel} from \"case\"\r\n\r\nconst gearTree = {\r\n  surroundingNet: {\r\n    // 01.0.0\r\n    withPurseLines: {\r\n      // 01.1.0\r\n      oneBoatOperated: null, // 01.1.1\r\n      twoBoatsOperated: null // 01.1.2\r\n    },\r\n    withoutPurseLines: null // 01.2.0\r\n  },\r\n  seineNets: {\r\n    // 02.0.0\r\n    beachSeines: null, // 02.1.0\r\n    vesselSeines: {\r\n      // 02.2.0\r\n      danishSeines: null, // 02.2.1\r\n      scottishSeines: null,\r\n      pairSeines: null\r\n    },\r\n    seineNetsNotSpecified: null // 02.9.90\r\n  }\r\n};\r\n\r\nconst output = {}\r\n\r\nfunction extractTree (c, prevKey, prevIndex, level) {\r\n  if( c === null) {\r\n    \r\n    return;\r\n  };\r\n\r\n  Object.keys(c).forEach((k, i)=>{\r\n    const key = level === 1 ? k : `${prevKey}_${k}`\r\n\r\n    const nValue = key.search(/notSpecified/i) === -1 \r\n      ? i+1\r\n      : 9;\r\n\r\n    const baseValue = (level === 1 \r\n      ? (`0${nValue}`).slice(-2)\r\n      : `${prevIndex}.${nValue}`)\r\n\r\n    output[key] = baseValue + ('.0').repeat(3-level)\r\n    extractTree(c[k], key, baseValue, level + 1)\r\n  })\r\n}\r\n\r\nextractTree(gearTree,'', 0, 1)\r\n\r\nconsole.log(JSON.stringify(output, '\\t', 2))\r\n\r\n  * \r\n  */\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Select from \"react-styled-select\";\r\n\r\nimport { useCaptainProfileState } from \"../_data\";\r\nimport { StyledSubmitButton } from \"../_theme\";\r\nimport { createSelectOptionList } from \"../core/utils\";\r\n\r\nimport {\r\n  gearTree,\r\n  gearBaseList,\r\n  gearAbbreviationMap,\r\n  isGearValid,\r\n  getGearId,\r\n} from \"../data/gear\";\r\nimport { strings } from \"../i18n\";\r\n\r\nconst StyledForm = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  align-items: flex-end;\r\n  width: 100%;\r\n`;\r\n\r\nconst StyledSelect = styled(Select)`\r\n  width: 100%;\r\n  margin-bottom: 1em;\r\n\r\n  .select-control {\r\n    border-radius: 2em;\r\n    background: #eee;\r\n  }\r\n\r\n  .select-input {\r\n    margin-left: 0.5em;\r\n  }\r\n`;\r\n\r\nconst getGearKeyList : any = (gearTreeNode: null | Object) => {\r\n  if (gearTreeNode) {\r\n    const keys = Object.keys(gearTreeNode);\r\n\r\n    if (keys.length > 0) {\r\n      return createSelectOptionList(keys);\r\n    } else {\r\n      return [];\r\n    }\r\n  } else {\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const FishingGearInput = ({triggerNextStep}: any) => {\r\n  const [profile, setProfile] = useCaptainProfileState({});\r\n\r\n  const [partOne, setPartOne] = useState(\"\");\r\n  const [partTwo, setPartTwo] = useState(\"\");\r\n  const [partThree, setPartThree] = useState(\"\");\r\n\r\n  const partOneOptions = createSelectOptionList(gearBaseList);\r\n\r\n  const [partTwoOptions, setPartTwoOptions] = useState([]);\r\n  const [partThreeOptions, setPartThreeOptions] = useState([]);\r\n\r\n  const [disabled, setDisabled] = useState(false);\r\n\r\n\r\n  return (\r\n    <StyledForm\r\n      onSubmit={e => {\r\n        e.preventDefault();\r\n\r\n        setDisabled(true);\r\n\r\n        const gearId = getGearId(partOne, partTwo, partThree);\r\n\r\n        // console.log(gearId);\r\n        \r\n        if (!gearId) {\r\n          return console.error(\"GEAR ID IS INVALID!!!\");\r\n        }\r\n\r\n        const fishingGearTypeCode = gearAbbreviationMap[gearId];\r\n\r\n        setProfile({\r\n            ...profile,\r\n            fishingGearTypeCode\r\n        });\r\n\r\n        triggerNextStep();\r\n      }}\r\n    >\r\n      <StyledSelect\r\n        placeholder={strings.selectGearBase}\r\n        onChange={(value: string) => {\r\n          setPartOne(value);\r\n\r\n          setPartTwo(\"\");\r\n          setPartTwoOptions(getGearKeyList(gearTree[value]));\r\n\r\n          setPartThree(\"\");\r\n          setPartThreeOptions([]);\r\n        }}\r\n        value={partOne}\r\n        disabled={disabled}\r\n        options={partOneOptions}\r\n        classes={{\r\n          selectControl: \"select-control\",\r\n          selectInput: \"select-input\"\r\n        }}\r\n      />\r\n      <StyledSelect\r\n        placeholder={strings.selectGearSubtype}\r\n        onChange={(value: string) => {\r\n          setPartTwo(value);\r\n          setPartThree(\"\");\r\n          setPartThreeOptions(getGearKeyList(gearTree[partOne][value]));\r\n        }}\r\n        value={partTwo}\r\n        disabled={disabled || partTwoOptions.length === 0}\r\n        options={partTwoOptions}\r\n        classes={{\r\n          selectControl: \"select-control\",\r\n          selectInput: \"select-input\"\r\n        }}\r\n      />\r\n      <StyledSelect\r\n        clearable\r\n        placeholder={strings.selectGearOptionalType}\r\n        onChange={setPartThree}\r\n        onInputClear={()=>setPartThree('')}\r\n        value={partThree}\r\n        disabled={disabled || partThreeOptions.length === 0}\r\n        options={partThreeOptions}\r\n        classes={{\r\n          selectControl: \"select-control\",\r\n          selectInput: \"select-input\"\r\n        }}\r\n      />\r\n\r\n      <StyledSubmitButton\r\n        disabled={disabled || !isGearValid(partOne, partTwo, partThree)}\r\n      />\r\n    </StyledForm>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useFormState } from \"react-use-form-state\";\r\nimport { animated } from \"react-spring\";\r\n\r\nimport { useCaptainProfileState, useProfileState, localStorageKey } from \"../_data\";\r\n\r\nimport { StyledSubmitButton, ReviewInput } from \"../_theme\";\r\n\r\nconst Container = styled(animated.div)`\r\n  width: 100%;\r\n`;\r\n\r\nconst StyledForm = styled.form`\r\n  margin-top: 1em;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  align-items: flex-end;\r\n  width: 100%;\r\n`;\r\n\r\nexport const CaptainProfileReview = ({ triggerNextStep, steps }: any) => {\r\n  const {\r\n    add_productionMethod,\r\n\r\n    add_vesselOwnerName,\r\n    add_organizationName,\r\n\r\n    add_unitOfMeasurement\r\n  } = steps;\r\n\r\n  const [captainProfile] = useCaptainProfileState({});\r\n\r\n  const [, setProfile] = useProfileState({});\r\n\r\n  const [disabled, setDisabled] = useState(false);\r\n\r\n  const { captain, vessel, vesselCertification } = captainProfile;\r\n\r\n  const [formState, { text }] = useFormState<CaptainProfileReviewFormFields>({\r\n    firstName: captain.firstName,\r\n    middleName: captain.middleName,\r\n    lastName: captain.lastName,\r\n\r\n    vesselIdType: vessel.idType,\r\n    vesselIdString: vessel.idString,\r\n    vesselName: vessel.name,\r\n\r\n    vesselCertificationStandard: vesselCertification\r\n      ? vesselCertification.standard\r\n      : \"\",\r\n    vesselCertificationAgency: vesselCertification\r\n      ? vesselCertification.agency\r\n      : \"\",\r\n    vesselCertificationValue: vesselCertification\r\n      ? vesselCertification.value\r\n      : \"\",\r\n    vesselCertificationIdentification: vesselCertification\r\n      ? vesselCertification.identification\r\n      : \"\",\r\n\r\n    fishingGearType: captainProfile.fishingGearTypeCode,\r\n\r\n    productionMethod: add_productionMethod.value,\r\n\r\n    vesselOwnerName: add_vesselOwnerName ? add_vesselOwnerName.value : \"\",\r\n    organizationName: add_organizationName ? add_organizationName.value : \"\",\r\n\r\n    unitOfMeasurement: add_unitOfMeasurement.value\r\n  });\r\n\r\n  // console.log(formState.values)\r\n\r\n  // console.log(Object.keys(formState.values))\r\n\r\n  return (\r\n    <Container>\r\n      <StyledForm\r\n        onSubmit={e => {\r\n          e.preventDefault();\r\n\r\n          setDisabled(true);\r\n\r\n          setProfile({\r\n            ...formState.values,\r\n            completed: true\r\n          });\r\n\r\n          localStorage.removeItem(localStorageKey.chatCache);\r\n\r\n          triggerNextStep();\r\n        }}\r\n      >\r\n        {Object.keys(formState.values).map(k => (\r\n          <ReviewInput\r\n            key={k}\r\n            disabled={disabled}\r\n            label={k}\r\n            {...text(k as any)}\r\n          />\r\n        ))}\r\n\r\n        <StyledSubmitButton disabled={disabled} />\r\n      </StyledForm>\r\n    </Container>\r\n  );\r\n};\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useFormState } from 'react-use-form-state'\r\nimport { animated } from 'react-spring'\r\n\r\nimport { useCaptainProfileState } from '../_data'\r\nimport { strings } from '../i18n'\r\n\r\nimport { StyledSubmitButton, LabeledInput } from '../_theme'\r\n\r\ninterface CertificationStandardFormFields {\r\n  standard: string\r\n  agency: string\r\n  value: string\r\n  identification: string\r\n}\r\n\r\nconst Container = styled(animated.div)`\r\n  width: 100%;\r\n\r\n  .select-control {\r\n    border-radius: 2em;\r\n    background: #eee;\r\n  }\r\n\r\n  .select-input {\r\n    margin-left: 0.5em;\r\n  }\r\n`\r\n\r\nconst StyledForm = styled.form`\r\n  margin-top: 1em;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  align-items: flex-end;\r\n  width: 100%;\r\n`\r\n\r\nconst StyledHeaderLabel = styled.span`\r\n  color: ${p => p.theme.botBubbleColor};\r\n  font-weight: bold;\r\n`\r\n\r\nconst CertificationInput = styled(LabeledInput)`\r\n  width: 100%;\r\n  margin-bottom: 0.5em;\r\n`\r\n\r\nexport const VesselCertificationInput = ({ triggerNextStep, steps }: any) => {\r\n  const [profile, setProfile] = useCaptainProfileState({})\r\n\r\n  const [disabled, setDisabled] = useState(false)\r\n\r\n  const [formState, { text }] = useFormState<CertificationStandardFormFields>()\r\n\r\n  return (\r\n    <Container>\r\n      <StyledHeaderLabel>{strings.certification}</StyledHeaderLabel>\r\n\r\n      <StyledForm\r\n        onSubmit={e => {\r\n          e.preventDefault()\r\n\r\n          setDisabled(true)\r\n\r\n          setProfile({\r\n            ...profile,\r\n            vesselCertification: {\r\n              ...formState.values,\r\n              standard: 'MSC'\r\n            }\r\n          })\r\n\r\n          triggerNextStep()\r\n        }}>\r\n        <CertificationInput\r\n          disabled={disabled}\r\n          required\r\n          label={strings.form_certificationAgencyLabel}\r\n          placeholder={strings.form_certificationAgencyPlaceholder}\r\n          {...text('agency')}\r\n        />\r\n\r\n        <CertificationInput\r\n          disabled={disabled}\r\n          required\r\n          label={strings.form_certificationValueLabel}\r\n          placeholder={strings.form_certificationValuePlaceholder}\r\n          {...text('value')}\r\n        />\r\n\r\n        <CertificationInput\r\n          disabled={disabled}\r\n          required\r\n          label={strings.form_certificationIdentificationLabel}\r\n          placeholder={strings.form_certificationIdentificationPlaceholder}\r\n          {...text('identification')}\r\n        />\r\n\r\n        <StyledSubmitButton disabled={disabled} />\r\n      </StyledForm>\r\n    </Container>\r\n  )\r\n}\r\n","import React from \"react\";\r\n\r\nimport {\r\n  createOptionLabel,\r\n  createPromptArray\r\n} from \"../core/utils\";\r\nimport { VesselCaptainNameInput } from \"../components/VesselCaptainNameInput\";\r\nimport { VesselIDInput } from \"../components/VesselIDInput\";\r\nimport { FishingGearInput } from \"../components/FishingGearInput\";\r\nimport { CaptainProfileReview } from \"../components/CaptainProfileReview\";\r\nimport { VesselCertificationInput } from \"../components/VesselCertificationInput\";\r\n\r\nconst promptOrder = [\r\n  \"prompt_welcomeNew\",\r\n\r\n  \"prompt_introduceNemo\",\r\n\r\n  \"prompt_vesselCaptainName\",\r\n  \"add_vesselCaptainName\",\r\n\r\n  \"prompt_vesselName\",\r\n  \"add_vesselName\",\r\n\r\n  \"prompt_vesselID\",\r\n  \"add_vesselID\",\r\n\r\n  \"prompt_fishingGearTypeCode\",\r\n  \"add_fishingGearTypeCode\",\r\n\r\n  \"prompt_productionMethod\",\r\n  \"add_productionMethod\",\r\n\r\n  \"prompt_ownership\",\r\n  \"add_ownership\",\r\n\r\n  \"prompt_vesselOwnerName\",\r\n  \"add_vesselOwnerName\",\r\n\r\n  \"prompt_organization\",\r\n  \"add_organization\",\r\n\r\n  \"prompt_organizationName\",\r\n  \"add_organizationName\",\r\n\r\n  \"prompt_certificationHolder\",\r\n  \"add_certificationHolder\",\r\n\r\n  \"prompt_certificationStandard\",\r\n  \"add_certificationStandard\",\r\n\r\n  \"prompt_unitOfMeasurement\",\r\n  \"add_unitOfMeasurement\",\r\n\r\n  \"prompt_setupProfileCompleted\",\r\n\r\n  \"prompt_profileReview\",\r\n\r\n  \"prompt_profileDone\",\r\n\r\n  \"prompt_anotherOne\"\r\n];\r\n\r\nconst promptStructure = {\r\n  add_vesselCaptainName: {\r\n    component: <VesselCaptainNameInput />,\r\n    hideInput: true,\r\n    replace: false,\r\n    waitAction: true\r\n  },\r\n\r\n  add_vesselName: {\r\n    user: true\r\n  },\r\n\r\n  add_vesselID: {\r\n    component: <VesselIDInput />,\r\n    hideInput: true,\r\n    replace: false,\r\n    waitAction: true\r\n  },\r\n\r\n  add_fishingGearTypeCode: {\r\n    // user: true,\r\n    component: <FishingGearInput />,\r\n    hideInput: true,\r\n    replace: false,\r\n    waitAction: true\r\n  },\r\n\r\n  add_productionMethod: {\r\n    // user: true\r\n    hideInput: true,\r\n    options: [\"aquaculture\", \"inlandFishery\", \"marineFishery\"].map(\r\n      createOptionLabel\r\n    )\r\n  },\r\n\r\n  add_ownership: {\r\n    // user: true\r\n    hideInput: true,\r\n    options: [\"yes\", \"no\"].map(createOptionLabel),\r\n    triggers: [\"prompt_organization\", \"prompt_vesselOwnerName\"]\r\n  },\r\n\r\n  add_vesselOwnerName: {\r\n    user: true\r\n  },\r\n\r\n  add_organization: {\r\n    hideInput: true,\r\n    options: [\"yes\", \"no\"].map(createOptionLabel),\r\n    triggers: [\"prompt_organizationName\", \"prompt_certificationHolder\"]\r\n  },\r\n\r\n  add_organizationName: {\r\n    user: true\r\n  },\r\n\r\n  add_unitOfMeasurement: {\r\n    hideInput: true,\r\n    options: [\"pound\", \"kilogram\"].map(createOptionLabel)\r\n  },\r\n\r\n  add_certificationHolder: {\r\n    hideInput: true,\r\n    options: [\"yes\", \"no\"].map(createOptionLabel),\r\n    triggers: [\"prompt_certificationStandard\", \"prompt_unitOfMeasurement\"]\r\n  },\r\n\r\n  add_certificationStandard: {\r\n    component: <VesselCertificationInput />,\r\n    hideInput: true,\r\n    replace: false,\r\n    waitAction: true\r\n  },\r\n\r\n  prompt_profileReview: {\r\n    component: <CaptainProfileReview />,\r\n    hideInput: true,\r\n    replace: false,\r\n    waitAction: true\r\n  }\r\n} as any;\r\n\r\nexport const createSetupCaptainProfilePrompt = () =>\r\n  createPromptArray(promptOrder, promptStructure);\r\n","export const csvAggregationEventHeader = [\n  'action',\n  'bizStep',\n  'informationProvider',\n  'productOwner',\n  'parentID',\n  'eventTime',\n  'eventTimeZoneOffset',\n  'visibilityEvent',\n  'disposition',\n\n  'childEPCs_epc',\n\n  'readPoint_id',\n  'bizLocation_id',\n\n  'extension_childQuantityList_quantityElement_epcClass',\n  'extension_childQuantityList_quantityElement_quantity',\n  'extension_childQuantityList_quantityElement_uom'\n]\n\nexport const csvTransformationEventHeader = [\n  'bizStep',\n  'informationProvider',\n  'productOwner',\n  'eventTime',\n  'eventTimeZoneOffset',\n  'visibilityEvent',\n  'disposition',\n\n  'readPoint_id',\n  'bizLocation_id',\n\n  'inputQuantityList_quantityElement_epcClass',\n  'inputQuantityList_quantityElement_quantity',\n  'inputQuantityList_quantityElement_uom',\n\n  'outputQuantityList_quantityElement_epcClass',\n  'outputQuantityList_quantityElement_quantity',\n  'outputQuantityList_quantityElement_uom',\n\n  'ilmd_lotNumber',\n  'ilmd_productionDate',\n  'ilmd_bestBeforeDate',\n  'ilmd_preservationTechniqueCode',\n\n  'ilmd_certificationList_certification_certificationAgency',\n  'ilmd_certificationList_certification_certificationIdentification',\n  'ilmd_certificationList_certification_certificationStandard',\n  'ilmd_certificationList_certification_certificationValue'\n]\n\nexport const csvObjectEventHeader = [\n  'action',\n  'bizStep',\n  'informationProvider',\n  'productOwner',\n  'eventTime',\n  'eventTimeZoneOffset',\n  'visibilityEvent',\n  'disposition',\n\n  'epcList_epc',\n\n  'readPoint_id',\n  'bizLocation_id',\n\n  'bizTransactionList_bizTransaction_type',\n  'bizTransactionList_bizTransaction_value',\n\n  'extension_sourceList_source_type',\n  'extension_sourceList_source_value',\n\n  'extension_destinationList_destination_type',\n  'extension_destinationList_destination_value',\n\n  'extension_ilmd_FIP',\n  'extension_ilmd_harvestCertification',\n  'extension_ilmd_harvestCertificationCoC',\n  'extension_ilmd_harvestEndDate',\n  'extension_ilmd_harvestStartDate',\n  'extension_ilmd_ISSF',\n  'extension_ilmd_landingDateEnd',\n  'extension_ilmd_landingDateStart',\n  'extension_ilmd_productionMethodCode',\n  'extension_ilmd_ratingsScheme',\n  'extension_ilmd_ratingsScore',\n  'extension_ilmd_unloadingPort',\n  'extension_ilmd_vesselRegistryLink',\n  'extension_ilmd_vesselTransponder',\n\n  'extension_ilmd_certificationList_certification_certificationAgency',\n  'extension_ilmd_certificationList_certification_certificationIdentification',\n  'extension_ilmd_certificationList_certification_certificationStandard',\n  'extension_ilmd_certificationList_certification_certificationValue',\n\n  'extension_ilmd_vesselCatchInformationList_vesselCatchInformation_catchArea',\n  'extension_ilmd_vesselCatchInformationList_vesselCatchInformation_fishingGearTypeCode',\n  'extension_ilmd_vesselCatchInformationList_vesselCatchInformation_vesselFlagState',\n  'extension_ilmd_vesselCatchInformationList_vesselCatchInformation_vesselID',\n  'extension_ilmd_vesselCatchInformationList_vesselCatchInformation_vesselName',\n  'extension_ilmd_vesselCatchInformationList_vesselCatchInformation_vesselOperator',\n  'extension_ilmd_vesselCatchInformationList_vesselCatchInformation_vesselRegistration',\n\n  'extension_quantityList_quantityElement_epcClass',\n  'extension_quantityList_quantityElement_quantity',\n  'extension_quantityList_quantityElement_uom'\n]\n\nexport const csvLocationHeader = [\n  'informationProvider',\n  'id',\n  'name',\n  'unloadingPort',\n  'streetAddressOne',\n  'streetAddressTwo',\n  'city',\n  'state',\n  'postalCode',\n  'countryCode',\n  'latitude',\n  'longitude',\n  'contact',\n  'telephone',\n  'email',\n  'vesselID',\n  'vesselName',\n  'vesselOwnerName',\n  'vesselOrganizationName',\n  'fishingGearTypeCode',\n  'geofencePolygonPolygonPointSeq',\n  'geofencePolygonPolygonPointValue'\n]\n\nexport const csvEpcClassHeader = [\n  'informationProvider',\n  'id',\n  'descriptionShort',\n  'speciesForFisheryStatisticsPurposesName',\n  'speciesForFisheryStatisticsPurposesCode',\n  'tradeItemConditionCode',\n  'additionalTradeItemIdentification',\n  'preservationTechniqueCode',\n  'grossWeightMeasurementValue',\n  'grossWeightMeasurementUnitCode'\n]\n\nexport const csvBusinessDocumentHeader = [\n  'senderId',\n  'senderName',\n  'senderEmail',\n  'receiverId',\n  'receiverName',\n  'receiverEmail'\n]\n\nexport const csvMasterDataHeader = [\n  'informationProviderID',\n  'informationProviderContact',\n  'informationProviderEmail',\n  'informationReceiverID',\n  'informationReceiverContact',\n  'informationReceiverEmail',\n  'childEPC',\n  'informationProviderChild',\n  'speciesCodeChild',\n  'speciesNameChild',\n  'descriptionShortChild',\n  'itemConditionCodeChild',\n  'parentEPC',\n  'informationProviderParent',\n  'descriptonShortParent',\n  'speciesCodeParent',\n  'speciesNameParent',\n  'preservationTechniqueCode',\n  'unitOfMeasure',\n  'grossWeight',\n  'itemConditionCodeParent',\n  'additionalTradeItemIdentificationParent'\n]\n\nexport const csvLocationDataHeaderV0 = [\n  'location',\n  'name',\n  'partyIDTypeCode',\n  'additionalPartyID',\n  'streetAddressOne',\n  'streetAddressTwo',\n  'city',\n  'state',\n  'postalCode',\n  'countryCode',\n  'latitude',\n  'longitude',\n  'contact',\n  'telephone',\n  'email'\n]\n\nexport const csvEventLevelDataHeader = [\n  'action',\n  'eventTime',\n  'eventTimeZoneOffset',\n  'readPoint',\n  'bizLocation',\n  'purchaseOrderNumber',\n  'quantity',\n  'productOwner',\n  'informationProvider'\n]\n\nexport const csvAggregationDisaggregationHeader = [\n  ...csvMasterDataHeader,\n  ...csvLocationDataHeaderV0,\n  ...csvEventLevelDataHeader\n]\n\nexport const csvShipReceiveHeader = [\n  ...csvMasterDataHeader,\n  ...csvLocationDataHeaderV0,\n  ...csvEventLevelDataHeader\n]\n\nexport const csvAggregatedCatchProcessHeader = [\n  'informationProviderID',\n  'informationProviderContactName',\n  'informationProviderEmail',\n  'destinationID',\n  'destinationContactName',\n  'destinationEmail',\n  'eventDateV1',\n  'eventTimeZoneOffsetV1',\n  'readPointV1',\n  'bizLocationV1',\n  'seafoodID',\n  'speciesCode',\n  'speciesScientificName',\n  'tradeItemDescription',\n  'tradeItemConditionCode',\n  'seafoodQuantity',\n  'seafoodUOM',\n  'vesselOperator',\n  'vesselID',\n  'vesselRegistration',\n  'vesselName',\n  'vesselFlagState',\n  'catchAreaFAO',\n  'fishingGearTypeCode',\n  'productionMethodCode',\n  'harvestStartDate',\n  'harvestEndDate',\n  'unloadingPort',\n  'mscCertification',\n  'landingAuthority',\n  'landingAuthorization',\n  'landingDateStart',\n  'landingDateEnd',\n  'harvestCertification',\n  'harvestCertificationCoC',\n  'FIP',\n  'ISSF',\n  'ratingsScore',\n  'ratingsScheme',\n  'vesselTransponder',\n  'vesselRegistryLink',\n  'visibilityEvent',\n  'productOwnerV1',\n  'eventDateV2',\n  'eventTimeZoneOffsetV2',\n  'readPointV2',\n  'bizLocationV2',\n  'inputSeafoodID',\n  'inputSeafoodQuantity',\n  'inputSeafoodUOM',\n  'outputProductID',\n  'outputProductName',\n  'outputQuantity',\n  'outputUOM',\n  'lotNumber',\n  'productionDate',\n  'bestBeforeDate',\n  'storageStateCode',\n  'firstFreezeDate',\n  'countryOfOrigin',\n  'processorOwnerName',\n  'processorID',\n  'processorAddress1',\n  'processorAddress2',\n  'processorCity',\n  'processorState',\n  'processorPostalCode',\n  'processorCountryCode',\n  'processorContactName',\n  'processorContactEmail',\n  'transformationVisibilityEvent',\n  'productOwnerV3'\n]\n","import fileReaderStream from 'filereader-stream'\n// const parseDate = (s) => DateTime.fromFormat(s, 'dd/MM/yy').toISO()\n\nexport const createCsvFileReaderStream =(file)=> {\n  if (!file) throw new Error(\"no file\")\n\n  if (file.name.split('.').pop() !== 'csv') {\n    throw new Error('not csv')\n  }\n\n  return fileReaderStream(file)\n}\n\nexport const parseUom = (s: string) =>\n  s && s[0].toLowerCase() === 'l' ? 'LBR' : 'KGM'\n\nexport const createSender = ({\n  informationProviderID,\n  informationProviderContactName,\n  informationProviderEmail\n}) => `\n<sbdh:Sender>\n    <sbdh:Identifier>${informationProviderID}</sbdh:Identifier>\n    <sbdh:ContactInformation>\n        <sbdh:Contact>${informationProviderContactName}</sbdh:Contact>\n        <sbdh:EmailAddress>${informationProviderEmail}</sbdh:EmailAddress>\n    </sbdh:ContactInformation>\n</sbdh:Sender>\n`\n\nexport const createReceiver = ({\n  destinationID,\n  destinationContactName,\n  destinationEmail\n}) => `\n<sbdh:Receiver>\n    <sbdh:Identifier>${destinationID}</sbdh:Identifier>\n    <sbdh:ContactInformation>\n        <sbdh:Contact>${destinationContactName}</sbdh:Contact>\n        <sbdh:EmailAddress>${destinationEmail}</sbdh:EmailAddress>\n    </sbdh:ContactInformation>\n</sbdh:Receiver>\n`\n\nexport const createFishVocab = ({\n  seafoodID,\n  speciesCode,\n  speciesScientificName,\n  tradeItemDescription,\n  informationProviderID,\n  tradeItemConditionCode\n}) => `\n<VocabularyElement id=\"${seafoodID}\"> \n    <attribute id=\"urn:epcglobal:cbv:mda#speciesForFisheryStatisticsPurposesCode\">${speciesCode}</attribute>\n    <attribute id=\"urn:epcglobal:cbv:mda#speciesForFisheryStatisticsPurposesName\">${speciesScientificName}</attribute>\n    <attribute id=\"urn:epcglobal:cbv:mda#descriptionShort\">${tradeItemDescription}</attribute>\n    <attribute id=\"urn:epcglobal:cbv:mda#informationProvider\">${informationProviderID}</attribute>\n    <attribute id=\"urn:epcglobal:cbv:mda#tradeItemConditionCode\">${tradeItemConditionCode}</attribute>\n</VocabularyElement>\n`\nconst createVocabEl = ({ id, ...props }) => `\n<VocabularyElement id=\"${id}\">\n    ${Object.keys(props)\n      .map(\n        k =>\n          `<attribute id=\"urn:epcglobal:cbv:mda#${k}\">${props[k]}</attribute>`\n      )\n      .join('\\n')}\n</VocabularyElement>\n`\n\nexport const createOutputProductVocab = (data: CsvCatchProcessPayloadFields) =>\n  createVocabEl({\n    id: data.outputProductID,\n    informationProvider: data.informationProviderID,\n    descriptionShort: data.outputProductName\n  })\n\nexport const createLocationVocab = (data: CsvCatchProcessPayloadFields) =>\n  createVocabEl({\n    id: data.processorID,\n    informationProvider: data.informationProviderID,\n    name: data.processorOwnerName,\n    streetAddressOne: data.processorAddress1,\n    streetAddressTwo: data.processorAddress2,\n    city: data.processorCity,\n    state: data.processorState,\n    postalCode: data.processorPostalCode,\n    countryCode: data.processorCountryCode,\n    contact: data.processorContactName,\n    email: data.processorContactEmail\n  })\n\nexport const createFishCatchEvent = (data: CsvCatchProcessPayloadFields) => `\n<ObjectEvent> <!-- V1 Fishing/Catch Event (represents one catch, if multiple creat multiple events and IDs) -->\n    <eventTime>${\n      data.eventDateV1\n    }</eventTime> <!-- Reflects when the catch event is recorded, not actually when fish are caught -->\n    <eventTimeZoneOffset>${data.eventTimeZoneOffsetV1}</eventTimeZoneOffset>\n    <epcList>\n    </epcList>\n    <action>ADD</action> <!-- Action ADD indicates this is the creation point of the specific lot of fish -->\n    <bizStep>urn:epcglobal:cbv:bizstep:commissioning</bizStep> <!-- Indicates first time this ID appears in traceability event stream -->\n    <disposition>urn:epcglobal:cbv:disp:active</disposition> <!-- This indicates the lot is active. -->\n    <readPoint>\n        <id>${\n          data.readPointV1\n        }</id> <!-- This should either be where the catch event was recorded or where the fish was landed -->\n    </readPoint>\n    <bizLocation>\n        <id>${\n          data.bizLocationV1\n        }</id> <!-- Optional, if the vessel has a globally unique ID.  Otherwise, exclude.-->\n    </bizLocation>\n    <extension>              \n        <quantityList>\n            <quantityElement> \n                <epcClass>${\n                  data.seafoodID\n                }</epcClass> <!-- #10 GDST KDE Seafood Identifier -->\n                <quantity>${\n                  data.seafoodQuantity\n                }</quantity> <!-- #11 GDST KDE Weight/Commodity -->\n                <uom>${parseUom(data.seafoodUOM)}</uom> <!-- SIMP UOM is KG -->\n            </quantityElement>\n        </quantityList>\n        <ilmd>\n            <cbvmda:vesselCatchInformationList> <!--  Attach GDST KDEs to unique Catch Event -->\n                <vesselCatchInformation>\n                    <vesselOperator>${\n                      data.vesselOperator\n                    }</vesselOperator> <!-- #24 GDST KDE Vessel Ownership -->\n                    <vesselID>${data.vesselID}</vesselID>\n                    <vesselRegistration>${\n                      data.vesselRegistration\n                    }</vesselRegistration>\n                    <vesselName>${data.vesselName}</vesselName>\n                    <vesselFlagState>${data.vesselFlagState}</vesselFlagState>\n                    <catchArea>${\n                      data.catchAreaFAO\n                    }</catchArea> <!-- #7 GDST KDE FAO Catch Area -->\n                    <fishingGearTypeCode>${\n                      data.fishingGearTypeCode\n                    }</fishingGearTypeCode> <!-- #5 GDST KDE Gear Type Code -->\n                </vesselCatchInformation>\n            </cbvmda:vesselCatchInformationList>\n            <cbvmda:productionMethodCode>${\n              data.productionMethodCode\n            }</cbvmda:productionMethodCode> <!-- SIMP Source Type Code \"HCF\" -->\n            <cbvmda:harvestStartDate>${\n              data.harvestStartDate\n            }</cbvmda:harvestStartDate> <!-- #8 & 9 GDST KDE Date of Capture -->\n            <cbvmda:harvestEndDate>${\n              data.harvestEndDate\n            }</cbvmda:harvestEndDate> <!-- #8 & 9 GDST KDE Date of Capture -->\n            <cbvmda:certificationList> <!-- CERTIFICATES -->\n                <certification>\n                    <certificationStandard>MSC</certificationStandard>\n                    <certificationIdentification>${\n                      data.mscCertification\n                    }</certificationIdentification>\n                </certification>\n                <certification>\n                    <certificationStandard>${\n                      data.landingAuthority\n                    }</certificationStandard>\n                    <certificationIdentification>${\n                      data.landingAuthorization\n                    }</certificationIdentification>\n                </certification>\n            </cbvmda:certificationList>\n            <cbvmda:unloadingPort>${data.unloadingPort}</cbvmda:unloadingPort>\n            <gdst:landingDateStart>${\n              data.landingDateStart\n            }</gdst:landingDateStart>\n            <gdst:landingDateEnd>${data.landingDateEnd}</gdst:landingDateEnd>\n            <gdst:harvestCertification>${\n              data.harvestCertification\n            }</gdst:harvestCertification>\n            <gdst:harvestCertificationCoC>${\n              data.harvestCertificationCoC\n            }</gdst:harvestCertificationCoC>\n            <gdst:FIP>${data.FIP}</gdst:FIP>\n            <gdst:ISSF>${data.ISSF}</gdst:ISSF>\n            <gdst:ratingsScore>${data.ratingsScore}</gdst:ratingsScore>\n            <gdst:ratingsScheme>${data.ratingsScheme}</gdst:ratingsScheme>\n            <gdst:vesselTransponder>${\n              data.vesselTransponder\n            }</gdst:vesselTransponder>\n            <gdst:vesselRegistryLink>${\n              data.vesselRegistryLink\n            }</gdst:vesselRegistryLink>\n        </ilmd>\n    </extension>\n    <!-- EXTENSION -->\n    <gdst:visibilityEvent>${\n      data.visibilityEvent\n    }</gdst:visibilityEvent> <!-- Visibility Data -->\n    <gdst:productOwner>${\n      data.productOwnerV1\n    }</gdst:productOwner> <!-- Product Owner -->\n    <cbvmda:informationProvider>${\n      data.informationProviderID\n    }</cbvmda:informationProvider> <!-- Submitter of Data -->\n</ObjectEvent>\n`\n\nexport const createProcessEvent = (data: CsvCatchProcessPayloadFields) => `\n<extension> <!-- V2 Process Into Loins -->\n    <TransformationEvent>\n        <eventTime>${data.eventDateV2}</eventTime>\n        <eventTimeZoneOffset>${data.eventTimeZoneOffsetV2}</eventTimeZoneOffset>\n        <inputQuantityList>\n            <quantityElement> \n                <epcClass>${data.inputSeafoodID}</epcClass>\n                <quantity>${data.inputSeafoodQuantity}</quantity>\n                <uom>${parseUom(data.inputSeafoodUOM)}</uom>\n            </quantityElement>\n        </inputQuantityList>\n        <outputQuantityList>\n            <quantityElement>\n                <epcClass>${data.outputProductID}</epcClass> \n                <quantity>${data.outputQuantity}</quantity>\n                <uom>${parseUom(data.outputUOM)}</uom>\n            </quantityElement>\n        </outputQuantityList> \n        <bizStep>urn:epcglobal:cbv:bizstep:commissioning</bizStep>\n        <disposition>urn:epcglobal:cbv:disp:active</disposition>\n        <readPoint>\n            <id>${\n              data.readPointV2\n            }</id> <!-- Actual Location where event is captured -->\n        </readPoint>\n        <bizLocation>\n            <id>${data.bizLocationV2}</id> <!-- Processor Location -->\n        </bizLocation>\n        <ilmd> <!-- Master Data Related to a specific production lot -->\n            <cbvmda:lotNumber>${data.lotNumber}</cbvmda:lotNumber>\n            <cbvmda:productionDate>${\n              data.productionDate\n            }</cbvmda:productionDate>\n            <cbvmda:bestbeforeDate>${\n              data.bestBeforeDate\n            }</cbvmda:bestbeforeDate>\n            <cbvmda:storageStateCode>${\n              data.storageStateCode\n            }</cbvmda:storageStateCode>\n            <cbvmda:firstFreezeDate>${\n              data.firstFreezeDate\n            }</cbvmda:firstFreezeDate>\n            <cbvmda:countryOfOrigin>${\n              data.countryOfOrigin\n            }</cbvmda:countryOfOrigin>\n        </ilmd>\n        <!-- EXTENSION -->\n        <gdst:visibilityEvent>${\n          data.transformationVisibilityEvent\n        }</gdst:visibilityEvent>\n        <gdst:productOwner>${\n          data.productOwnerV3\n        }</gdst:productOwner> <!-- PGLN of company who owned products when event occurred. In the case of a transaction, it is the seller. -->\n        <cbvmda:informationProvider>${\n          data.informationProviderID\n        }</cbvmda:informationProvider> <!-- PGLN of company who input the data. -->\n    </TransformationEvent>\n</extension>\n`\n","import { DateTime } from 'luxon'\nimport {\n  createSender,\n  createReceiver,\n  createFishVocab,\n  createOutputProductVocab,\n  createLocationVocab,\n  createFishCatchEvent,\n  createProcessEvent\n} from '.'\n\nexport const createSingleCatchAndProcessXml = async (\n  data: CsvCatchProcessPayloadFields\n) => {\n  const dt = DateTime.local()\n  const creationDate = dt.toISO()\n  // const { latitude, longitude } = (await getCoordinate()) as any;\n  // const quantityElementList = generateQuantityElementList(\n  //   fishCode,\n  //   quantityList\n  // );\n  // const vesselCaptainName = upper(`${lastName}_${firstName}`, \",\");\n  // const productionMethodCode = productionMethodCodeMap[productionMethod];\n  // const vesselID = upper(vesselIdType) + \".\" + vesselIdString;\n  // const vesselFlagState = upper(language);\n  return `\n<epcis:EPCISDocument xmlns:epcis=\"urn:epcglobal:epcis:xsd:1\" \n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" \n    xmlns:sbdh=\"http://www.unece.org/cefact/namespaces/StandardBusinessDocumentHeader\" schemaVersion=\"0\" creationDate=\"2001-12-17T09:30:47Z\" \n    xsi:schemaLocation=\"urn:epcglobal:epcis:xsd:1  http://www.gs1si.org/BMS/epcis/1_2/EPCglobal-epcis-1_2.xsd\" \n    xmlns:cbvmda=\"urn:epcglobal:cbv:mda\"\n    xmlns:gdst=\"https://traceability-dialogue.org/epcis\">\n    <EPCISHeader>\n        <sbdh:StandardBusinessDocumentHeader>\n            <sbdh:HeaderVersion>1.0</sbdh:HeaderVersion>\n\n            ${createSender(data)}\n\n            ${createReceiver(data)}\n\n            <sbdh:DocumentIdentification> <!-- Meets minimum GDST Wild Caught BUL KDE 4.0 and CTEs  -->\n                <sbdh:Standard>GDST</sbdh:Standard> \n                <sbdh:TypeVersion>4.0</sbdh:TypeVersion>\n                <sbdh:Type>Wild</sbdh:Type>\n                <sbdh:CreationDateAndTime>${creationDate}</sbdh:CreationDateAndTime>\n            </sbdh:DocumentIdentification>\n        </sbdh:StandardBusinessDocumentHeader>\n        <extension>\n            <EPCISMasterData>\n                <VocabularyList> \n                    <Vocabulary type=\"urn:epcglobal:epcis:vtype:EPCClass\">\n                        <VocabularyElementList>\n                            ${createFishVocab(data)}\n\n                            ${createOutputProductVocab(data)}\n                        </VocabularyElementList>\n                    </Vocabulary>\n                    <Vocabulary type=\"urn:epcglobal:epcis:vtype:Location\">\n                        <VocabularyElementList>\n                            ${createLocationVocab(data)}    \n                        </VocabularyElementList>\n                    </Vocabulary>           \n                </VocabularyList>\n            </EPCISMasterData>\n        </extension>\n    </EPCISHeader>\n        <EPCISBody>\n        <EventList>\n            ${createFishCatchEvent(data)}\n            ${createProcessEvent(data)}\n        </EventList>\n    </EPCISBody>\n</epcis:EPCISDocument>\n`\n}\n\nexport const createAggregatedCatchAndProcessXml = async (dataList: [CsvCatchProcessPayloadFields]) => {\n  const dt = DateTime.local()\n  const creationDate = dt.toISO()\n  // Use the 1st row for sender and receiver\n  const {\n    informationProviderID,\n    informationProviderContactName,\n    informationProviderEmail,\n    destinationID,\n    destinationContactName,\n    destinationEmail\n  } = dataList[0]\n  const fishIdSet = new Set()\n  const fishVocabList = dataList.filter(({ seafoodID }) => {\n    if (fishIdSet.has(seafoodID)) return false\n    fishIdSet.add(seafoodID)\n    return true\n  })\n  const outputProductIdSet = new Set()\n  const outputProductVocabList = dataList.filter(({ outputProductID }) => {\n    if (outputProductIdSet.has(outputProductID)) return false\n    outputProductIdSet.add(outputProductID)\n    return true\n  })\n  /**\n     *\n        id: processorID,\n        informationProvider: informationProviderID,\n        name: processorOwnerName,\n        streetAddressOne: processorAddress1,\n        streetAddressTwo: processorAddress2,\n        city: processorCity,\n        state: processorState,\n        postalCode: processorPostalCode,\n        countryCode: processorCountryCode,\n        contact: processorContactName,\n        email: processorContactEmail\n     */\n  const locationIdSet = new Set()\n  const locationVocabList = dataList.filter(({ processorID }) => {\n    if (locationIdSet.has(processorID)) return false\n    locationIdSet.add(processorID)\n    return true\n  })\n  return `\n<epcis:EPCISDocument xmlns:epcis=\"urn:epcglobal:epcis:xsd:1\" \n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" \n    xmlns:sbdh=\"http://www.unece.org/cefact/namespaces/StandardBusinessDocumentHeader\" schemaVersion=\"1.2\" creationDate=\"2001-12-17T09:30:47Z\" \n    xsi:schemaLocation=\"urn:epcglobal:epcis:xsd:1  http://www.gs1si.org/BMS/epcis/1_2/EPCglobal-epcis-1_2.xsd\" \n    xmlns:cbvmda=\"urn:epcglobal:cbv:mda\"\n    xmlns:gdst=\"https://traceability-dialogue.org/epcis\">\n    <EPCISHeader>\n        <sbdh:StandardBusinessDocumentHeader>\n            <sbdh:HeaderVersion>1.0</sbdh:HeaderVersion>\n\n            ${createSender({\n              informationProviderID,\n              informationProviderContactName,\n              informationProviderEmail\n            })}\n\n            ${createReceiver({\n              destinationID,\n              destinationContactName,\n              destinationEmail\n            })}\n\n            <sbdh:DocumentIdentification> <!-- Meets minimum GDST Wild Caught BUL KDE 4.0 and CTEs  -->\n                <sbdh:Standard>GDST</sbdh:Standard> \n                <sbdh:TypeVersion>4.0</sbdh:TypeVersion>\n                <sbdh:InstanceIdentifier>100002</sbdh:InstanceIdentifier>\n                <sbdh:Type>Wild</sbdh:Type>\n                <sbdh:CreationDateAndTime>${creationDate}</sbdh:CreationDateAndTime>\n            </sbdh:DocumentIdentification>\n        </sbdh:StandardBusinessDocumentHeader>\n        <extension>\n            <EPCISMasterData>\n                <VocabularyList> \n                    <Vocabulary type=\"urn:epcglobal:epcis:vtype:EPCClass\">\n                        <VocabularyElementList>\n\n                            ${fishVocabList.map(createFishVocab).join('\\n')}\n\n                            ${outputProductVocabList\n                              .map(createOutputProductVocab)\n                              .join('\\n')}\n\n                        </VocabularyElementList>\n                    </Vocabulary>\n                    <Vocabulary type=\"urn:epcglobal:epcis:vtype:Location\">\n                        <VocabularyElementList>\n                            ${locationVocabList\n                              .map(createLocationVocab)\n                              .join('\\n')}\n                        </VocabularyElementList>\n                    </Vocabulary>           \n                </VocabularyList>\n            </EPCISMasterData>\n        </extension>\n    </EPCISHeader>\n        <EPCISBody>\n        <EventList>\n            ${dataList.map(createFishCatchEvent).join('\\n')}\n\n            ${dataList.map(createProcessEvent).join('\\n')}\n            </EventList>\n    </EPCISBody>\n</epcis:EPCISDocument>\n`\n}\n","import { parseUom } from '.'\n\nconst createSingleAggregationDisaggregationEvent = (\n  d: CsvAggregationDisaggregationPayloadFields\n) => {\n  return `                         \n<AggregationEvent>\n    <eventTime>${d.eventTime}</eventTime>\n    <eventTimeZoneOffset>${d.eventTimeZoneOffset}</eventTimeZoneOffset>\n    <parentID>${d.parentEPC}</parentID>\n    <childEPCs>\n    </childEPCs>\n    <action>${d.action}</action>\n    <bizStep>urn:epcglobal:cbv:bizstep:${\n      d.action === 'ADD' ? 'packing' : 'removing'\n    }</bizStep>\n    <disposition>urn:epcglobal:cbv:disp:in_progress</disposition>\n    <readPoint>\n        <id>${d.readPoint}</id>\n    </readPoint>\n    <bizLocation>\n        <id>${d.bizLocation}</id>\n    </bizLocation>\n    <extension>\n        <childQuantityList>\n            <quantityElement>\n                <epcClass>${d.childEPC}</epcClass>\n                <quantity>${d.quantity}</quantity>\n                <uom>${parseUom(d.unitOfMeasure)}</uom>\n            </quantityElement>\n        </childQuantityList>\n    </extension>\n\n    <!-- EXTENSION -->\n    <gdst:visibilityEvent>${\n      d.action === 'ADD' ? 'Aggregate' : 'Disaggregate'\n    }</gdst:visibilityEvent>    \n    <gdst:productOwner>${d.productOwner}</gdst:productOwner>\n    <cbvmda:informationProvider>${\n      d.informationProvider\n    }</cbvmda:informationProvider>\n</AggregationEvent>`\n}\n\nexport const createAggregatedAggregationDisaggregationXml = async (\n  dList: [CsvAggregationDisaggregationPayloadFields]\n) => {\n  const d = dList[0]\n  return `<!-- GDST Basic Interoperability CSV File Nemo Converter - Aggregation / Disaggregation -->\n<epcis:EPCISDocument xmlns:epcis=\"urn:epcglobal:epcis:xsd:1\" \n      xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" \n      xmlns:sbdh=\"http://www.unece.org/cefact/namespaces/StandardBusinessDocumentHeader\" \n      schemaVersion=\"0\" \n      creationDate=\"2001-12-17T09:30:47Z\" \n      xsi:schemaLocation=\"urn:epcglobal:epcis:xsd:1  http://www.gs1si.org/BMS/epcis/1_2/EPCglobal-epcis-1_2.xsd\" \n      xmlns:cbvmda=\"urn:epcglobal:cbv:mda\"\n      xmlns:gdst=\"https://traceability-dialogue.org/epcis\">\n      <EPCISHeader>\n          <sbdh:StandardBusinessDocumentHeader>\n              <sbdh:HeaderVersion>1.0</sbdh:HeaderVersion>\n              <sbdh:Sender>\n                  <sbdh:Identifier>${\n                    d.informationProviderID\n                  }</sbdh:Identifier><!-- Sending Entity -->\n                  <sbdh:ContactInformation>\n                      <sbdh:Contact>${\n                        d.informationProviderContact\n                      }</sbdh:Contact>\n                      <sbdh:EmailAddress>${\n                        d.informationProviderEmail\n                      }</sbdh:EmailAddress>\n                  </sbdh:ContactInformation>\n              </sbdh:Sender>\n              <sbdh:Receiver>\n                  <sbdh:Identifier>${\n                    d.informationReceiverID\n                  }</sbdh:Identifier>                <!-- Receiving Entity -->\n                  <sbdh:ContactInformation>\n                      <sbdh:Contact>${\n                        d.informationReceiverContact\n                      }</sbdh:Contact>\n                      <sbdh:EmailAddress>${\n                        d.informationReceiverEmail\n                      }</sbdh:EmailAddress>\n                  </sbdh:ContactInformation>\n              </sbdh:Receiver>\n              <sbdh:DocumentIdentification>\n                  <sbdh:Standard>GS1</sbdh:Standard>\n                  <sbdh:TypeVersion>3.0</sbdh:TypeVersion>\n                  <sbdh:InstanceIdentifier>9999</sbdh:InstanceIdentifier>\n                  <sbdh:Type>Seafood Traceability</sbdh:Type>\n                  <sbdh:MultipleType>false</sbdh:MultipleType>\n                  <sbdh:CreationDateAndTime>2016-12-15T11:11:52+08:00</sbdh:CreationDateAndTime>\n              </sbdh:DocumentIdentification>\n          </sbdh:StandardBusinessDocumentHeader>\n          <extension>\n              <EPCISMasterData>\n                  <VocabularyList>\n                      <Vocabulary type=\"urn:epcglobal:epcis:vtype:EPCClass\">\n                          <VocabularyElementList>\n                              <VocabularyElement id=\"${d.childEPC}\">\n                                  <attribute id=\"urn:epcglobal:cbv:mda#informationProvider\">${\n                                    d.informationProviderChild\n                                  }</attribute>\n                                  <attribute id=\"urn:epcglobal:cbv:mda#speciesForFisheryStatisticsPurposesCode\">${\n                                    d.speciesCodeChild\n                                  }</attribute>\n                                  <attribute id=\"urn:epcglobal:cbv:mda#speciesForFisheryStatisticsPurposesName\">${\n                                    d.speciesNameChild\n                                  }</attribute>\n                                  <attribute id=\"urn:epcglobal:cbv:mda#descriptionShort\">${\n                                    d.descriptionShortChild\n                                  }</attribute>\n                                  <attribute id=\"urn:epcglobal:cbv:mda#tradeItemConditionCode\">${\n                                    d.itemConditionCodeChild\n                                  }</attribute>\n                                  <attribute id=\"urn:epcglobal:cbv:mda#tradeItemConditionCode\">${\n                                    d.itemConditionCodeParent\n                                  }</attribute>\n                                  <attribute id=\"urn:epcglobal:cbv:mda#additionalTradeItemIdentification\">${\n                                    d.additionalTradeItemIdentificationParent\n                                  }</attribute>\n                              </VocabularyElement>\n                          </VocabularyElementList>\n                      </Vocabulary>\n                      <Vocabulary type=\"urn:epcglobal:epcis:vtype:Location\">\n                          <VocabularyElementList>\n                              <VocabularyElement id=\"${d.location}\">\n                                  <attribute id=\"urn:epcglobal:cbv:mda#informationProvider\">${\n                                    d.informationProvider\n                                  }</attribute>\n                                  <attribute id=\"urn:epcglobal:cbv:mda#name\">${\n                                    d.name\n                                  }</attribute>\n                                  <attribute id=\"urn:epcglobal:cbv:mda#partyIDTypeCode\">${\n                                    d.partyIDTypeCode\n                                  }</attribute>\n                                  <attribute id=\"urn:epcglobal:cbv:mda#additionalPartyID\">${\n                                    d.additionalPartyID\n                                  }</attribute>\n                                  <attribute id=\"urn:epcglobal:cbv:mda#streetAddressOne\">${\n                                    d.streetAddressOne\n                                  }</attribute>\n                                  <attribute id=\"urn:epcglobal:cbv:mda#streetAddressTwo\">${\n                                    d.streetAddressTwo\n                                  }</attribute>\n                                  <attribute id=\"urn:epcglobal:cbv:mda#city\">${\n                                    d.city\n                                  }</attribute>\n                                  <attribute id=\"urn:epcglobal:cbv:mda#state\">${\n                                    d.state\n                                  }</attribute>\n                                  <attribute id=\"urn:epcglobal:cbv:mda#postalCode\">${\n                                    d.postalCode\n                                  }</attribute>\n                                  <attribute id=\"urn:epcglobal:cbv:mda#countryCode\">${\n                                    d.countryCode\n                                  }</attribute>\n                                  <attribute id=\"urn:epcglobal:cbv:mda#latitude\">${\n                                    d.latitude\n                                  }</attribute>\n                                  <attribute id=\"urn:epcglobal:cbv:mda#longitude\">${\n                                    d.longitude\n                                  }</attribute>\n                                  <attribute id=\"unr:epcglobal:cbv:mda#contact\">${\n                                    d.contact\n                                  }</attribute>\n                                  <attribute id=\"urn:epcglobal:cbv:mda#telephone\">${\n                                    d.telephone\n                                  }</attribute>\n                                  <attribute id=\"urn:epcglobal:cbv:mda#email\">${\n                                    d.email\n                                  }</attribute>\n                              </VocabularyElement>\n  \n                          </VocabularyElementList>\n                      </Vocabulary>\n                  </VocabularyList>\n              </EPCISMasterData>\n          </extension>\n      </EPCISHeader>\n      <EPCISBody>\n          <EventList>\n            ${dList.map(createSingleAggregationDisaggregationEvent).join('\\n')}\n          </EventList>\n      </EPCISBody>\n</epcis:EPCISDocument>\n`\n}\n","import React, { useState, useRef } from 'react'\nimport styled from 'styled-components'\n\nimport { DateTime } from 'luxon'\n\nimport FileDrop from 'react-file-drop'\nimport { FillButton, Divider } from '../_theme'\n\nimport fileReaderStream from 'filereader-stream'\nimport neatCsv from 'neat-csv'\nimport {\n  csvAggregatedCatchProcessHeader,\n  csvAggregationDisaggregationHeader,\n  csvShipReceiveHeader\n} from '../api/csvToXml/csvHeader'\nimport {\n  createSingleCatchAndProcessXml,\n  createAggregatedCatchAndProcessXml\n} from '../api/csvToXml/catchAndProcessXml'\nimport { Accordion, AccordionPanel, Box, Heading } from 'grommet'\nimport { Grommet } from 'grommet'\nimport { grommet } from 'grommet/themes'\nimport api from '../api'\nimport { saveAs } from 'file-saver'\nimport { createAggregatedAggregationDisaggregationXml } from '../api/csvToXml/aggregationDisaggregationXml'\nimport { createShipReceiveXml } from '../api/csvToXml/shipReceiveXml'\n\ntype SentStateType = 'default' | 'sending' | 'sent'\n\nconst StyledGrommet = styled(Grommet)`\n  width: 100%;\n`\n\nconst DataContainer = styled.div`\n  max-height: 30vh;\n  overflow-y: auto;\n`\n\nexport const FileDropContainer = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n`\n\nconst HiddenFileDropContainer = styled.div`\n  position: relative;\n  width: 100%;\n  display: flex;\n\n  .file-drop {\n    /* relatively position the container bc the contents are absolute */\n    position: relative;\n    height: 100px;\n    width: 100%;\n    border: 2px dashed;\n  }\n\n  .file-drop > .file-drop-target {\n    cursor: pointer;\n\n    /* basic styles */\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 100%;\n    width: 100%;\n    border-radius: 2px;\n    /* --------------- */\n\n    /* horizontally and vertically center all content */\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    justify-content: center;\n    align-content: center;\n    text-align: center;\n    /* --------------- */\n  }\n\n  .file-drop > .file-drop-target.file-drop-dragging-over-frame {\n    /* overlay a black mask when dragging over the frame */\n    border: none;\n    background-color: ${p => p.theme.userFontColor};\n    box-shadow: none;\n    z-index: 50;\n    opacity: 1;\n    /* --------------- */\n\n    /* typography */\n    color: white;\n    /* --------------- */\n  }\n\n  .file-drop > .file-drop-target.file-drop-dragging-over-target {\n    /* turn stuff orange when we are dragging over the target */\n    color: ${p => p.theme.headerBgColor};\n    box-shadow: 0 0 13px 3px ${p => p.theme.headerBgColor};\n  }\n`\n\nconst HiddenFileInput = styled.div`\n  display: none;\n`\n\nconst FileDropText = styled.div`\n  padding: 1em;\n`\n\nconst AccordionContent = styled(Box)`\n  height: 20vh;\n  overflow-y: auto;\n`\n\nconst CodeContainer = styled.code`\n  white-space: pre-wrap;\n  font-size: smaller;\n`\n\nexport const XmlDownloadButton = ({\n  disabled = false,\n  fileLabel,\n  xml = '',\n  downloadText = 'Download Aggregated XML'\n}) => (\n  <FillButton\n    background={'limegreen'}\n    disabled={disabled}\n    onClick={() => {\n      const blob = new Blob([xml], {\n        type: 'application/xml;charet=ustf-8'\n      })\n      const dt = DateTime.local()\n\n      const creationDate = dt.toISO()\n\n      saveAs(blob, `GDST-EPCIS-${fileLabel}-${creationDate}.xml`)\n    }}>\n    {downloadText}\n  </FillButton>\n)\n\nconst AggregatedXmlDownload = ({\n  disabled,\n  fileLabel,\n  eventCount = 0,\n  aggregatedXml = null\n}) => {\n  return (\n    aggregatedXml && (\n      <>\n        <Accordion margin=\"small\">\n          <AccordionPanel label={`Total ${eventCount} EPCIS Events`}>\n            <AccordionContent>\n              <CodeContainer>{aggregatedXml}</CodeContainer>\n            </AccordionContent>\n          </AccordionPanel>\n        </Accordion>\n\n        <XmlDownloadButton\n          fileLabel={fileLabel}\n          xml={aggregatedXml}\n          disabled={disabled}\n        />\n      </>\n    )\n  )\n}\n\nconst EpcisEventList = ({ epcisXmlList = [] }) => {\n  const [sent, setSent] = useState<SentStateType>('default')\n\n  const onSubmit = async () => {\n    setSent('sending')\n    await Promise.all(epcisXmlList.map(api.freepcis.sendCatchEvent))\n    setSent('sent')\n  }\n\n  return (\n    epcisXmlList.length > 0 && (\n      <>\n        <Heading size=\"small\" level={2}>\n          {epcisXmlList.length} event{epcisXmlList.length > 0 && 's'} found:\n        </Heading>\n        <DataContainer>\n          <Accordion multiple margin=\"small\">\n            {epcisXmlList.map((d, i) => (\n              <AccordionPanel key={i} label={`Event #${i + 1}`}>\n                <AccordionContent>\n                  <CodeContainer>{d}</CodeContainer>\n                </AccordionContent>\n              </AccordionPanel>\n            ))}\n          </Accordion>\n        </DataContainer>\n\n        <Divider />\n        <FillButton disabled={sent !== 'default'} onClick={onSubmit}>\n          {sent === 'sending'\n            ? 'Sending...'\n            : sent === 'sent'\n            ? 'Data sent!'\n            : 'Send to FreEPCIS'}\n        </FillButton>\n      </>\n    )\n  )\n}\n\nexport const CsvFileDrop = ({\n  processFile,\n  dropText = 'Drop your CSV file here, or tap the box to select a file.',\n  className=''\n}) => {\n  const fileInputRef = useRef(null)\n\n  return (\n    <HiddenFileDropContainer onClick={() => fileInputRef.current.click()} className={className}>\n      <FileDrop onDrop={processFile}>\n        <FileDropText>{dropText}</FileDropText>\n      </FileDrop>\n      <HiddenFileInput>\n        <input\n          ref={fileInputRef}\n          accept=\".csv\"\n          type=\"file\"\n          onChange={evt => {\n            processFile(evt.target.files)\n          }}\n        />\n      </HiddenFileInput>\n    </HiddenFileDropContainer>\n  )\n}\n\nexport const CsvFileInput = ({\n  triggerNextStep,\n  singleParser,\n  aggregatedParser,\n  fileLabel,\n  headers\n}: any) => {\n  const [disabled, setDisabled] = useState(false)\n\n  const [epcisXmlList, setEpcisXmlList] = useState([])\n\n  const [aggregatedXml, setAggregatedXml] = useState(null)\n\n  const [eventCount, setEventCount] = useState(0)\n\n  const processFile = async ([file]: any) => {\n    if (!file) return\n\n    if (file.name.split('.').pop() !== 'csv') {\n      return\n    }\n\n    const readerStream = fileReaderStream(file)\n    const [, ...csvRowList] = (await neatCsv(readerStream, {\n      headers\n    })) as any\n\n    console.log(csvRowList)\n    if (singleParser) {\n      setEpcisXmlList(await Promise.all(csvRowList.map(singleParser)))\n    }\n\n    if (aggregatedParser) {\n      setAggregatedXml(await aggregatedParser(csvRowList))\n      setEventCount(csvRowList.length)\n    }\n  }\n\n  return (\n    <FileDropContainer>\n      {!disabled && (\n        <>\n          <CsvFileDrop processFile={processFile} />\n          <StyledGrommet theme={grommet}>\n            <EpcisEventList epcisXmlList={epcisXmlList} />\n\n            <AggregatedXmlDownload\n              disabled={disabled}\n              fileLabel={fileLabel}\n              eventCount={eventCount}\n              aggregatedXml={aggregatedXml}\n            />\n          </StyledGrommet>\n        </>\n      )}\n\n      <FillButton\n        disabled={disabled}\n        onClick={() => {\n          setDisabled(true)\n          triggerNextStep()\n        }}>\n        Finalize\n      </FillButton>\n    </FileDropContainer>\n  )\n}\n\nexport const CatchAndProcessCsvInput = props => (\n  <CsvFileInput\n    singleParser={createSingleCatchAndProcessXml}\n    aggregatedParser={createAggregatedCatchAndProcessXml}\n    fileLabel=\"CatchAndProcess\"\n    headers={csvAggregatedCatchProcessHeader}\n    {...props}\n  />\n)\n\nexport const AggregationDisaggregationCsvInput = props => (\n  <CsvFileInput\n    aggregatedParser={createAggregatedAggregationDisaggregationXml}\n    fileLabel=\"AggregationDisaggregation\"\n    headers={csvAggregationDisaggregationHeader}\n    {...props}\n  />\n)\n\nexport const ShipReceiveCsvInput = props => (\n  <CsvFileInput\n    aggregatedParser={createShipReceiveXml}\n    fileLabel=\"ShipReceive\"\n    headers={csvShipReceiveHeader}\n    {...props}\n  />\n)\n","import React from \"react\";\r\nimport { createPromptArray } from \"../core/utils\";\r\nimport { CsvFileInput } from \"../components/CsvFileInput\";\r\n\r\nconst promptOrder = [\r\n  \"prompt_test\",\r\n\r\n  \"comp_test\",\r\n  \r\n  \"prompt_anotherOne\"\r\n];\r\n\r\nconst promptStructure = {\r\n  comp_test: {\r\n    component: <CsvFileInput />,\r\n    hideInput: true,\r\n    replace: false,\r\n    waitAction: true\r\n  }\r\n} as any;\r\n\r\nexport const createTestPrompt = () =>\r\n  createPromptArray(promptOrder, promptStructure);\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport copy from \"copy-to-clipboard\";\r\n\r\nimport { RpcError } from \"eosjs\";\r\n\r\nimport {\r\n  StyledColumn,\r\n  StyledColumnForm,\r\n  LabeledInput,\r\n  FillButton,\r\n  Divider,\r\n  StyledLabel,\r\n} from \"../_theme\";\r\nimport { useFormState } from \"react-use-form-state\";\r\nimport { dappVault, claimCatchEvent } from \"../api/dapp\";\r\nimport { useIpfs } from \"../hooks/use-ipfs\";\r\nimport api from \"../api\";\r\n\r\n// const debug = require(\"debug\")(\"DappProducerReceiveInput\");\r\n\r\ninterface TestInputFields {\r\n  verifyId: string;\r\n  apiUrl: string;\r\n  txId: number;\r\n}\r\n\r\nconst Container = styled(StyledColumn)`\r\n  word-break: break-word;\r\n  margin: 0.5em;\r\n`;\r\n\r\nconst EpcisDataContainer = styled.div`\r\n  overflow: scroll;\r\n  height: 30vh;\r\n`;\r\n\r\nconst EpcisDataViewer = styled.code`\r\n  font-size: 10px;\r\n`;\r\n\r\nexport const DappProducerReceiveInput = ({\r\n  triggerNextStep,\r\n  previousStep\r\n}: any) => {\r\n  const { apiUrl } = dappVault;\r\n\r\n  const { ipfs, isIpfsReady, ipfsInitError } = useIpfs();\r\n\r\n  const [disabled, setDisabled] = useState(false);\r\n  const [formState, { text }] = useFormState<TestInputFields>({\r\n    apiUrl\r\n  });\r\n  const [error, setError] = useState(\"\");\r\n  const [success, setSuccess] = useState(\"\");\r\n\r\n  const [epcisData, setEpcisData] = useState(\"\");\r\n  const [receiptId, setReceiptId] = useState(\"\");\r\n\r\n  const onFinish = async (event: any) => {\r\n    event.preventDefault();\r\n    setDisabled(true);\r\n    triggerNextStep();\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      {isIpfsReady && (\r\n        <StyledColumnForm\r\n          onSubmit={async event => {\r\n            event.preventDefault();\r\n\r\n            try {\r\n              const catchResult = await claimCatchEvent(formState.values, ipfs);\r\n\r\n              setReceiptId(catchResult.originId);\r\n              setEpcisData(catchResult.epcisData);\r\n\r\n              setSuccess(\"sent\");\r\n              // setSuccess(`IPFS URL: ${nemoTx.data.str}`);\r\n            } catch (err) {\r\n              console.error(err);\r\n              if (err instanceof RpcError) {\r\n                console.log(JSON.stringify(err.json, null, 2));\r\n              } \r\n              setError(err.message);\r\n            }\r\n          }}\r\n        >\r\n          <LabeledInput\r\n            label={\"API\"}\r\n            disabled={disabled}\r\n            required\r\n            {...text(\"apiUrl\")}\r\n            placeholder={\"find a p2p server . . .\"}\r\n          />\r\n\r\n          <LabeledInput\r\n            disabled={disabled}\r\n            label={\"ID\"}\r\n            required\r\n            {...text(\"txId\")}\r\n            placeholder={\"put ID from table here . . .\"}\r\n          />\r\n\r\n          {/* <LabeledInput\r\n            disabled={disabled}\r\n            label={\"CODE\"}\r\n            {...text(\"verifyId\")}\r\n            placeholder={\"(optional) Claim Code\"}\r\n          /> */}\r\n\r\n          <FillButton disabled={disabled}>Pay and Claim</FillButton>\r\n        </StyledColumnForm>\r\n      )}\r\n      <div style={{ color: \"red\" }}>\r\n        {error.length > 0 && <span>ERROR: {error}</span>}\r\n        {ipfsInitError && (\r\n          <span>ERROR: {ipfsInitError.message || ipfsInitError}</span>\r\n        )}\r\n      </div>\r\n      {success.length > 0 && (\r\n        <div>\r\n          <StyledLabel>\r\n            Paid and claimed. Will take ~3 minutes for it to register -\r\n          </StyledLabel>\r\n          <a\r\n            href=\"https://jungle.eosweb.net/account/nemoeosmark1\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\" \r\n          >\r\n            https://jungle.eosweb.net/account/nemoeosmark1\r\n          </a>\r\n          <Divider />\r\n          <StyledLabel> Check your balance here: </StyledLabel>\r\n          <a\r\n            href=\"https://jungle.eosweb.net/account/nemotestero4\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\" \r\n          >\r\n            https://jungle.eosweb.net/account/nemotestero4\r\n          </a>\r\n          <Divider />\r\n          <StyledLabel> Here is your Receipt ID: </StyledLabel>\r\n          <br />\r\n          {receiptId}\r\n          <br />\r\n          <FillButton onClick={() => copy(receiptId)}>\r\n            Click to Copy Receipt ID\r\n          </FillButton>\r\n          <Divider />\r\n          <StyledLabel> Here is the EPCIS data: </StyledLabel>\r\n\r\n          <EpcisDataContainer>\r\n            <EpcisDataViewer>{epcisData}</EpcisDataViewer>\r\n          </EpcisDataContainer>\r\n\r\n          <FillButton onClick={() => copy(epcisData)}>\r\n            Click to Copy EPCIS\r\n          </FillButton>\r\n          <FillButton\r\n            disabled={disabled}\r\n            onClick={async e => {\r\n              e.preventDefault();\r\n              setDisabled(true);\r\n              await api.freepcis.sendCatchEvent(epcisData);\r\n              triggerNextStep();\r\n            }}\r\n          >\r\n            Send to FreEPCIS\r\n          </FillButton>\r\n        </div>\r\n      )}\r\n      <FillButton\r\n        background=\"red\"\r\n        disabled={disabled}\r\n        onClick={onFinish}\r\n      >\r\n        Finalize/Cancel\r\n      </FillButton>\r\n    </Container>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { createPromptArray } from \"../core/utils\";\r\nimport { DappProducerReceiveInput } from \"../components/DappProducerReceiveInput\";\r\n\r\nconst promptOrder = [\r\n  \"prompt_receive\",\r\n\r\n  \"form_dappProducerReceiveInput\",\r\n\r\n  \"prompt_anotherOne\"\r\n];\r\n\r\nconst promptStructure = {\r\n  \"form_dappProducerReceiveInput\": {\r\n    component: <DappProducerReceiveInput />,\r\n    hideInput: true,\r\n    replace: false,\r\n    waitAction: true\r\n  }\r\n} as any;\r\n\r\nexport const createReceivePrompt = () =>\r\n  createPromptArray(promptOrder, promptStructure);\r\n","import neatCsv from 'neat-csv'\nimport { createCsvFileReaderStream, parseUom } from '.'\nimport {\n  csvBusinessDocumentHeader,\n  csvEpcClassHeader,\n  csvLocationHeader,\n  csvObjectEventHeader,\n  csvTransformationEventHeader,\n  csvAggregationEventHeader\n} from './csvHeader'\nimport { DateTime } from 'luxon'\n\nconst debug = require('debug')('TrawlerCsvToXml')\n\nconst withIgnoreError = async fx => {\n  try {\n    return fx()\n  } catch (error) {\n    console.error(error)\n    return ''\n  }\n}\n\nconst parseCsvColumnList = ({ csvData, index, indexKey, itemKeyList }) => {\n  const dataList = []\n\n  const currentData = csvData[index]\n\n  if (itemKeyList.filter(k => !!currentData[k]).length === 0) return dataList\n\n  if (index < csvData.length - 1) {\n    let j = 0\n    do {\n      const nextItem = csvData[index + j]\n      if (\n        itemKeyList.filter((k: string | number) => !!nextItem[k]).length > 0\n      ) {\n        const newItem = {}\n\n        itemKeyList.forEach((k: string | number) => {\n          newItem[k] = nextItem[k] || currentData[k]\n        })\n\n        dataList.push(newItem)\n      }\n      j++\n    } while (csvData[index + j] && !csvData[index + j][indexKey])\n  }\n  return dataList\n}\n\nexport const createAggregationEventXml = file =>\n  withIgnoreError(async () => {\n    const readerStream = createCsvFileReaderStream(file)\n    const parsedData = (await neatCsv(readerStream, {\n      // headers: csvAggregationEventHeader,\n      // skipLines: 5\n      mapHeaders: ({ index }) => csvAggregationEventHeader[index] || null,\n      skipLines: 4\n    })) as any\n    return parsedData\n      .map(\n        (\n          {\n            action,\n            bizStep,\n            informationProvider,\n            productOwner,\n            parentID,\n            eventTime,\n            eventTimeZoneOffset,\n            visibilityEvent,\n            disposition,\n            readPoint_id,\n            bizLocation_id,\n            ...rest\n          },\n          index\n        ) => {\n          if (!action || !bizStep || !eventTime || !informationProvider)\n            return ''\n\n          const epcItemsXml = parseCsvColumnList({\n            csvData: parsedData,\n            index,\n            indexKey: 'informationProvider',\n            itemKeyList: ['childEPCs_epc']\n          })\n            .map(d => `<epc>${d.childEPCs_epc}</epc>`)\n            .join('\\n')\n\n          const childEPCsXml = !!epcItemsXml\n            ? `<childEPCs>${epcItemsXml}</childEPCs>`\n            : ''\n\n          const childQuantityListItem = parseCsvColumnList({\n            csvData: parsedData,\n            index,\n            indexKey: 'informationProvider',\n            itemKeyList: [\n              'extension_childQuantityList_quantityElement_epcClass',\n              'extension_childQuantityList_quantityElement_quantity',\n              'extension_childQuantityList_quantityElement_uom'\n            ]\n          })\n            .map(\n              d => `<quantityElement><epcClass>${d.extension_childQuantityList_quantityElement_epcClass}</epcClass>\n    <quantity>${d.extension_childQuantityList_quantityElement_quantity}</quantity>\n    <uom>${d.extension_childQuantityList_quantityElement_uom}</uom>\n  </quantityElement>`\n            )\n            .join('\\n')\n\n          const childQuantityListXml = !!childQuantityListItem\n            ? `<childQuantityList>${childQuantityListItem}</childQuantityList>`\n            : ''\n\n          const extensionItemsXml = [childQuantityListXml].join('\\n')\n\n          const extensionXml = !!extensionItemsXml\n            ? `<extension>${extensionItemsXml}</extension>`\n            : ''\n\n          return {\n            date: new Date(eventTime),\n            xml: `<AggregationEvent>\n  <eventTime>${eventTime}</eventTime> \n  <eventTimeZoneOffset>${eventTimeZoneOffset}</eventTimeZoneOffset>\n  ${childEPCsXml}\n\n  <action>${action}</action>\n  <bizStep>urn:epcglobal:cbv:bizstep:${bizStep}</bizStep>\n  <disposition>urn:epcglobal:cbv:disp:${disposition}</disposition>\n  <parentID>${parentID}</parentID>\n  \n  <readPoint><id>${readPoint_id}</id></readPoint>\n  <bizLocation><id>${bizLocation_id}</id></bizLocation>\n  ${extensionXml}\n  <gdst:visibilityEvent>${visibilityEvent}</gdst:visibilityEvent>\n  <gdst:productOwner>${productOwner}</gdst:productOwner>\n  <cbvmda:informationProvider>${informationProvider}</cbvmda:informationProvider> \n</AggregationEvent>`\n          }\n        }\n      )\n      .filter(t => !!t.xml)\n  })\nexport const createTransformationEventXml = file =>\n  withIgnoreError(async () => {\n    const readerStream = createCsvFileReaderStream(file)\n    const parsedData = (await neatCsv(readerStream, {\n      // headers: csvTransformationEventHeader,\n      // skipLines: 4\n      mapHeaders: ({ index }) => csvTransformationEventHeader[index] || null,\n      skipLines: 3\n    })) as any\n    return parsedData\n      .map(\n        (\n          {\n            bizStep,\n            informationProvider,\n            productOwner,\n            eventTime,\n            eventTimeZoneOffset,\n            visibilityEvent,\n            disposition,\n            readPoint_id,\n            bizLocation_id,\n            ...rest\n          },\n          index\n        ) => {\n          if (!bizStep || !eventTime || !informationProvider) return ''\n\n          const inputQuantityItemXml = parseCsvColumnList({\n            csvData: parsedData,\n            index,\n            indexKey: 'informationProvider',\n            itemKeyList: [\n              'inputQuantityList_quantityElement_epcClass',\n              'inputQuantityList_quantityElement_quantity',\n              'inputQuantityList_quantityElement_uom'\n            ]\n          })\n            .map(\n              d =>\n                `<quantityElement> \n  <epcClass>${d.inputQuantityList_quantityElement_epcClass}</epcClass>\n  <quantity>${d.inputQuantityList_quantityElement_quantity}</quantity>\n  ${\n    d.inputQuantityList_quantityElement_uom\n      ? `<uom>${d.inputQuantityList_quantityElement_uom}</uom>`\n      : ''\n  }\n</quantityElement>`\n            )\n            .join('\\n')\n\n          const inputQuantityListXml = !!inputQuantityItemXml\n            ? `<inputQuantityList>${inputQuantityItemXml}</inputQuantityList>`\n            : ''\n\n          const outputQuantityItemXml = parseCsvColumnList({\n            csvData: parsedData,\n            index,\n            indexKey: 'informationProvider',\n            itemKeyList: [\n              'outputQuantityList_quantityElement_epcClass',\n              'outputQuantityList_quantityElement_quantity',\n              'outputQuantityList_quantityElement_uom'\n            ]\n          })\n            .map(\n              d =>\n                `<quantityElement> \n    <epcClass>${d.outputQuantityList_quantityElement_epcClass}</epcClass>\n    <quantity>${d.outputQuantityList_quantityElement_quantity}</quantity>\n    ${\n      d.outputQuantityList_quantityElement_uom\n        ? `<uom>${d.outputQuantityList_quantityElement_uom}</uom>`\n        : ''\n    }\n  </quantityElement>`\n            )\n            .join('\\n')\n\n          const outputQuantityListXml = !!outputQuantityItemXml\n            ? `<inputQuantityList>${outputQuantityItemXml}</inputQuantityList>`\n            : ''\n\n          const ilmdCbvmdaItemsXml = [\n            'lotNumber',\n            'productionDate',\n            'bestBeforeDate',\n            'preservationTechniqueCode'\n          ]\n            .filter(k => !!rest[`ilmd_${k}`])\n            .map(k => `<cbvmda:${k}>${rest[`ilmd_${k}`]}</cbvmda:${k}>`)\n            .join('\\n')\n\n          const ilmdCertificationItemsXml = parseCsvColumnList({\n            csvData: parsedData,\n            index,\n            indexKey: 'informationProvider',\n            itemKeyList: [\n              'ilmd_certificationList_certification_certificationAgency',\n              'ilmd_certificationList_certification_certificationIdentification',\n              'ilmd_certificationList_certification_certificationStandard',\n              'ilmd_certificationList_certification_certificationValue'\n            ]\n          })\n            .map(\n              d => `<certification>\n  <certificationStandard>${d.ilmd_certificationList_certification_certificationStandard}</certificationStandard> \n  <certificationAgency>${d.ilmd_certificationList_certification_certificationAgency}</certificationAgency>\n  <certificationValue>${d.ilmd_certificationList_certification_certificationValue}</certificationValue>\n  <certificationIdentification>${d.ilmd_certificationList_certification_certificationIdentification}</certificationIdentification>\n</certification>`\n            )\n            .join('\\n')\n            .trim()\n\n          const ilmdCertificationXml = !!ilmdCertificationItemsXml\n            ? `<cbvmda:certificationList>${ilmdCertificationItemsXml}</cbvmda:certificationList>`\n            : ''\n          const ilmdItemsXml = [ilmdCbvmdaItemsXml, ilmdCertificationXml]\n            .join('\\n')\n            .trim()\n\n          const ilmdXml = !!ilmdItemsXml\n            ? `<ilmd>\n                ${ilmdItemsXml}\n              </ilmd>`\n            : ''\n\n          return {\n            date: new Date(eventTime),\n            xml: `<extension>\n<TransformationEvent>\n  <eventTime>${eventTime}</eventTime> \n  <eventTimeZoneOffset>${eventTimeZoneOffset}</eventTimeZoneOffset>\n  <bizStep>urn:epcglobal:cbv:bizstep:${bizStep}</bizStep>\n  <disposition>urn:epcglobal:cbv:disp:${disposition}</disposition>\n  \n  <readPoint><id>${readPoint_id}</id></readPoint>\n  <bizLocation><id>${bizLocation_id}</id></bizLocation>\n\n  ${inputQuantityListXml}\n  ${outputQuantityListXml}\n  ${ilmdXml}\n  \n  <gdst:visibilityEvent>${visibilityEvent}</gdst:visibilityEvent>\n  <gdst:productOwner>${productOwner}</gdst:productOwner> \n  <cbvmda:informationProvider>${informationProvider}</cbvmda:informationProvider>   \n</TransformationEvent>\n</extension>`\n          }\n        }\n      )\n      .filter(t => !!t)\n  })\n\nexport const createObjectEventXml = file =>\n  withIgnoreError(async () => {\n    const readerStream = createCsvFileReaderStream(file)\n    const parsedData = (await neatCsv(readerStream, {\n      // headers: csvObjectEventHeader,\n      // skipLines: 5\n      mapHeaders: ({ index }) => csvObjectEventHeader[index] || null,\n      skipLines: 4\n    })) as any\n\n    debug(parsedData)\n\n    return parsedData\n      .map(\n        (\n          {\n            action,\n            bizStep,\n            informationProvider,\n            productOwner,\n            eventTime,\n            eventTimeZoneOffset,\n            visibilityEvent,\n            disposition,\n            readPoint_id,\n            bizLocation_id,\n            ...rest\n          },\n          index\n        ) => {\n          if (!action || !eventTime || !informationProvider) return ''\n\n          //#region parse basic lists\n          const epcItemsXml = parseCsvColumnList({\n            csvData: parsedData,\n            index,\n            indexKey: 'informationProvider',\n            itemKeyList: ['epcList_epc']\n          })\n            .map(d => `<epc>${d.epcList_epc}</epc>`)\n            .join('\\n')\n\n          const epcListXml = !!epcItemsXml\n            ? `<epcList>${epcItemsXml}</epcList>`\n            : ''\n\n          const bizTransactionItem = parseCsvColumnList({\n            csvData: parsedData,\n            index,\n            indexKey: 'informationProvider',\n            itemKeyList: [\n              'bizTransactionList_bizTransaction_type',\n              'bizTransactionList_bizTransaction_value'\n            ]\n          })\n            .map(\n              d =>\n                `<bizTransaction type=\"urn:epcglobal:cbv:btt:${d.bizTransactionList_bizTransaction_type}\">${d.bizTransactionList_bizTransaction_value}</bizTransaction>`\n            )\n            .join('\\n')\n\n          const bizTransactionListXml = !!bizTransactionItem\n            ? `<bizTransactionList>${bizTransactionItem}</bizTransactionList>`\n            : ''\n\n          const sourceListItem = parseCsvColumnList({\n            csvData: parsedData,\n            index,\n            indexKey: 'informationProvider',\n            itemKeyList: [\n              'extension_sourceList_source_type',\n              'extension_sourceList_source_value'\n            ]\n          })\n            .map(\n              d =>\n                `<source type=\"urn:epcglobal:cbv:sdt:${d.extension_sourceList_source_type}\">${d.extension_sourceList_source_value}</source>`\n            )\n            .join('\\n')\n\n          const sourceListXml = !!sourceListItem\n            ? `<sourceList>${sourceListItem}</sourceList>`\n            : ''\n\n          const destinationListItem = parseCsvColumnList({\n            csvData: parsedData,\n            index,\n            indexKey: 'informationProvider',\n            itemKeyList: [\n              'extension_destinationList_destination_type',\n              'extension_destinationList_destination_value'\n            ]\n          })\n            .map(\n              d =>\n                `<destination type=\"urn:epcglobal:cbv:sdt:${d.extension_destinationList_destination_type}\">${d.extension_destinationList_destination_value}</destination>`\n            )\n            .join('\\n')\n\n          const destinationListXml = !!destinationListItem\n            ? `<destinationList>${destinationListItem}</destinationList>`\n            : ''\n\n          const quantityListItem = parseCsvColumnList({\n            csvData: parsedData,\n            index,\n            indexKey: 'informationProvider',\n            itemKeyList: [\n              'extension_quantityList_quantityElement_epcClass',\n              'extension_quantityList_quantityElement_quantity',\n              'extension_quantityList_quantityElement_uom'\n            ]\n          })\n            .map(\n              d => `<quantityElement><epcClass>${d.extension_quantityList_quantityElement_epcClass}</epcClass>\n  <quantity>${d.extension_quantityList_quantityElement_quantity}</quantity>\n  <uom>${d.extension_quantityList_quantityElement_uom}</uom>\n</quantityElement>`\n            )\n            .join('\\n')\n\n          const quantityListXml = !!quantityListItem\n            ? `<quantityList>${quantityListItem}</quantityList>`\n            : ''\n          //#endregion\n\n          //#region parse ilmd\n          const ilmdCbvmdaItemsXml = [\n            'productionMethodCode',\n            'harvestEndDate',\n            'harvestStartDate',\n            'unloadingPort'\n          ]\n            .filter(k => !!rest[`extension_ilmd_${k}`])\n            .map(\n              k => `<cbvmda:${k}>${rest[`extension_ilmd_${k}`]}</cbvmda:${k}>`\n            )\n            .join('\\n')\n\n          const ilmdGdstItemsXml = [\n            'FIP',\n            'harvestCertification',\n            'harvestCertificationCoC',\n            'ISSF',\n            'landingDateEnd',\n            'landingDateStart',\n            'ratingsScheme',\n            'ratingsScore',\n            'vesselRegistryLink',\n            'vesselTransponder'\n          ]\n            .filter(k => !!rest[`extension_ilmd_${k}`])\n            .map(k => `<gdst:${k}>${rest[`extension_ilmd_${k}`]}</gdst:${k}>`)\n            .join('\\n')\n\n          const ilmdCertificationItemsXml = parseCsvColumnList({\n            csvData: parsedData,\n            index,\n            indexKey: 'informationProvider',\n            itemKeyList: [\n              'extension_ilmd_certificationList_certification_certificationAgency',\n              'extension_ilmd_certificationList_certification_certificationIdentification',\n              'extension_ilmd_certificationList_certification_certificationStandard',\n              'extension_ilmd_certificationList_certification_certificationValue'\n            ]\n          })\n            .map(\n              d => `<certification>\n  <certificationStandard>${d.extension_ilmd_certificationList_certification_certificationStandard}</certificationStandard> \n  <certificationAgency>${d.extension_ilmd_certificationList_certification_certificationAgency}</certificationAgency>\n  <certificationValue>${d.extension_ilmd_certificationList_certification_certificationValue}</certificationValue>\n  <certificationIdentification>${d.extension_ilmd_certificationList_certification_certificationIdentification}</certificationIdentification>\n</certification>`\n            )\n            .join('\\n')\n            .trim()\n\n          const ilmdCertificationXml = !!ilmdCertificationItemsXml\n            ? `<cbvmda:certificationList>${ilmdCertificationItemsXml}</cbvmda:certificationList>`\n            : ''\n\n          const ilmdItemsXml = [\n            ilmdCbvmdaItemsXml,\n            ilmdGdstItemsXml,\n            ilmdCertificationXml\n          ]\n            .join('\\n')\n            .trim()\n\n          const ilmdXml = !!ilmdItemsXml\n            ? `<ilmd>\n              ${ilmdItemsXml}\n            </ilmd>`\n            : ''\n\n          //#endregion\n\n          const extensionItemsXml = [\n            quantityListXml,\n            sourceListXml,\n            destinationListXml,\n            ilmdXml\n          ].join('\\n')\n\n          const extensionXml = !!extensionItemsXml\n            ? `<extension>${extensionItemsXml}</extension>`\n            : ''\n\n          return {\n            date: new Date(eventTime),\n            xml: `<ObjectEvent>\n    <eventTime>${eventTime}</eventTime> \n    <eventTimeZoneOffset>${eventTimeZoneOffset}</eventTimeZoneOffset>\n    ${epcListXml}\n    <action>${action}</action>\n    <bizStep>urn:epcglobal:cbv:bizstep:${bizStep}</bizStep>\n    <disposition>urn:epcglobal:cbv:disp:${disposition}</disposition>\n    <readPoint><id>${readPoint_id}</id></readPoint>\n    <bizLocation><id>${bizLocation_id}</id></bizLocation>\n    \n    ${bizTransactionListXml}\n    ${extensionXml}\n    <gdst:visibilityEvent>${visibilityEvent}</gdst:visibilityEvent>\n    <gdst:productOwner>${productOwner}</gdst:productOwner>\n    <cbvmda:informationProvider>${informationProvider}</cbvmda:informationProvider> \n</ObjectEvent>`\n          }\n        }\n      )\n      .filter(t => !!t.xml)\n  })\n\nexport const createLocationXml = file =>\n  withIgnoreError(async () => {\n    const readerStream = createCsvFileReaderStream(file)\n    const parsedData = (await neatCsv(readerStream, {\n      // headers: csvLocationHeader,\n      // skipLines: 3\n      mapHeaders: ({ index }) => csvLocationHeader[index] || null,\n      skipLines: 2\n    })) as any\n\n    const vocabArrayKeyList = [\n      'geofencePolygonPolygonPointSeq',\n      'geofencePolygonPolygonPointValue'\n    ]\n\n    const vocabElementListItems = parsedData\n      .map(\n        (\n          {\n            id,\n            informationProvider,\n\n            ...optionalAttributeMap\n          },\n          index\n        ) => {\n          if (!id) return ''\n          const optionalAttributeItems = Object.entries(optionalAttributeMap)\n            .filter(([k, v]) => !!v && !vocabArrayKeyList.includes(k))\n            .map(\n              ([k, v]) =>\n                `<attribute id=\"urn:epcglobal:cbv:mda#${k}\">${v}</attribute>`\n            )\n            .join('\\n')\n\n          const polygonItemsXml = parseCsvColumnList({\n            csvData: parsedData,\n            index,\n            indexKey: 'id',\n            itemKeyList: vocabArrayKeyList\n          })\n            .map(\n              d =>\n                `<polygonPoint seq=\"${d.geofencePolygonPolygonPointSeq}\">${d.geofencePolygonPolygonPointValue}</polygonPoint>`\n            )\n            .join('\\n')\n            .trim()\n\n          const geofanceXml = !!polygonItemsXml\n            ? `<attribute id=\"urn:epcglobal:cbv:tr#geofencePolygon\">${polygonItemsXml}</attribute>`\n            : ''\n\n          return `<VocabularyElement id=\"${id}\">\n  <attribute id=\"urn:epcglobal:cbv:mda#informationProvider\">${informationProvider}</attribute>\n  ${optionalAttributeItems}\n  ${geofanceXml}\n</VocabularyElement>`\n        }\n      )\n      .join('\\n')\n      .trim()\n\n    return `<Vocabulary type=\"urn:epcglobal:epcis:vtype:Location\">\n  <VocabularyElementList>\n    ${vocabElementListItems}\n  </VocabularyElementList>\n</Vocabulary>`\n  })\n\nexport const createEpcClassXml = file =>\n  withIgnoreError(async () => {\n    const readerStream = createCsvFileReaderStream(file)\n    const parsedData = (await neatCsv(readerStream, {\n      mapHeaders: ({ index }) => csvEpcClassHeader[index] || null,\n      skipLines: 2\n      // headers: csvEpcClassHeader,\n      // skipLines: 3\n    })) as any\n\n    debug(parsedData)\n\n    const vocabArrayKeyList = [\n      'grossWeightMeasurementValue',\n      'grossWeightMeasurementUnitCode'\n    ]\n\n    const vocabElementListItems = parsedData\n      .map(\n        (\n          {\n            id,\n            informationProvider,\n            speciesForFisheryStatisticsPurposesCode,\n\n            ...optionalAttributeMap\n          },\n          index\n        ) => {\n          if (!id) return ''\n          const optionalAttributeItems = Object.entries(optionalAttributeMap)\n            .filter(([k, v]) => !!v && !vocabArrayKeyList.includes(k))\n            .map(\n              ([k, v]) =>\n                `<attribute id=\"urn:epcglobal:cbv:mda#${k}\">${v}</attribute>`\n            )\n            .join('\\n')\n\n          const grossWeightDataList = parseCsvColumnList({\n            csvData: parsedData,\n            index,\n            indexKey: 'id',\n            itemKeyList: vocabArrayKeyList\n          })\n\n          const grossWeightItemsXml = grossWeightDataList\n            .map(\n              ({\n                grossWeightMeasurementUnitCode,\n                grossWeightMeasurementValue\n              }) =>\n                `<measurement measurementUnitCode=\"${parseUom(\n                  grossWeightMeasurementUnitCode\n                )}\">${grossWeightMeasurementValue}</measurement>`\n            )\n            .join('\\n')\n            .trim()\n\n          const grossWeightXml = !!grossWeightItemsXml\n            ? `<attribute id=\"urn:epcglobal:cbv:mda#grossWeight\">${grossWeightItemsXml}</attribute>`\n            : ''\n\n          return `<VocabularyElement id=\"${id}\">\n  <attribute id=\"urn:epcglobal:cbv:mda#informationProvider\">${informationProvider}</attribute>\n  <attribute id=\"urn:epcglobal:cbv:mda#speciesForFisheryStatisticsPurposesCode\">${speciesForFisheryStatisticsPurposesCode}</attribute>\n  ${optionalAttributeItems}\n  ${grossWeightXml}\n</VocabularyElement>`\n        }\n      )\n      .join('\\n')\n      .trim()\n\n    return `<Vocabulary type=\"urn:epcglobal:epcis:vtype:EPCClass\">\n    <VocabularyElementList>\n      ${vocabElementListItems}\n    </VocabularyElementList>\n</Vocabulary>`\n  })\n\nexport const createBusinessDocumentHeaderXml = file =>\n  withIgnoreError(async () => {\n    const readerStream = createCsvFileReaderStream(file)\n    const [data] = (await neatCsv(readerStream, {\n      mapHeaders: ({ index }) => csvBusinessDocumentHeader[index] || null\n    })) as any\n\n    const {\n      senderId,\n      senderName,\n      senderEmail,\n      receiverId,\n      receiverName,\n      receiverEmail\n    } = data\n\n    if (\n      !senderId ||\n      !senderName ||\n      !senderEmail ||\n      !receiverId ||\n      !receiverName ||\n      !receiverEmail\n    ) {\n      throw new Error('wrong format')\n    }\n\n    const dt = DateTime.local()\n    const creationDate = dt.toISO()\n\n    return `<sbdh:StandardBusinessDocumentHeader>\n    <sbdh:HeaderVersion>1.0</sbdh:HeaderVersion>\n    <sbdh:Sender>\n        <sbdh:Identifier>${senderId}</sbdh:Identifier>\n        <sbdh:ContactInformation>\n            <sbdh:Contact>${senderName}</sbdh:Contact>\n            <sbdh:EmailAddress>${senderEmail}</sbdh:EmailAddress>\n        </sbdh:ContactInformation>\n    </sbdh:Sender>\n    <sbdh:Receiver>\n        <sbdh:Identifier>${receiverId}</sbdh:Identifier>\n        <sbdh:ContactInformation>\n            <sbdh:Contact>${receiverName}</sbdh:Contact>\n            <sbdh:EmailAddress>${receiverEmail}</sbdh:EmailAddress>\n        </sbdh:ContactInformation>\n    </sbdh:Receiver>\n    <sbdh:DocumentIdentification>\n        <sbdh:Standard>GS1</sbdh:Standard>\n        <sbdh:TypeVersion>3.0</sbdh:TypeVersion>\n        <sbdh:InstanceIdentifier>9999</sbdh:InstanceIdentifier>\n        <sbdh:Type>Seafood Traceability</sbdh:Type>\n        <sbdh:MultipleType>false</sbdh:MultipleType>\n        <sbdh:CreationDateAndTime>${creationDate}</sbdh:CreationDateAndTime>\n    </sbdh:DocumentIdentification>\n</sbdh:StandardBusinessDocumentHeader>`\n  })\n\nexport const createTrawlerXml = ({\n  bdhXml,\n  epcClassXml,\n  locationXml,\n  xmlList\n}) => {\n  return `<?xml version=\"1.0\" encoding=\"UTF-8\"?> \n<epcis:EPCISDocument xmlns:epcis=\"urn:epcglobal:epcis:xsd:1\" \n  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" \n  xmlns:sbdh=\"http://www.unece.org/cefact/namespaces/StandardBusinessDocumentHeader\" \n  schemaVersion=\"0\" \n  creationDate=\"2001-12-17T09:30:47Z\" \n  xsi:schemaLocation=\"urn:epcglobal:epcis:xsd:1  http://www.gs1si.org/BMS/epcis/1_2/EPCglobal-epcis-1_2.xsd\" \n  xmlns:cbvmda=\"urn:epcglobal:cbv:mda\" \n  xmlns:gdst=\"https://traceability-dialogue.org/epcis\">\n  <EPCISHeader>\n    ${bdhXml}\n    <extension>\n      <EPCISMasterData>\n        <VocabularyList> \n          ${epcClassXml}\n          ${locationXml}\n        </VocabularyList>\n      </EPCISMasterData>\n    </extension>\n  </EPCISHeader>\n  <EPCISBody>\n    <EventList>\n      ${xmlList\n        .sort((a, b) => a.date - b.date)\n        .map(i => i.xml)\n        .join('\\n')}\n    </EventList>\n  </EPCISBody>\n</epcis:EPCISDocument>`\n}\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\n\nimport {\n  FileDropContainer,\n  CsvFileDrop,\n  XmlDownloadButton\n} from './CsvFileInput'\n\nimport { FillButton } from '../_theme'\nimport {\n  createTrawlerXml,\n  createBusinessDocumentHeaderXml as createBDHXml,\n  createEpcClassXml,\n  createLocationXml,\n  createObjectEventXml,\n  createTransformationEventXml,\n  createAggregationEventXml\n} from '../api/csvToXml/trawlerCsvToXml'\n\nconst debug = require('debug')('TrawlerEpcisToolsInput')\n\ntype FileDropProps = {\n  fileValid?: boolean\n}\n\nconst StyledCsvFileDrop = styled(CsvFileDrop)<FileDropProps>`\n  margin-bottom: 0.5em;\n  width: 30%;\n  min-width: 250px;\n  .file-drop {\n    height: 50px;\n    color: ${p =>\n      p.fileValid ? p.theme.headerBgColor : p.theme.userFontColor};\n  }\n`\n\nconst DropContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  flex-flow: wrap;\n  justify-content: space-around;\n`\n\nexport const TrawlerEpcisToolsInput = ({ triggerNextStep }: any) => {\n  const [disabled, setDisabled] = useState(false)\n  const [bdhXml, setBdhXml] = useState('')\n  const [bdhFileName, setBdhFileName] = useState('')\n\n  const [epcClassXml, setEpcClassXml] = useState('')\n  const [epcClassFileName, setEpcClassFileName] = useState('')\n\n  const [locationXml, setLocationXml] = useState('')\n  const [locationFileName, setLocationFileName] = useState('')\n\n  const [objectEventXmlList, setObjectEventXmlList] = useState([])\n  const [objectEventFileName, setObjectEventFileName] = useState('')\n\n  const [transformationEventXmlList, setTransformationEventXmlList] = useState(\n    []\n  )\n  const [\n    transformationEventFileName,\n    setTransformationEventFileName\n  ] = useState('')\n\n  const [aggregationEventXmlList, setAggregationEventXmlList] = useState([])\n  const [aggregationEventFileName, setAggregationEventFileName] = useState('')\n\n  const isAnyXmlValid = () =>\n    !!bdhXml ||\n    !!epcClassXml ||\n    !!locationXml ||\n    objectEventXmlList[0] ||\n    transformationEventXmlList[0] ||\n    aggregationEventXmlList[0]\n\n  return (\n    <FileDropContainer>\n      <DropContainer>\n        <StyledCsvFileDrop\n          fileValid={!!bdhXml}\n          dropText={!!bdhXml ? bdhFileName : 'BusinessDocumentHeader'}\n          processFile={async ([file]) => {\n            const newXml = await createBDHXml(file)\n            if (!newXml) return\n            debug(newXml)\n\n            setBdhXml(newXml)\n            setBdhFileName(file.name)\n          }}\n        />\n        <StyledCsvFileDrop\n          fileValid={!!epcClassXml}\n          dropText={!!epcClassXml ? epcClassFileName : 'EPCClass'}\n          processFile={async ([file]) => {\n            const newXml = await createEpcClassXml(file)\n            if (!newXml) return\n            debug(newXml)\n\n            setEpcClassXml(newXml)\n            setEpcClassFileName(file.name)\n          }}\n        />\n        <StyledCsvFileDrop\n          fileValid={!!locationXml}\n          dropText={!!locationXml ? locationFileName : 'Location'}\n          processFile={async ([file]) => {\n            const newXml = await createLocationXml(file)\n            if (!newXml) return\n            debug(newXml)\n\n            setLocationXml(newXml)\n            setLocationFileName(file.name)\n          }}\n        />\n        <StyledCsvFileDrop\n          fileValid={objectEventXmlList[0]}\n          dropText={objectEventXmlList[0] ? objectEventFileName : 'ObjectEvent'}\n          processFile={async ([file]) => {\n            const newXml = await createObjectEventXml(file)\n            if (!newXml) return\n            debug(newXml)\n\n            setObjectEventXmlList(newXml)\n            setObjectEventFileName(file.name)\n          }}\n        />\n        <StyledCsvFileDrop\n          fileValid={transformationEventXmlList[0]}\n          dropText={\n            transformationEventXmlList[0]\n              ? transformationEventFileName\n              : 'TransformationEvent'\n          }\n          processFile={async ([file]) => {\n            const newXml = await createTransformationEventXml(file)\n            if (!newXml) return\n            debug(newXml)\n\n            setTransformationEventXmlList(newXml)\n            setTransformationEventFileName(file.name)\n          }}\n        />\n        <StyledCsvFileDrop\n          fileValid={aggregationEventXmlList[0]}\n          dropText={\n            aggregationEventXmlList[0]\n              ? aggregationEventFileName\n              : 'AggregationEvent'\n          }\n          processFile={async ([file]) => {\n            const newXml = await createAggregationEventXml(file)\n            debug(newXml)\n\n            if (!newXml) return\n            setAggregationEventXmlList(newXml)\n            setAggregationEventFileName(file.name)\n          }}\n        />\n      </DropContainer>\n\n      <XmlDownloadButton\n        disabled={!isAnyXmlValid()}\n        fileLabel=\"Bolton\"\n        xml={createTrawlerXml({\n          bdhXml,\n          epcClassXml,\n          locationXml,\n          xmlList: [\n            ...objectEventXmlList,\n            ...transformationEventXmlList,\n            ...aggregationEventXmlList\n          ]\n        })}\n      />\n\n      <FillButton\n        disabled={disabled}\n        onClick={() => {\n          setDisabled(true)\n          triggerNextStep()\n        }}>\n        Finalize\n      </FillButton>\n    </FileDropContainer>\n  )\n}\n","import React from 'react'\nimport { createPromptArray, createOptionLabel } from '../core/utils'\nimport {\n  CatchAndProcessCsvInput,\n  AggregationDisaggregationCsvInput\n} from '../components/CsvFileInput'\nimport { TrawlerEpcisToolsInput } from '../components/TrawlerEpcisToolsInput'\n\nconst promptOrder = [\n  'prompt_csv',\n  'add_csvType',\n  'comp_catchProcess',\n  'comp_aggregationDisaggregation',\n  'comp_trawlerEpcisTools',\n  'prompt_anotherOne'\n]\n\nconst promptStructure = {\n  add_csvType: {\n    hideInput: true,\n    options: [\n      'csv_catchProcess',\n      'csv_aggregationDisaggregation',\n      'csv_trawlerEpcisTools'\n    ].map(createOptionLabel),\n    triggers: [\n      'comp_catchProcess',\n      'comp_aggregationDisaggregation',\n      'comp_trawlerEpcisTools'\n    ]\n  },\n  comp_catchProcess: {\n    component: <CatchAndProcessCsvInput />,\n    hideInput: true,\n    replace: false,\n    waitAction: true,\n    trigger: 'prompt_anotherOne'\n  },\n  comp_aggregationDisaggregation: {\n    component: <AggregationDisaggregationCsvInput />,\n    hideInput: true,\n    replace: false,\n    waitAction: true,\n    trigger: 'prompt_anotherOne'\n  },\n\n  comp_trawlerEpcisTools: {\n    component: <TrawlerEpcisToolsInput />,\n    hideInput: true,\n    replace: false,\n    waitAction: true,\n    trigger: 'prompt_anotherOne'\n  }\n} as any\n\nexport const createCsvPrompt = () =>\n  createPromptArray(promptOrder, promptStructure)\n","import { strings } from \"./i18n\";\r\nimport { createCatchPrompt } from \"./data/catchPrompt\";\r\nimport { createLandingPrompt } from \"./data/landingPrompt\";\r\nimport { createSalePrompt } from \"./data/salePrompt\";\r\nimport { createSetupCaptainProfilePrompt } from \"./data/setupCaptainProfilePrompt\";\r\nimport createPersistedState from \"use-persisted-state\";\r\nimport { createSelectOptionList } from \"./core/utils\";\r\nimport { createTestPrompt } from \"./data/testPrompt\";\r\nimport { createReceivePrompt } from \"./data/receivePrompt\";\r\nimport { createCsvPrompt } from \"./data/csvPrompt\";\r\n\r\nconst isDebug = localStorage.getItem(\"debug\");\r\n\r\n// import { IDialogue } from \"./react-app-env\";\r\n\r\n// https://github.com/Semantic-Org/Semantic-UI-React/blob/master/docs/src/examples/modules/Dropdown/common.js\r\n\r\nexport const fishes = [\r\n  \"atlanticCod\",\r\n  \"blueCrab\",\r\n  \"dolphinFish\",\r\n  \"grouper\",\r\n  \"kingCrab\",\r\n  \"pacificCod\",\r\n  \"redSnapper\",\r\n  \"seaCucumber\",\r\n  \"shark\",\r\n  \"swordfish\",\r\n  \"albacoreTuna\",\r\n  \"bigeyeTuna\",\r\n  \"skipjackTuna\",\r\n  \"yellowfinTuna\",\r\n  \"bluefinTuna\"\r\n];\r\n\r\nexport const fishOptionList = createSelectOptionList(fishes);\r\n\r\nexport const shipIDTypeList = [\"imo\", \"mmsi\"];\r\n\r\nexport const durationList = [\"days\", \"weeks\", \"months\"];\r\n\r\nexport const durationMultiplier = {\r\n  days: 24 * 60 * 60 * 1000,\r\n  weeks: 7 * 24 * 60 * 60 * 1000,\r\n  months: 30 * 7 * 24 * 60 * 60 * 1000\r\n};\r\n\r\nexport const shipIDTypeOptionList = createSelectOptionList(shipIDTypeList);\r\n\r\nexport const uomMap: any = {\r\n  kilogram: \"KGM\",\r\n  pound: \"LBR\"\r\n};\r\n\r\nexport const productionMethodCodeMap = {\r\n  aquaculture: \"AQUACULTURE\",\r\n  inlandFishery: \"INLAND_FISHERY\",\r\n  marineFishery: \"MARINE_FISHERY\"\r\n} as any;\r\n\r\nexport const fao3AMap: any = {\r\n  atlanticCod: \"LPS\",\r\n  blueCrab: \"CRB\",\r\n  dolphinFish: \"DOL\",\r\n  grouper: \"EWL\",\r\n  kingCrab: \"KCD\",\r\n  pacificCod: \"PCO\",\r\n  redSnapper: \"RES\",\r\n  seaCucumber: \"EHV\",\r\n  shark: \"HXC\",\r\n  swordfish: \"SWO\",\r\n  albacoreTuna: \"ALB\",\r\n  bigeyeTuna: \"BET\",\r\n  skipjackTuna: \"SKJ\",\r\n  yellowfinTuna: \"YFT\",\r\n  bluefinTuna: \"PBF\"\r\n};\r\n\r\nexport const localStorageKey = {\r\n  savedLanguage: \"NEMO_LANGUAGE\",\r\n  captainProfile: \"NEMO_CAPTAIN_PROFILE_TEMP\",\r\n  profile: \"NEMO_PROFILE\",\r\n  chatCache: \"NEMO_CHAT_CACHE\",\r\n  catchCache: \"NEMO_CATCH_CACHE\"\r\n};\r\n\r\nexport const useCaptainProfileState = createPersistedState(\r\n  localStorageKey.captainProfile\r\n);\r\nexport const useLanguageState = createPersistedState(\r\n  localStorageKey.savedLanguage\r\n);\r\nexport const useProfileState = createPersistedState(localStorageKey.profile);\r\n\r\nexport const useCatchCacheState = createPersistedState(\r\n  localStorageKey.catchCache\r\n);\r\n\r\nexport const createSteps = (isProfileSetup: boolean) => [\r\n  ...(isProfileSetup\r\n    ? [\r\n        {\r\n          id: \"prompt_welcome\",\r\n          hideInput: true,\r\n          message: () => strings.prompt_welcome,\r\n          trigger: \"prompt_initial\"\r\n        }\r\n      ]\r\n    : []),\r\n  ...createSetupCaptainProfilePrompt(),\r\n  {\r\n    id: \"prompt_initial\",\r\n    hideInput: true,\r\n    message: () => strings.prompt_initial,\r\n    trigger: \"prompt_events\"\r\n  },\r\n  {\r\n    id: `prompt_anotherOne`,\r\n    hideInput: true,\r\n    message: () => strings.prompt_anotherOne,\r\n    trigger: \"prompt_events\"\r\n  },\r\n  {\r\n    id: `prompt_nothing`,\r\n    hideInput: true,\r\n    message: () => strings.prompt_nothing,\r\n    trigger: \"prompt_end\"\r\n  },\r\n  {\r\n    id: \"prompt_events\",\r\n    hideInput: true,\r\n    options: [\r\n      ...(isDebug ? [\"test\"] : []),\r\n      \"csv\",\r\n      \"receive\",\r\n      \"catch\",\r\n      \"landing\",\r\n      \"sale\",\r\n      \"transport\",\r\n      \"nothing\"\r\n    ].map(value => ({\r\n      value,\r\n      label: `${strings[value]}`,\r\n      trigger: `prompt_${value}`\r\n    }))\r\n  },\r\n  ...[\"transport\"].map(value => ({\r\n    id: `prompt_${value}`,\r\n    message: () => strings.prompt_unavailable,\r\n    trigger: \"prompt_end\"\r\n  })),\r\n  {\r\n    id: \"prompt_end\",\r\n    hideInput: true,\r\n    message: () => strings.prompt_end,\r\n    end: true\r\n  },\r\n  ...createCsvPrompt(),\r\n  ...createReceivePrompt(),\r\n  ...createSalePrompt(),\r\n  ...createCatchPrompt(),\r\n  ...createLandingPrompt(),\r\n  ...(isDebug ? createTestPrompt() : [])\r\n];\r\n","import React, { useState, useRef } from 'react'\r\nimport { useSpring, useChain, config, animated } from 'react-spring'\r\nimport styled from 'styled-components'\r\n\r\nimport { Close } from 'styled-icons/material/Close'\r\nimport { useProfileState, localStorageKey } from '../_data'\r\nimport { useFormState } from 'react-use-form-state'\r\nimport {\r\n  StyledSubmitButton,\r\n  StyledColumnForm,\r\n  StyledButton,\r\n  RowDiv,\r\n  ReviewInput\r\n} from '../_theme'\r\n\r\nexport const CaptainProfileIcon = () => {\r\n  return <div>Profile Icon</div>\r\n}\r\n\r\nconst Container = styled(animated.div)`\r\n  position: absolute;\r\n\r\n  border-radius: 5px;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  align-content: center;\r\n\r\n  background: white;\r\n\r\n  cursor: pointer;\r\n\r\n  will-change: width, height, opacity;\r\n  z-index: 1001;\r\n  top: 0;\r\n  right: 0;\r\n`\r\n\r\nconst ProfileIcon = styled(animated.div)`\r\n  border-radius: 100%;\r\n\r\n  position: relative;\r\n  width: 36px;\r\n  height: 36px;\r\n  background: pink;\r\n\r\n  cursor: pointer;\r\n\r\n  z-index: 1000;\r\n`\r\n\r\nconst CloseProfileModalButton = styled(ProfileIcon)`\r\n  background: white;\r\n  z-index: 1002;\r\n  position: absolute;\r\n  right: 1em;\r\n  top: 1em;\r\n  box-shadow: 0 2px 25px rgba(255, 0, 130, 0.2);\r\n  svg {\r\n    fill: #ff0081;\r\n  }\r\n`\r\n\r\nconst ItemContainer = styled(animated.div)`\r\n  margin: 3em 3em;\r\n`\r\n\r\nconst StyledForm = styled(StyledColumnForm)`\r\n  margin-top: 1em;\r\n`\r\n\r\nexport const CaptainProfile = () => {\r\n  const [open, setOpen] = useState(false)\r\n  const [profile, setProfile] = useProfileState({})\r\n\r\n  const { completed, ...profileFormRest } = profile\r\n\r\n  const [formState, { text }] = useFormState<CaptainProfileReviewFormFields>({\r\n    ...profileFormRest\r\n  })\r\n\r\n  const springRef = useRef(null)\r\n  const { size, ...rest } = useSpring({\r\n    ref: springRef,\r\n    // config: config.stiff,\r\n    from: {\r\n      size: '2%',\r\n      opacity: 0\r\n    },\r\n    to: {\r\n      size: open ? '100%' : '2%',\r\n      opacity: open ? 1 : 0\r\n    }\r\n  }) as any\r\n\r\n  const transRef = useRef(null)\r\n\r\n  const closeButtonRef = useRef(null)\r\n\r\n  const closeButtonPopin = useSpring({\r\n    ref: closeButtonRef,\r\n    config: config.stiff,\r\n    from: { opacity: 0, transform: 'scale(0)' },\r\n    to: { opacity: open ? 1 : 0, transform: open ? 'scale(1)' : 'scale(0)' }\r\n  })\r\n\r\n  useChain(\r\n    open\r\n      ? [springRef, closeButtonRef, transRef]\r\n      : [closeButtonRef, transRef, springRef],\r\n    [0, open ? 0.1 : 0.6]\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <ProfileIcon onClick={() => setOpen(true)} />\r\n      <Container style={{ ...rest, width: size, height: size }}>\r\n        <CloseProfileModalButton\r\n          style={closeButtonPopin}\r\n          onClick={() => setOpen(false)}>\r\n          <Close />\r\n        </CloseProfileModalButton>\r\n        <ItemContainer>\r\n          {/* {transitions.map(({ item, key, props }) => (\r\n            <Item key={key} style={{ ...props, background: item.css }}>\r\n\r\n            </Item>\r\n          ))} */}\r\n\r\n          <StyledForm\r\n            onSubmit={e => {\r\n              e.preventDefault()\r\n\r\n              setProfile({\r\n                ...formState.values,\r\n                completed: true\r\n              })\r\n\r\n              setOpen(false)\r\n            }}>\r\n            {Object.keys(formState.values).map(k => (\r\n              <ReviewInput key={k} label={k} {...text(k as any)} />\r\n            ))}\r\n\r\n            <RowDiv>\r\n              <StyledButton\r\n                onClick={e => {\r\n                  e.preventDefault()\r\n                  localStorage.removeItem(localStorageKey.chatCache)\r\n                  window.location.reload()\r\n                }}>\r\n                Clear chat cache\r\n              </StyledButton>\r\n              <StyledSubmitButton />\r\n            </RowDiv>\r\n          </StyledForm>\r\n        </ItemContainer>\r\n      </Container>\r\n    </>\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Flag from \"react-country-flag\";\r\n\r\nimport Select from \"react-styled-select\";\r\nimport { languages } from \"../i18n\";\r\n\r\nimport {CaptainProfile} from './CaptainProfile'\r\n\r\nconst HeaderContainer = styled.div`\r\n  height: 3.6em;\r\n  background: ${p => p.theme.headerBgColor};\r\n  color: ${p => p.theme.headerFontColor};\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  flex-direction: row;\r\n\r\n  padding-right: 1em;\r\n  padding-left: 1em;\r\n\r\n  h1 {\r\n    font-size: 1.8em;\r\n  }\r\n`;\r\n\r\nconst StyledSelect = styled(Select)`\r\n  width: 9em;\r\n  margin-left: 1em;\r\n  margin-right: 1em;\r\n\r\n  .select-control {\r\n    border-radius: 2em;\r\n    background: #eee;\r\n  }\r\n\r\n  .select-input {\r\n    margin-left: 0.5em;\r\n  }\r\n\r\n  .select-label {\r\n    color: #000;\r\n  }\r\n`;\r\n\r\nexport const Header = ({ language, onLanguageChanged }: any) => {\r\n  return (\r\n    <HeaderContainer>\r\n      <h1>Nemo</h1>\r\n\r\n      <StyledSelect\r\n        value={language}\r\n        options={languages}\r\n        classes={{\r\n          selectControl: \"select-control\",\r\n          selectInput: \"select-input\"\r\n        }}\r\n        valueRenderer={({ value, label }: any) => (\r\n          <div>\r\n            <Flag code={value} svg />{\" \"}\r\n            <span className=\"select-label\">{label}</span>\r\n          </div>\r\n        )}\r\n        onChange={(lang: string) => {\r\n          onLanguageChanged(lang);\r\n        }}\r\n      />\r\n\r\n      <CaptainProfile/>\r\n    </HeaderContainer>\r\n  );\r\n};\r\n","import React, { useState } from 'react'\r\n\r\nimport ChatBot from 'react-simple-chatbot'\r\n\r\nimport styled, { ThemeProvider } from 'styled-components'\r\n\r\nimport { Header } from './components/Header'\r\n\r\nimport { theme, RefreshButton } from './_theme'\r\nimport {\r\n  localStorageKey,\r\n  createSteps,\r\n  useLanguageState,\r\n  useProfileState\r\n} from './_data'\r\nimport { strings, languages } from './i18n'\r\n\r\nimport { version, repository } from '../package.json'\r\n\r\nconst Container = styled.div`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-evenly;\r\n  align-items: center;\r\n`\r\n\r\nconst StyledChatBot = styled(ChatBot)`\r\n  width: 90%;\r\n  height: 90%;\r\n\r\n  .rsc-container {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n\r\n  .rsc-content {\r\n    max-height: 50%;\r\n  }\r\n\r\n  .rsc-os-options {\r\n    display: flex;\r\n    flex-flow: wrap;\r\n    flex-direction: row-reverse;\r\n  }\r\n\r\n  .rsc-os-option-element {\r\n    display: flex;\r\n    height: 3em;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n`\r\n\r\nconst VersionContainer = styled.a`\r\n  position: absolute;\r\n  top: 5px;\r\n  right: 5px;\r\n  font-size: 10px;\r\n  opacity: 0.7;\r\n`\r\n\r\nexport const App = ({ props }: any) => {\r\n  const [hasEnded, setHasEnded] = useState(false)\r\n\r\n  const [language, setLanguage] = useLanguageState(languages[0].value)\r\n\r\n  const [profile] = useProfileState({ completed: false })\r\n  const isProfileSetup = !!profile.completed\r\n\r\n  strings.setLanguage(language)\r\n\r\n  const steps = createSteps(isProfileSetup)\r\n\r\n  const handleLanguageChanged = (newLanguage: string) => {\r\n    if (language === newLanguage) return\r\n\r\n    setLanguage(newLanguage)\r\n\r\n    localStorage.removeItem(localStorageKey.chatCache)\r\n\r\n    window.location.reload()\r\n  }\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Container>\r\n        {hasEnded && <RefreshButton />}\r\n        <VersionContainer\r\n          href={repository}\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\">\r\n          nemo@{version}\r\n        </VersionContainer>\r\n        <StyledChatBot\r\n          {...props}\r\n          headerComponent={\r\n            <Header\r\n              key={language}\r\n              language={language}\r\n              onLanguageChanged={handleLanguageChanged}\r\n            />\r\n          }\r\n          enableMobileAutoFocus\r\n          botAvatar={'assets/avatar.png'}\r\n          hideUserAvatar\r\n          cache={isProfileSetup}\r\n          cacheName={localStorageKey.chatCache}\r\n          userAvatar={'assets/captain.png'}\r\n          placeholder={strings.placeholder}\r\n          userDelay={0}\r\n          steps={steps}\r\n          handleEnd={() => setHasEnded(true)}\r\n        />\r\n      </Container>\r\n    </ThemeProvider>\r\n  )\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport { App } from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import { Api, JsonRpc } from \"eosjs\";\r\nimport { JsSignatureProvider } from \"eosjs/dist/eosjs-jssig\";\r\n\r\nconst debug = require(\"debug\")(\"api.dapp\");\r\n\r\n// Jungle testnet keys\r\nexport const dappVault = {\r\n  ipfsRepo: '/nemo',\r\n  apiUrl: \"https://api.jungle.alohaeos.com:443\",\r\n  keys: [\r\n    \"5JjfJTnv7auXdk3QskJ79SiXo3dfJHhkH785AF7P7KedhyHkbLG\",\r\n    \"5J74G7maytuLsujt5Bn14b3ifbHbgVtxVBU6aDBkpXsobdw4g3w\",\r\n    \"5JdVxGhEgV481QDMS1PMDjhoQRdyuBssFnqjRnVWurpjgDeRb5z\",\r\n    \"5JWmbWCHjMD59QUnwrmvCxTeYgc7PxVRVf4dYNtj7Zs7BjM2XnA\"\r\n  ],\r\n  table: 'nemotablemk2',\r\n  account: {\r\n    eosiotoken: \"eosio.token\",\r\n    contract: \"nemoeosmark1\",\r\n    captain: \"nemotestero3\",\r\n    producer: \"nemotestero4\"\r\n  }\r\n}\r\n\r\nexport const encodeNemoTXValue = (id: string, blockNum: any) => `${id}.NEMOTX.${blockNum}`\r\n\r\nexport const decodeNemoTXValue = (tx: string) => tx.split('.NEMOTX.')\r\n\r\nexport const claimCatchEvent = async ({ txId, apiUrl }: any, ipfs: any) => {\r\n\r\n  // debug()\r\n  const { account, table, keys } = dappVault;\r\n\r\n  const signatureProvider = new JsSignatureProvider(keys);\r\n\r\n  const rpc = new JsonRpc(apiUrl);\r\n\r\n  const api = new Api({ rpc, signatureProvider });\r\n\r\n  const tableData = await rpc.get_table_rows({\r\n    json: true,                 // Get the response as json\r\n    code: account.contract,           // Contract that we target\r\n    scope: account.contract,           // Account that owns the data\r\n    table,          // Table name\r\n    lower_bound: txId,      // Table primary key value\r\n    limit: 1,                   // Here we limit to 1 to get only the\r\n    show_payer: false,         // Optional: Show ram payer\r\n  })\r\n\r\n  debug(tableData);\r\n  // result.trx.trx.actions;\r\n\r\n  const [{\r\n    buyer,\r\n    seller,\r\n    price,\r\n    tax,\r\n    value\r\n  }] = tableData.rows\r\n\r\n  if (buyer.length > 0) {\r\n    throw new Error('Record is already claimed')\r\n  }\r\n\r\n  const result = await api.transact(\r\n    {\r\n      actions: [\r\n        {\r\n          account: account.eosiotoken,\r\n          name: \"transfer\",\r\n          authorization: [\r\n            {\r\n              actor: account.producer,\r\n              permission: \"active\"\r\n            }\r\n          ],\r\n          data: {\r\n            from: account.producer,\r\n            to: seller,\r\n            quantity: price,\r\n            memo: `payment for ${value}`\r\n          }\r\n        },\r\n        {\r\n          account: account.eosiotoken,\r\n          name: \"transfer\",\r\n          authorization: [\r\n            {\r\n              actor: account.producer,\r\n              permission: \"active\"\r\n            }\r\n          ],\r\n          data: {\r\n            from: account.producer,\r\n            to: account.contract,\r\n            quantity: tax,\r\n            memo: `tax for ${value}`\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      blocksBehind: 3,\r\n      expireSeconds: 30\r\n    }\r\n  );\r\n\r\n  const receipt = encodeNemoTXValue(result.transaction_id, result.processed.block_num)\r\n\r\n  const claimResult = await api.transact(\r\n    {\r\n      actions: [\r\n        {\r\n          account: account.contract,\r\n          name: \"claim\",\r\n          authorization: [\r\n            {\r\n              actor: account.producer,\r\n              permission: \"active\"\r\n            }\r\n          ],\r\n          data: {\r\n            buyer: account.producer,\r\n            id: txId,\r\n            receipt\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      blocksBehind: 3,\r\n      expireSeconds: 30\r\n    }\r\n  );\r\n\r\n  const epcisDataBuffer = await ipfs.cat(value)\r\n\r\n  return {\r\n    epcisData: epcisDataBuffer.toString('utf8'),\r\n    originId: encodeNemoTXValue(claimResult.transaction_id, claimResult.processed.block_num)\r\n  }\r\n}\r\n\r\nexport const sendCatchEvent = async ({\r\n  apiUrl,\r\n  price\r\n}: any, ipfs: any, body: any) => {\r\n\r\n  const { account, keys } = dappVault;\r\n\r\n  const content = Buffer.from(body);\r\n  const results = await ipfs.add(content);\r\n\r\n  const { hash } = results[0];\r\n\r\n  const signatureProvider = new JsSignatureProvider(keys);\r\n\r\n  const rpc = new JsonRpc(apiUrl);\r\n\r\n  const api = new Api({ rpc, signatureProvider });\r\n\r\n  const result = await api.transact(\r\n    {\r\n      actions: [\r\n        {\r\n          account: account.contract,\r\n          name: \"submit\",\r\n          authorization: [\r\n            {\r\n              actor: account.captain,\r\n              permission: \"active\"\r\n            }\r\n          ],\r\n          data: {\r\n            seller: account.captain,\r\n            value: hash,\r\n            price,\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      blocksBehind: 3,\r\n      expireSeconds: 30\r\n    }\r\n  );\r\n\r\n  return {\r\n    ipfsHash: hash,\r\n    originId: encodeNemoTXValue(result.transaction_id, result.processed.block_num)\r\n  }\r\n};\r\n"],"sourceRoot":""}